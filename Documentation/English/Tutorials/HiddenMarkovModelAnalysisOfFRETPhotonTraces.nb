(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    512023,       9850]
NotebookOptionsPosition[    500455,       9594]
NotebookOutlinePosition[    504184,       9676]
CellTagsIndexPosition[    504103,       9671]
WindowTitle->Hidden Markov Model analysis of FRET photon traces
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell["FRETICA TECH NOTE", "PacletNameCell",
           TextAlignment->Center,ExpressionUUID->
           "d6803e4d-fbe2-4d7a-9f4e-4d81bfc160fe"], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center,ExpressionUUID->
         "240d0c7e-3a4d-43ea-8e98-e482c695a53f"],
        Background->RGBColor[
         0.3843137254901961, 0.4627450980392157, 0.7019607843137254],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[Cell[BoxData[
     TagBox[
      ActionMenuBox[
       FrameBox[Cell[TextData[{
         "URL",
         " ",
         Cell[BoxData[
          GraphicsBox[
           {GrayLevel[0.66667], Thickness[0.13], 
            LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
           AspectRatio->1,
           ImageSize->20,
           PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
          "cf27bf0f-602f-48a2-9b94-fe90a5a9e780"]
        }],ExpressionUUID->"57b7a354-7ac0-4ecc-b692-5308293149ad"],
        StripOnInput->
         False], {"\<\"Fretica/tutorial/\
HiddenMarkovModelAnalysisOfFRETPhotonTraces\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
             "Fretica/tutorial/HiddenMarkovModelAnalysisOfFRETPhotonTraces"]},
             Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/Fretica/tutorial/\
HiddenMarkovModelAnalysisOfFRETPhotonTraces.html"], StandardForm]], "Input", 
              TextClipboardType -> "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$284283], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"] <> 
            "Fretica/tutorial/HiddenMarkovModelAnalysisOfFRETPhotonTraces" <> 
            ".html"], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"],
      MouseAppearanceTag["LinkHand"]]],
     LineSpacing->{1.4, 0},ExpressionUUID->
     "3f07e396-e47c-4385-b49e-6950e1b283d3"]], "AnchorBar",
     CacheGraphics->False,ExpressionUUID->
     "d83b7397-e649-4686-909c-1d29f049c55e"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1,ExpressionUUID->"a5b8e5ff-8031-4586-97a4-848d58aa8e33"],

Cell[CellGroupData[{

Cell["Hidden Markov Model analysis of FRET photon traces", "TechNoteTitle",
 CellID->134205706,ExpressionUUID->"4f625268-2f04-4d60-b4d6-a4097c7b2823"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<Fretica`\>\"", "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->437123169,ExpressionUUID->"cc5a2123-519e-4ebb-9b61-15886f85987c"],

Cell[CellGroupData[{

Cell["Introduction", "Subsubsection",
 CellID->65771107,ExpressionUUID->"0b1c29be-a292-4063-b332-3a6b6e088686"],

Cell[TextData[{
 StyleBox["Remark: The HMM analysis for FRET photon traces is currently only \
implemented for binned photon traces.\nThe probability ",
  FontSize->14],
 Cell[BoxData[
  RowBox[{
   SubscriptBox["P", "i"], 
   RowBox[{"(", 
    SubscriptBox["S", "A"]}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",
  FontSize->14,ExpressionUUID->"3494d75b-d5ea-43ca-9102-980bc7336886"],
 StyleBox[",",
  FontSize->14],
 Cell[BoxData[
  SubscriptBox["S", "D"]], "InlineFormula",
  FontFamily->"Source Sans Pro",
  FontSize->14,ExpressionUUID->"413862b3-fa9a-4b0c-b9a2-19436b57f857"],
 StyleBox[") that state i emits ",
  FontSize->14],
 Cell[BoxData[
  SubscriptBox["S", "A"]], "InlineFormula",
  FontFamily->"Source Sans Pro",
  FontSize->14,ExpressionUUID->"99245f4d-06bf-46c7-89db-27caa5e3ef15"],
 StyleBox[" acceptor photons and ",
  FontSize->14],
 Cell[BoxData[
  SubscriptBox["S", "D"]], "InlineFormula",
  FontFamily->"Source Sans Pro",
  FontSize->14,ExpressionUUID->"021f9e79-ce6b-487d-9aaf-98df2fc8a40b"],
 StyleBox[" donor photons in a bin is given by ",
  FontSize->14],
 "\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAAAAAAAAAAAA0Lv/DwK/nvo=
     "], {{0, 196}, {1445, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{1445, 196},
   PlotRange->{{0, 1445}, {0, 196}}]], "Input",ExpressionUUID->
  "c2a494f1-d147-43f8-8aa9-ab3be56756b2"],
 StyleBox["\n",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "A"], ",", " ", 
    SubscriptBox["F", "D"]}], TraditionalForm]],
  FontSize->14,ExpressionUUID->"758f8178-f914-4dd6-acf9-2e262c695b27"],
 " :",
 StyleBox[" fluorescence photons in acceptor and donor channels.\n",
  FontSize->14],
 Cell[BoxData[
  RowBox[{"F", " ", "=", " ", 
   RowBox[{
    SubscriptBox["F", "A"], "+", " ", 
    SubscriptBox["F", "D"]}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",
  FontSize->14,ExpressionUUID->"1b733c1c-d5ef-4463-9dd9-d541e5414831"],
 StyleBox[" :total fluorescence photons (Poisson distributed)\n",
  FontSize->14],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["B", "A"], ",", " ", 
    SubscriptBox["B", "D"]}], TraditionalForm]],
  FontSize->14,ExpressionUUID->"4682400a-fa07-470e-af6c-e809e79c07e8"],
 StyleBox[" : background photons in acceptor and donor channels (Poisson \
distributed).\n",
  FontSize->14],
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3V3O8zxCBuBHwAGHbIFdoJ5xyOkgFjAjvo44+ZBmkBASi+hqug0WkMW8
9DdN07RNHDuxneuSQDPzPm0S13F8J479j3/6zz/s/+bn5+evf3/6f3/443//
81/+8sf/+dd/OP2Xf/v9r//x599/+/d/+f2/fvvzb3/5pz/97el//L/T//3v
3/38nP/zLwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AChJczzsd7ufn/1x7T0BAACoRnPJWj8PMhcAAEAkx8Nutz8cuqlL5gIAAIju
uJe5AAAAUpG5AAAA0pG5AAAA0pG5AAAA0pG5AAAA0pG5AAAA0pG5AAAA0pG5
AAAA0pG5AAAA0pG5AAAA0pG5AAAA0pG5YJLmsN9dTpnd/tCsvTMAAORP5qIo
zWH3k8yIk6A9Ya52YhcAAF/IXBSpaY77gfQ1LgM1J8fDy+e/nwOviU/oAgDg
C5mLcvUeOk1PQE33G0IilxMHAIBvZC7K9ZKBAmrx/TvGxLWhzOVBFwAAn8lc
lKv/nCuoEl+D1KjoJHMBADCdzEWx+hEoLP5cvmXkR18GMzpxAAD4RuaiWHHm
EDxnrrEfHXjQ5cQBAOCT7hQCu8PRICkKEmna9tPXjP6oeQsBABhrYIyUTiRF
6eefRR44zZ4pEQAAoAirRK7XzGVoIQAAUKM482eUslkAAIBFrZZ9Ir1EBgAA
kLMoK3NF2LChhQAAQIWCIteUCQrfen7A5jEXAABQoZDINWUZrtHblrkAAID6
9CPXiORzeTwVJSE9bdzQQgAAJmma4373GDm12+2Pjdv45GZ65Lp+Is5Dqe7g
Qo+5AAAY7xy3foboVpKX/pSFXx42Ncf738d5KCVzAQAQ4KUXK3aRq7GRq2lO
aav73DbWOMDOYzZDCwEAGKU/VGuAviWZ+HJ/YIE63NkD5wUAACOMSFyedJGL
sWsh9x9yRYxHj11wWgAA8N3Ipwbu55OFsZHrrr2jELMGJ/lSAAAqNTJyuZ9P
HnpPZUdUzJhTFvZ3QuYCAOCbR+TaX/ukg7MXSlxkImAt5HgLcz1/pRMDAIAR
2sj13HnsrtJ1XqJrtf2DJwGR61LJY4ej2354zAUAwDdtF9YNewoQErnOH4pe
vWUuAADGMf8aJem/fDgq8pw/FD0bXffEWRPPqNlTjXjmGxUJgPx0urAuO2Qv
KHKl3BVnTWzdn3jw523aF04VPu+pSADkpHNH0HWH3E2dJT6py7ljaGF0nUl9
3hfuufC1WHyiIgGQke4oDN1H8pZV5EoyMQedX/ljg3TcK3s+UpEAyMdTJ1bm
Imt5RS6ZK403E6m+/NVe0fOJigRARp56sfqPZG36WsiU5/4r+3mZRUUCICNP
vVjXJnImcm1B+yt77M4cKhIAOXnuxro4ka+ghbkozIeecnMQsxlLRQIgKzIX
hRC5tuBDT/n0T35zRlKRAMhKb1ICd//Ilci1Be+nPTj//n5zRlKRKN95/Tgz
vGzWrc9TfLf8eNgfjoUfQzQy1xfLN3rq56B+5Fq7qjaH/f3UcVWMZrCn3DTH
a2Gv/ZsP0CmKInqjV1xFmq45Hc7pePa7ExmyOtflunf6AhtWS+a6V+a9yvw6
+ba2+2GtRk/9fNVPXCtX1f5pU0OzmIPXcs3mJ381pX04/+0utwPISeRGr6iK
NNYlY11CVh3Hk4uBi8sol7C7P8TvIDTHQ8idgS+Vfp4iqlhtJZA4cy1bXNet
uUMpcw0KbPQi7oD6eXW+mbt/0zLszvfGT5bfq8wiYDWG38FpmsM+ryKe0D7c
H62oJF9FbPRKqUijXQ7o3MkfagsLPJ7sNM3Tmdq9zByOx5frzPWvu+vs7I9x
rkS3LtmMuw9vLpnjejPNcEGUVcVqKYGFnnMtV1y37Wz6DnVuI7ZyML/Ri2PT
9XPiLZiFG0TPuZL4PO1BLkU8tn0YuBKV1XNZQ5xGr4yKFMqN0nRe76Z9Lt3n
32L2GM9b9Y/wi74cyOSnZt1vKLGKVVACS44tXKq47sdUYpWKQubqidfoxbD5
+pkv73NF1zZGA63QqbizKORR7cO7O+a5NCt5m9/olVCR5jDZcDrTe0S9T8yu
tnH6YC+3BQP26/4dZfYKKyiBJTPXcsXV/tU2W66XcLvNYrjJ8JXFjddPtuP9
THO/zqdmBifA9/bhw0jYzbeu481s9PKvSPM8946KP5ys9Hueo/oCvV5UUP8h
du8+yjS/zcqvWMxSQQms+ZwraXHdN1Zo1ZpF5mple1Nny/WTzfjYU54hVid7
TPtw+pvd5cWO858MxK/ttq5TzWj0givS27kUzj/qIdLrOhE87aerQlRh8Wl2
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
JF6dinxWZlBhvu1TDruU0jKZK/D1iMcA2s9XmqctjW33gn/oide11xKOece3
9vrJmtat6uuKdKJtM3Np9DrGdPBvw5I6Y/sG5uk9f9HnctzyCTvBy3GvcNhz
XrZ48yVrHMd5D9rZNafMrNldOW7GO1ALlsDYR1hfRiCGbDP2WMWszvdKLpGj
DUz1Ef9nCGnam8ecTYnqRWijN+nWYOyr2tbqJ2tataqvLUqnKMMXloNo9OZ4
7eM/OplN+xbIUyG9jiw8z8Qd9bFVbSfsWIv0eb6bt3TO6zescW5cEtehvTce
vtp34G+wZAm01WbCSTh7Z+JmrvUrzPe9ymCHElui/Rk6wT4+uXq8i5h0Jcfg
33rk3cQmwUVta/WTda1Y1VcX41yrZ+yWRm+OwWtgt4z6l8OnD5z+9XRJHD/L
/EZP2G+aS759M5/0JQZHn+v74+4ErQRw+WTT6SINH8cSB3JLXOPTSPeDQ8af
2suXwJiXuW4ehxer6Zv7PZlUmOF9Cz4NCrVA5urdL+4W8POKBk3Tf+CcuPzD
f+1PNy5/3e5d9jtbMdal3Fz9ZG1rVfUMzDrb3l7mlu/cRaLRm+Pt4jHDA6vC
J3nY8An7xsR1e6YuHHMq0eOp47Lfn8fYBXcjQqY7/CLt3Ynzzj/GvE7a4Ns7
EF+/YLUSmBC5Yj7ompm5sqowI3ax2NZ9ivSZ6+Um5fvE3e7B5OG9oe3e1Eav
u8nDt8O4f+/5ihanSLdXP8nAGlU9DwHtw6TLXGnPbDR6szzHnd3n61w75HB6
ItruCbuwyxt2u/D62a3bZVXtR+IaObfEs+5Qpv3h0P63bBvEKcfY+VXn/qgp
1ufKy8pTsKxgoIcQ98CHx4Vcn2g93W4LXsl7Vrs3s9G7HEfvQK7Hcj6Y6OuS
b69+kouFq3omyu0UpaPRK8I2T9h1BKSO3ifLal+6iWvSI6B37t+R6wk+aQp4
mWu8Muv/PK+PeaNW+wWH4ge2ewX96AXtKtTBSbcu5U/uJg+uG/psOfX7KXHN
O/red+RaAtNW3Zq0ouyor8q1XGaL+OpbOZJmriUnnAo+84tp9DZZP2FdxbQP
VdLokb17JZ09z06uj3m6eokryjLAmT/mmta3jHnBqDtzPUqq0gMcljJzPUeu
xMU6o90rotHbaP2EtRXRPlRJo0f+5kWuX0VV85fENWdg5V3mT7kmDp6M+Jir
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
AAAAAAAAAAAASvb/wn7ihQ==
     "], {{0, 207}, {1148, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{406.46666666666647`, Automatic},
   ImageSizeRaw->{1148, 207},
   PlotRange->{{0, 1148}, {0, 207}}]], "Input",ExpressionUUID->
  "6e93c018-fdd7-4999-85bd-fd5ec92e1427"],
 StyleBox["\n",
  FontSize->18],
 StyleBox["\[Epsilon] : probability that a fluorescence photon is detected in \
the acceptor channel.\n",
  FontSize->14],
 Cell[BoxData[
  RowBox[{
   SubscriptBox["\[Rho]", "i"], 
   RowBox[{"(", "\[Epsilon]", ")"}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "4c210c88-4574-4d58-8685-029355a10d53"],
 ": distribution of \[Epsilon] for state i.\nIdeally  ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["\[Rho]", "i"], 
   RowBox[{"(", "\[Epsilon]", ")"}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "b171cf1e-bf2b-4f2b-9e78-ebf99bfd769e"],
 "is a delta function for each state i. However, fast fluctuations of the \
transfer efficieny on the timescale of the binning might lead to a \
broadening. \nWe describe this \"intrinsic broadening\" phenomenological by \
an empirical peak function. For this we use the PDF of the beta distribution:"
}], "TechNoteText",
 CellID->275348296,ExpressionUUID->"233fdb07-7ec0-4ac1-9318-779770efd6bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]", "[", "\[Epsilon]_", "]"}], "=", 
  RowBox[{
   RowBox[{"FBetaPeak", "[", 
    RowBox[{"\[Mu]", ",", "\[Nu]"}], "]"}], "[", "\[Epsilon]", 
   "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->117604588,ExpressionUUID->"0d22e9db-2977-43b3-9c75-a0432e432462"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Epsilon]"}], ")"}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Nu]", "-", 
            RowBox[{"\[Mu]", " ", "\[Nu]"}]}]], " ", 
          SuperscriptBox["\[Epsilon]", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"\[Mu]", " ", "\[Nu]"}]}]]}], 
         RowBox[{"Beta", "[", 
          RowBox[{
           RowBox[{"\[Mu]", " ", "\[Nu]"}], ",", 
           RowBox[{"\[Nu]", "-", 
            RowBox[{"\[Mu]", " ", "\[Nu]"}]}]}], "]"}]], 
        RowBox[{"0", "<", "\[Epsilon]", "<", "1"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellContext->"Notebook$$507$316722`",
 CellLabel->"Out[2]=",
 CellID->184550730,ExpressionUUID->"aee0810e-9dc6-4735-8619-cc5a0f406521"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FBetaPeak", "[", 
       RowBox[{"\[Mu]", ",", 
        SuperscriptBox["10", "logv"]}], "]"}], "[", "e", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "500"}], ",", " ", 
     RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Mu]", ",", "0.5"}], "}"}], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"logv", ",", "2"}], "}"}], ",", "0.5", ",", "5"}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->497926310,ExpressionUUID->"788e743a-3988-4f17-ba4b-4737ffa107f4"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`logv$$ = 2, $CellContext`\[Mu]$$ = 0.5, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Mu]$$], 0.5}, 0, 1}, {{
       Hold[$CellContext`logv$$], 2}, 0.5, 5}}, Typeset`size$$ = {
    240., {76., 80.24441160665728}}, Typeset`update$$ = 0, Typeset`initDone$$,
     Typeset`skipInitDone$$ = True, $CellContext`\[Mu]$48858$$ = 
    0, $CellContext`logv$48859$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`logv$$ = 2, $CellContext`\[Mu]$$ = 0.5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Mu]$$, $CellContext`\[Mu]$48858$$, 0], 
        Hold[$CellContext`logv$$, $CellContext`logv$48859$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Fretica`FBetaPeak[$CellContext`\[Mu]$$, 10^$CellContext`logv$$][
        Fretica`e], {Fretica`e, 0, 1}, PlotRange -> All, PlotPoints -> 500, 
        Frame -> True], 
      "Specifications" :> {{{$CellContext`\[Mu]$$, 0.5}, 0, 
         1}, {{$CellContext`logv$$, 2}, 0.5, 5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{288., {130.8544921875, 136.1455078125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellContext->"Notebook$$507$316722`",
 CellLabel->"Out[3]=",
 CellID->618955909,ExpressionUUID->"f78162e9-9165-4e0d-93b9-842ba6193abd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FBetaPeak", "[", 
     RowBox[{"\[Mu]", ",", "\[Nu]"}], "]"}], "[", "\[Epsilon]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0", "<", "\[Mu]", "<", "1"}], ",", 
      RowBox[{"\[Nu]", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->300105834,ExpressionUUID->"b1987f9a-7d73-48b9-8e25-2f625fe063f1"],

Cell[BoxData["1"], "Output",
 CellContext->"Notebook$$507$316722`",
 CellLabel->"Out[4]=",
 CellID->448392583,ExpressionUUID->"19f630cc-4ac6-4b47-a080-ed0613970857"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"\[Epsilon]", " ", 
    RowBox[{
     RowBox[{"FBetaPeak", "[", 
      RowBox[{"\[Mu]", ",", "\[Nu]"}], "]"}], "[", "\[Epsilon]", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0", "<", "\[Mu]", "<", "1"}], ",", 
      RowBox[{"\[Nu]", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->61442167,ExpressionUUID->"95b0df2e-d0db-4e55-b799-7177c02412f2"],

Cell[BoxData["\[Mu]"], "Output",
 CellContext->"Notebook$$507$316722`",
 CellLabel->"Out[5]=",
 CellID->100360402,ExpressionUUID->"1c4dfaad-49ae-40a2-896b-e4bf5ed07d91"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"\[Epsilon]", "-", "\[Mu]"}], ")"}], "2"], " ", 
    RowBox[{
     RowBox[{"FBetaPeak", "[", 
      RowBox[{"\[Mu]", ",", "\[Nu]"}], "]"}], "[", "\[Epsilon]", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0", "<", "\[Mu]", "<", "1"}], ",", 
      RowBox[{"\[Nu]", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->15594363,ExpressionUUID->"a8e8a029-b0ae-46d1-84c1-983664522178"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Mu]"}], 
   RowBox[{"1", "+", "\[Nu]"}]]}]], "Output",
 CellContext->"Notebook$$507$316722`",
 CellLabel->"Out[6]=",
 CellID->263945891,ExpressionUUID->"3e60010c-03ed-4d79-aed1-16204dfc22c5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialisation of the HMM system with binned  photon traces ",
 StyleBox["or  with photon-by-photon traces",
  FontVariations->{"StrikeThrough"->True}]
}], "Subsubsection",
 CellID->96097228,ExpressionUUID->"0d2534ba-cbcc-44f9-8873-6912e5316cbc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FFretHMMInitWithBinnedData"}]], "Input",
 CellLabel->"In[172]:=",
 CellID->48917487,ExpressionUUID->"9a6dde0d-b03c-4275-ade2-6b2fe9b0d002"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FFretHMMInitWithBinnedData[\\!\\(\\*FormBox[\\({\\*\
\\nStyleBox[\\\"t\\\", \\\"TI\\\"] \\*SubscriptBox[\\nStyleBox[\\\"r\\\", \
\\\"TI\\\"], \\\"1\\\"], \\*\\nStyleBox[\\\"t\\\", \\\"TI\\\"] \
\\*SubscriptBox[\\nStyleBox[\\\"r\\\", \\\"TI\\\"], \\\"2\\\"],  ... , \
\\*\\nStyleBox[\\\"t\\\", \\\"TI\\\"] \\*SubscriptBox[\\nStyleBox[\\\"r\\\", \
\\\"TI\\\"], \\nStyleBox[\\\"M\\\", \\\"TI\\\"]], \
\\*SubscriptBox[\\nStyleBox[\\\"T\\\", \\\"TI\\\"], \
\\\"binning\\\"]\\),\\nTraditionalForm]\\)] initializes Fretica's hidden \
Markov system for FRET data with \\!\\(\\*FormBox[\\nStyleBox[\\\"M\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\) binned photon time traces of the form \
\\!\\(\\*FormBox[\\(\\*\\nStyleBox[\\\"t\\\", \\\"TI\\\"] \
\\*SubscriptBox[\\nStyleBox[\\\"r\\\", \\\"TI\\\"], \\nStyleBox[\\\"i\\\", \\\
\"TI\\\"]] \[LongEqual] {{\\*SubscriptBox[\\nStyleBox[\\\"N\\\", \\\"TI\\\"], \
\\nRowBox[{\\nStyleBox[\\\"A\\\", \\\"TI\\\"], \\\"1\\\"}]], \\*SubscriptBox[\
\\nStyleBox[\\\"N\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"D\\\", \
\\\"TI\\\"], \\\"1\\\"}]]}, {\\*SubscriptBox[\\nStyleBox[\\\"N\\\", \
\\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"A\\\", \\\"TI\\\"], \\\"2\\\"}]], \
\\*SubscriptBox[\\nStyleBox[\\\"N\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\
\"D\\\", \\\"TI\\\"], \\\"2\\\"}]]},  ... }\\),\\nTraditionalForm]\\), where \
\\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"N\\\", \\\"TI\\\"], \
\\nStyleBox[\\nRowBox[{\\\"A\\\", \\\"i\\\"}], \
\\\"TI\\\"]],\\nTraditionalForm]\\) and \
\\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"N\\\", \\\"TI\\\"], \
\\nStyleBox[\\nRowBox[{\\\"D\\\", \\\"i\\\"}], \
\\\"TI\\\"]],\\nTraditionalForm]\\) are the acceptor and donor photon counts, \
respectively, of the \\!\\(\\*FormBox[\\nStyleBox[\\\"i\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\)th bin. \
\\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"T\\\", \\\"TI\\\"], \\\"binning\
\\\"],\\nTraditionalForm]\\) is the binning interval. \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FFretHMMInitWithBinnedData", "[", 
                    RowBox[{
                    RowBox[{"Fretica`Private`trlist", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ",", 
                    RowBox[{"_", "?", "NumericQ"}]}], "}"}], ".."}], "}"}], 
                    ".."}], "}"}]}], ",", 
                    RowBox[{"Fretica`Private`Tbinning_", "?", "NumericQ"}]}], 
                    "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "Fretica`Private`unitv", "}"}], ",", 
                    RowBox[{
                    
                    RowBox[{"Fretica`Private`FFretHmmBinning", "=", 
                    "Fretica`Private`Tbinning"}], ";", 
                    
                    RowBox[{"Fretica`Private`FPFretHmmClearTrajectoryList", 
                    "[", "]"}], ";", 
                    RowBox[{"Fretica`Private`unitv", "=", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"1.`", ",", "2"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Fretica`Private`FPFretHmmAppendTrajectory", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{"Flatten", "[", "#1", "]"}], "]"}], "]"}], "&"}], 
                    ")"}], "/@", "Fretica`Private`trlist"}], ";", 
                    
                    RowBox[{"Fretica`Private`FFretHMMmode", "=", 
                    "Fretica`Private`FHMMBinned"}], ";", 
                    RowBox[{"Fretica`Private`FFretHMMTrajectoryCount", "=", 
                    RowBox[{"Length", "[", "Fretica`Private`trlist", "]"}]}], 
                    ";", 
                    RowBox[{"Fretica`Private`FFretHMMStateCount", "=", "0"}], 
                    ";"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"Fretica`FFretHMMInitWithBinnedData\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FFretHMMInitWithBinnedData[\\!\\(\\*FormBox[\\({\\*\
\\nStyleBox[\\\"t\\\", \\\"TI\\\"] \\*SubscriptBox[\\nStyleBox[\\\"r\\\", \
\\\"TI\\\"], \\\"1\\\"], \\*\\nStyleBox[\\\"t\\\", \\\"TI\\\"] \
\\*SubscriptBox[\\nStyleBox[\\\"r\\\", \\\"TI\\\"], \\\"2\\\"],  ... , \
\\*\\nStyleBox[\\\"t\\\", \\\"TI\\\"] \\*SubscriptBox[\\nStyleBox[\\\"r\\\", \
\\\"TI\\\"], \\nStyleBox[\\\"M\\\", \\\"TI\\\"]], \
\\*SubscriptBox[\\nStyleBox[\\\"T\\\", \\\"TI\\\"], \
\\\"binning\\\"]\\),\\nTraditionalForm]\\)] initializes Fretica's hidden \
Markov system for FRET data with \\!\\(\\*FormBox[\\nStyleBox[\\\"M\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\) binned photon time traces of the form \
\\!\\(\\*FormBox[\\(\\*\\nStyleBox[\\\"t\\\", \\\"TI\\\"] \
\\*SubscriptBox[\\nStyleBox[\\\"r\\\", \\\"TI\\\"], \\nStyleBox[\\\"i\\\", \\\
\"TI\\\"]] \[LongEqual] {{\\*SubscriptBox[\\nStyleBox[\\\"N\\\", \\\"TI\\\"], \
\\nRowBox[{\\nStyleBox[\\\"A\\\", \\\"TI\\\"], \\\"1\\\"}]], \\*SubscriptBox[\
\\nStyleBox[\\\"N\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"D\\\", \
\\\"TI\\\"], \\\"1\\\"}]]}, {\\*SubscriptBox[\\nStyleBox[\\\"N\\\", \
\\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"A\\\", \\\"TI\\\"], \\\"2\\\"}]], \
\\*SubscriptBox[\\nStyleBox[\\\"N\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\
\"D\\\", \\\"TI\\\"], \\\"2\\\"}]]},  ... }\\),\\nTraditionalForm]\\), where \
\\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"N\\\", \\\"TI\\\"], \
\\nStyleBox[\\nRowBox[{\\\"A\\\", \\\"i\\\"}], \
\\\"TI\\\"]],\\nTraditionalForm]\\) and \
\\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"N\\\", \\\"TI\\\"], \
\\nStyleBox[\\nRowBox[{\\\"D\\\", \\\"i\\\"}], \
\\\"TI\\\"]],\\nTraditionalForm]\\) are the acceptor and donor photon counts, \
respectively, of the \\!\\(\\*FormBox[\\nStyleBox[\\\"i\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\)th bin. \
\\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"T\\\", \\\"TI\\\"], \\\"binning\
\\\"],\\nTraditionalForm]\\) is the binning interval. \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FFretHMMInitWithBinnedData[\!\(\*FormBox[\({\*\nStyleBox[\"t\", \"TI\"] \
\*SubscriptBox[\nStyleBox[\"r\", \"TI\"], \"1\"], \*\nStyleBox[\"t\", \"TI\"] \
\*SubscriptBox[\nStyleBox[\"r\", \"TI\"], \"2\"],  ... , \*\nStyleBox[\"t\", \
\"TI\"] \*SubscriptBox[\nStyleBox[\"r\", \"TI\"], \nStyleBox[\"M\", \"TI\"]], \
\*SubscriptBox[\nStyleBox[\"T\", \"TI\"], \"binning\"]\),\n\
TraditionalForm]\)] initializes Fretica's hidden Markov system for FRET data \
with \!\(\*FormBox[\nStyleBox[\"M\", \"TI\"],\nTraditionalForm]\) binned \
photon time traces of the form \!\(\*FormBox[\(\*\nStyleBox[\"t\", \"TI\"] \
\*SubscriptBox[\nStyleBox[\"r\", \"TI\"], \nStyleBox[\"i\", \"TI\"]] \
\[LongEqual] {{\*SubscriptBox[\nStyleBox[\"N\", \"TI\"], \nRowBox[{\n\
StyleBox[\"A\", \"TI\"], \"1\"}]], \*SubscriptBox[\nStyleBox[\"N\", \"TI\"], \
\nRowBox[{\nStyleBox[\"D\", \"TI\"], \"1\"}]]}, {\*SubscriptBox[\n\
StyleBox[\"N\", \"TI\"], \nRowBox[{\nStyleBox[\"A\", \"TI\"], \"2\"}]], \
\*SubscriptBox[\nStyleBox[\"N\", \"TI\"], \nRowBox[{\nStyleBox[\"D\", \
\"TI\"], \"2\"}]]},  ... }\),\nTraditionalForm]\), where \
\!\(\*FormBox[SubscriptBox[\nStyleBox[\"N\", \"TI\"], \nStyleBox[\n\
RowBox[{\"A\", \"i\"}], \"TI\"]],\nTraditionalForm]\) and \
\!\(\*FormBox[SubscriptBox[\nStyleBox[\"N\", \"TI\"], \nStyleBox[\n\
RowBox[{\"D\", \"i\"}], \"TI\"]],\nTraditionalForm]\) are the acceptor and \
donor photon counts, respectively, of the \!\(\*FormBox[\nStyleBox[\"i\", \
\"TI\"],\nTraditionalForm]\)th bin. \!\(\*FormBox[SubscriptBox[\nStyleBox[\"T\
\", \"TI\"], \"binning\"],\nTraditionalForm]\) is the binning interval. ", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FFretHMMInitWithBinnedData, {
      Fretica`FFretHMMInitWithBinnedData[
         Pattern[Fretica`Private`trlist, {
           Repeated[{
             Repeated[{
               PatternTest[
                Blank[], NumericQ], 
               PatternTest[
                Blank[], NumericQ]}]}]}], 
         PatternTest[
          Pattern[Fretica`Private`Tbinning, 
           Blank[]], NumericQ]] :> 
       Module[{Fretica`Private`unitv}, 
         Fretica`Private`FFretHmmBinning = Fretica`Private`Tbinning; 
         Fretica`Private`FPFretHmmClearTrajectoryList[]; 
         Fretica`Private`unitv = ConstantArray[1., 2]; 
         Map[Fretica`Private`FPFretHmmAppendTrajectory[
            Round[
             Flatten[#]]]& , Fretica`Private`trlist]; 
         Fretica`Private`FFretHMMmode = Fretica`Private`FHMMBinned; 
         Fretica`Private`FFretHMMTrajectoryCount = 
          Length[Fretica`Private`trlist]; 
         Fretica`Private`FFretHMMStateCount = 0; Null]}], "SubValues" -> None,
     "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Fretica`FFretHMMInitWithBinnedData"|>, False]]], "Output",
 CellLabel->"Out[172]=",
 CellID->813959565,ExpressionUUID->"cabb0e40-208a-4566-8fa6-00ba73c3c24f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FFretHMMInitWithPhotonByPhotonData"}]], "Input",
 CellLabel->"In[173]:=",
 CellID->24955602,ExpressionUUID->"d347db6a-f8c2-4dd2-ae29-d9d8650dd43e"],

Cell[BoxData[
 RowBox[{"Missing", "[", 
  RowBox[{"\<\"UnknownSymbol\"\>", 
   ",", "\<\"FFretHMMInitWithPhotonByPhotonData\"\>"}], "]"}]], "Output",
 CellLabel->"Out[173]=",
 CellID->17347195,ExpressionUUID->"14050392-72b7-4803-9044-934e86a34027"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FFretHMMSetPhotonRates"}]], "Input",
 CellLabel->"In[174]:=",
 CellID->64629733,ExpressionUUID->"4e598bc5-5da7-44d3-b509-1bc342f4964b"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FFretHMMSetPhotonRates[photonrates] sets the \
acceptor and donor photon detection rates assumed for the photon time traces \
that were beforehand initialized using \
FFretHMMInitWithBinnedData.\\nphotonrates is a list that contains, for each \
trajectory \\!\\(\\*FormBox[\\nStyleBox[\\\"i\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\), an expression of the \
form\\n\\!\\(\\*FormBox[\\({{\\*SubscriptBox[\\nStyleBox[\\\"F\\\", \
\\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
\\\"1\\\"}]], \\*SubscriptBox[\\\"\[Mu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"1\\\"}]], \
\\*SubscriptBox[\\\"\[Nu]\\\", \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", \\\"1\\\"}]]}, {\\*SubscriptBox[\\nStyleBox[\\\"F\\\", \
\\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
\\\"2\\\"}]], \\*SubscriptBox[\\\"\[Mu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"2\\\"}]], \
\\*SubscriptBox[\\\"\[Nu]\\\", \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", \\\"2\\\"}]]} ... }, \\*\\nStyleBox[\\\"b\\\", \\\"TI\\\"] \
\\*SubscriptBox[\\nStyleBox[\\\"g\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\
\"A\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"i\\\", \\\"TI\\\"]}]], \
\\*\\nStyleBox[\\\"b\\\", \\\"TI\\\"] \\*SubscriptBox[\\nStyleBox[\\\"g\\\", \
\\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \\\",\\\", \
\\nStyleBox[\\\"i\\\", \\\"TI\\\"]}]]}\\),\\nTraditionalForm]\\).\\nThe first \
list contains for each state \\!\\(\\*FormBox[\\nStyleBox[\\\"s\\\", \\\"TI\\\
\"],\\nTraditionalForm]\\) of the kinetic model the expression \
\\!\\(\\*FormBox[\\({{\\*SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\"], \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]], \\*SubscriptBox[\\\"\[Mu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]], \\*SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]]}\\),\\nTraditionalForm]\\), where \
\\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\"], \\nRowBox[{\
\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\", \
\\\"TI\\\"]}]],\\nTraditionalForm]\\) is the mean total fluorescence \
detection rate (without background), \
\\!\\(\\*FormBox[SubscriptBox[\\\"\[Mu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]],\\nTraditionalForm]\\) is the probability that a detected \
fluorescence photon is detected on the acceptor detection route, and \
\\!\\(\\*FormBox[SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]],\\nTraditionalForm]\\) is a parameter describing the \
intrinsic broadening of state \\!\\(\\*FormBox[\\nStyleBox[\\\"s\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\) in proximity ratio space. \
\\!\\(\\*FormBox[\\(\\*\\nStyleBox[\\\"b\\\", \\\"TI\\\"] \
\\*SubscriptBox[\\nStyleBox[\\\"g\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\
\"A\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"i\\\", \
\\\"TI\\\"]}]]\\),\\nTraditionalForm]\\) and \
\\!\\(\\*FormBox[\\(\\*\\nStyleBox[\\\"b\\\", \\\"TI\\\"] \
\\*SubscriptBox[\\nStyleBox[\\\"g\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\
\"D\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"i\\\", \
\\\"TI\\\"]}]]\\),\\nTraditionalForm]\\) are the acceptor and donor \
background rates, respectively, of trajectory \\!\\(\\*FormBox[\\nStyleBox[\\\
\"i\\\", \\\"TI\\\"],\\nTraditionalForm]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FFretHMMSetPhotonRates", "[", 
                    RowBox[{"Fretica`Private`rateparams", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ",", 
                    RowBox[{"_", "?", "NumericQ"}], ",", 
                    RowBox[{"_", "?", "NumericQ"}]}], "}"}], ".."}], "}"}], 
                    ",", 
                    RowBox[{"_", "?", "NumericQ"}], ",", 
                    RowBox[{"_", "?", "NumericQ"}]}], "}"}], ".."}], "}"}]}], 
                    "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`nstates", ",", 
                    "Fretica`Private`Fmean", ",", "Fretica`Private`mu", ",", 
                    "Fretica`Private`nu", ",", "Fretica`Private`bgA", ",", 
                    "Fretica`Private`bgD"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Fretica`Private`nstates", "=", 
                    RowBox[{"Length", "[", 
                    
                    RowBox[{"Fretica`Private`rateparams", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], ";", 
                    RowBox[{"Fretica`Private`Fmean", "=", 
                    RowBox[{
                    
                    RowBox[{"N", "[", "Fretica`Private`FFretHmmBinning", 
                    "]"}], " ", 
                    RowBox[{"Flatten", "[", 
                    
                    RowBox[{"Fretica`Private`rateparams", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1", ",", "All", ",", "1"}], 
                    "\[RightDoubleBracket]"}], "]"}]}]}], ";", 
                    RowBox[{"Fretica`Private`mu", "=", 
                    RowBox[{"N", "[", 
                    RowBox[{"Flatten", "[", 
                    
                    RowBox[{"Fretica`Private`rateparams", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1", ",", "All", ",", "2"}], 
                    "\[RightDoubleBracket]"}], "]"}], "]"}]}], ";", 
                    RowBox[{"Fretica`Private`nu", "=", 
                    RowBox[{"N", "[", 
                    RowBox[{"Flatten", "[", 
                    
                    RowBox[{"Fretica`Private`rateparams", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1", ",", "All", ",", "3"}], 
                    "\[RightDoubleBracket]"}], "]"}], "]"}]}], ";", 
                    RowBox[{"Fretica`Private`bgA", "=", 
                    RowBox[{
                    
                    RowBox[{"N", "[", "Fretica`Private`FFretHmmBinning", 
                    "]"}], " ", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"#1", ",", "Fretica`Private`nstates"}], "]"}], 
                    "&"}], ")"}], "/@", 
                    
                    RowBox[{"Fretica`Private`rateparams", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], 
                    "]"}]}]}], ";", 
                    RowBox[{"Fretica`Private`bgD", "=", 
                    RowBox[{
                    
                    RowBox[{"N", "[", "Fretica`Private`FFretHmmBinning", 
                    "]"}], " ", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{"#1", ",", "Fretica`Private`nstates"}], "]"}], 
                    "&"}], ")"}], "/@", 
                    
                    RowBox[{"Fretica`Private`rateparams", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}]}], 
                    "]"}]}]}], ";", 
                    RowBox[{"Fretica`Private`nstates", "=", 
                    RowBox[{"Length", "[", 
                    
                    RowBox[{"Fretica`Private`rateparams", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], ";", 
                    
                    RowBox[{"Fretica`Private`FFretHMMGlobalRates", "=", 
                    "False"}], ";", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    
                    RowBox[{"Fretica`Private`FFretHMMmode", "===", 
                    "Fretica`Private`FHMMBinned"}], ",", 
                    RowBox[{"Fretica`Private`FPFretHmmSetPhotonRates", "[", 
                    
                    RowBox[{"Fretica`Private`bgA", ",", "Fretica`Private`bgD",
                     ",", "Fretica`Private`Fmean", ",", "Fretica`Private`mu", 
                    ",", "Fretica`Private`nu", ",", 
                    "Fretica`Private`nstates"}], "]"}], ",", 
                    
                    RowBox[{"Fretica`Private`FFretHMMmode", "===", 
                    "Fretica`Private`FHMMPhotonByPhoton"}], ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}], ",", "True", ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"FHMMSetPhotonRates", "::", "erroptval"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
                    
                    RowBox[{"Fretica`Private`FFretHMMStateCount", "=", 
                    "Fretica`Private`nstates"}], ";"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`FFretHMMSetPhotonRates\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FFretHMMSetPhotonRates[photonrates] sets the \
acceptor and donor photon detection rates assumed for the photon time traces \
that were beforehand initialized using \
FFretHMMInitWithBinnedData.\\nphotonrates is a list that contains, for each \
trajectory \\!\\(\\*FormBox[\\nStyleBox[\\\"i\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\), an expression of the \
form\\n\\!\\(\\*FormBox[\\({{\\*SubscriptBox[\\nStyleBox[\\\"F\\\", \
\\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
\\\"1\\\"}]], \\*SubscriptBox[\\\"\[Mu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"1\\\"}]], \
\\*SubscriptBox[\\\"\[Nu]\\\", \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", \\\"1\\\"}]]}, {\\*SubscriptBox[\\nStyleBox[\\\"F\\\", \
\\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
\\\"2\\\"}]], \\*SubscriptBox[\\\"\[Mu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"2\\\"}]], \
\\*SubscriptBox[\\\"\[Nu]\\\", \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", \\\"2\\\"}]]} ... }, \\*\\nStyleBox[\\\"b\\\", \\\"TI\\\"] \
\\*SubscriptBox[\\nStyleBox[\\\"g\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\
\"A\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"i\\\", \\\"TI\\\"]}]], \
\\*\\nStyleBox[\\\"b\\\", \\\"TI\\\"] \\*SubscriptBox[\\nStyleBox[\\\"g\\\", \
\\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \\\",\\\", \
\\nStyleBox[\\\"i\\\", \\\"TI\\\"]}]]}\\),\\nTraditionalForm]\\).\\nThe first \
list contains for each state \\!\\(\\*FormBox[\\nStyleBox[\\\"s\\\", \\\"TI\\\
\"],\\nTraditionalForm]\\) of the kinetic model the expression \
\\!\\(\\*FormBox[\\({{\\*SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\"], \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]], \\*SubscriptBox[\\\"\[Mu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]], \\*SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]]}\\),\\nTraditionalForm]\\), where \
\\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\"], \\nRowBox[{\
\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\", \
\\\"TI\\\"]}]],\\nTraditionalForm]\\) is the mean total fluorescence \
detection rate (without background), \
\\!\\(\\*FormBox[SubscriptBox[\\\"\[Mu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]],\\nTraditionalForm]\\) is the probability that a detected \
fluorescence photon is detected on the acceptor detection route, and \
\\!\\(\\*FormBox[SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]],\\nTraditionalForm]\\) is a parameter describing the \
intrinsic broadening of state \\!\\(\\*FormBox[\\nStyleBox[\\\"s\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\) in proximity ratio space. \
\\!\\(\\*FormBox[\\(\\*\\nStyleBox[\\\"b\\\", \\\"TI\\\"] \
\\*SubscriptBox[\\nStyleBox[\\\"g\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\
\"A\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"i\\\", \
\\\"TI\\\"]}]]\\),\\nTraditionalForm]\\) and \
\\!\\(\\*FormBox[\\(\\*\\nStyleBox[\\\"b\\\", \\\"TI\\\"] \
\\*SubscriptBox[\\nStyleBox[\\\"g\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\
\"D\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"i\\\", \
\\\"TI\\\"]}]]\\),\\nTraditionalForm]\\) are the acceptor and donor \
background rates, respectively, of trajectory \\!\\(\\*FormBox[\\nStyleBox[\\\
\"i\\\", \\\"TI\\\"],\\nTraditionalForm]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FFretHMMSetPhotonRates[photonrates] sets the acceptor and donor photon \
detection rates assumed for the photon time traces that were beforehand \
initialized using FFretHMMInitWithBinnedData.\nphotonrates is a list that \
contains, for each trajectory \!\(\*FormBox[\nStyleBox[\"i\", \"TI\"],\n\
TraditionalForm]\), an expression of the form\n\
\!\(\*FormBox[\({{\*SubscriptBox[\nStyleBox[\"F\", \"TI\"], \nRowBox[{\n\
StyleBox[\"i\", \"TI\"], \",\", \"1\"}]], \*SubscriptBox[\"\[Mu]\", \n\
RowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \"1\"}]], \*SubscriptBox[\"\[Nu]\", \
\nRowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \"1\"}]]}, {\*SubscriptBox[\n\
StyleBox[\"F\", \"TI\"], \nRowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \
\"2\"}]], \*SubscriptBox[\"\[Mu]\", \nRowBox[{\nStyleBox[\"i\", \"TI\"], \
\",\", \"2\"}]], \*SubscriptBox[\"\[Nu]\", \nRowBox[{\nStyleBox[\"i\", \
\"TI\"], \",\", \"2\"}]]} ... }, \*\nStyleBox[\"b\", \"TI\"] \*SubscriptBox[\n\
StyleBox[\"g\", \"TI\"], \nRowBox[{\nStyleBox[\"A\", \"TI\"], \",\", \n\
StyleBox[\"i\", \"TI\"]}]], \*\nStyleBox[\"b\", \"TI\"] \*SubscriptBox[\n\
StyleBox[\"g\", \"TI\"], \nRowBox[{\nStyleBox[\"D\", \"TI\"], \",\", \n\
StyleBox[\"i\", \"TI\"]}]]}\),\nTraditionalForm]\).\nThe first list contains \
for each state \!\(\*FormBox[\nStyleBox[\"s\", \"TI\"],\nTraditionalForm]\) \
of the kinetic model the expression \!\(\*FormBox[\({{\*SubscriptBox[\n\
StyleBox[\"F\", \"TI\"], \nRowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \n\
StyleBox[\"s\", \"TI\"]}]], \*SubscriptBox[\"\[Mu]\", \nRowBox[{\n\
StyleBox[\"i\", \"TI\"], \",\", \nStyleBox[\"s\", \"TI\"]}]], \*SubscriptBox[\
\"\[Nu]\", \nRowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \nStyleBox[\"s\", \"TI\
\"]}]]}\),\nTraditionalForm]\), where \!\(\*FormBox[SubscriptBox[\n\
StyleBox[\"F\", \"TI\"], \nRowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \n\
StyleBox[\"s\", \"TI\"]}]],\nTraditionalForm]\) is the mean total \
fluorescence detection rate (without background), \!\(\*FormBox[SubscriptBox[\
\"\[Mu]\", \nRowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \nStyleBox[\"s\", \"TI\
\"]}]],\nTraditionalForm]\) is the probability that a detected fluorescence \
photon is detected on the acceptor detection route, and \
\!\(\*FormBox[SubscriptBox[\"\[Nu]\", \nRowBox[{\nStyleBox[\"i\", \"TI\"], \
\",\", \nStyleBox[\"s\", \"TI\"]}]],\nTraditionalForm]\) is a parameter \
describing the intrinsic broadening of state \!\(\*FormBox[\nStyleBox[\"s\", \
\"TI\"],\nTraditionalForm]\) in proximity ratio space. \!\(\*FormBox[\(\*\n\
StyleBox[\"b\", \"TI\"] \*SubscriptBox[\nStyleBox[\"g\", \"TI\"], \nRowBox[{\n\
StyleBox[\"A\", \"TI\"], \",\", \nStyleBox[\"i\", \"TI\"]}]]\),\n\
TraditionalForm]\) and \!\(\*FormBox[\(\*\nStyleBox[\"b\", \"TI\"] \
\*SubscriptBox[\nStyleBox[\"g\", \"TI\"], \nRowBox[{\nStyleBox[\"D\", \
\"TI\"], \",\", \nStyleBox[\"i\", \"TI\"]}]]\),\nTraditionalForm]\) are the \
acceptor and donor background rates, respectively, of trajectory \
\!\(\*FormBox[\nStyleBox[\"i\", \"TI\"],\nTraditionalForm]\). ", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FFretHMMSetPhotonRates, {
      Fretica`FFretHMMSetPhotonRates[
         Pattern[Fretica`Private`rateparams, {
           Repeated[{{
              Repeated[{
                PatternTest[
                 Blank[], NumericQ], 
                PatternTest[
                 Blank[], NumericQ], 
                PatternTest[
                 Blank[], NumericQ]}]}, 
             PatternTest[
              Blank[], NumericQ], 
             PatternTest[
              Blank[], NumericQ]}]}]] :> 
       Module[{Fretica`Private`nstates, Fretica`Private`Fmean, 
          Fretica`Private`mu, Fretica`Private`nu, Fretica`Private`bgA, 
          Fretica`Private`bgD}, Fretica`Private`nstates = Length[
            Part[Fretica`Private`rateparams, 1, 1]]; 
         Fretica`Private`Fmean = N[Fretica`Private`FFretHmmBinning] Flatten[
             Part[Fretica`Private`rateparams, All, 1, All, 1]]; 
         Fretica`Private`mu = N[
            Flatten[
             Part[Fretica`Private`rateparams, All, 1, All, 2]]]; 
         Fretica`Private`nu = N[
            Flatten[
             Part[Fretica`Private`rateparams, All, 1, All, 3]]]; 
         Fretica`Private`bgA = N[Fretica`Private`FFretHmmBinning] Flatten[
             Map[ConstantArray[#, Fretica`Private`nstates]& , 
              Part[Fretica`Private`rateparams, All, 2]]]; 
         Fretica`Private`bgD = N[Fretica`Private`FFretHmmBinning] Flatten[
             Map[ConstantArray[#, Fretica`Private`nstates]& , 
              Part[Fretica`Private`rateparams, All, 3]]]; 
         Fretica`Private`nstates = Length[
            Part[Fretica`Private`rateparams, 1, 1]]; 
         Fretica`Private`FFretHMMGlobalRates = False; 
         Which[Fretica`Private`FFretHMMmode === Fretica`Private`FHMMBinned, 
           Fretica`Private`FPFretHmmSetPhotonRates[
           Fretica`Private`bgA, Fretica`Private`bgD, Fretica`Private`Fmean, 
            Fretica`Private`mu, Fretica`Private`nu, Fretica`Private`nstates], 
           Fretica`Private`FFretHMMmode === 
           Fretica`Private`FHMMPhotonByPhoton, 
           Return[$Failed], True, Message[
             MessageName[Fretica`FHMMSetPhotonRates, "erroptval"]]; 
           Return[$Failed]]; 
         Fretica`Private`FFretHMMStateCount = Fretica`Private`nstates; 
         Null]}], "SubValues" -> None, "DefaultValues" -> None, "NValues" -> 
    None, "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, 
    "FullName" -> "Fretica`FFretHMMSetPhotonRates"|>, False]]], "Output",
 CellLabel->"Out[174]=",
 CellID->90101831,ExpressionUUID->"30a3ee35-37b8-4eb5-8cbf-b3e4b74bc07b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FFretHMMSetPinPfin"}]], "Input",
 CellLabel->"In[175]:=",
 CellID->41426265,ExpressionUUID->"ec94acf9-a33a-4244-b881-16a955768954"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FFretHMMSetPinPfin[ pinpfin ] sets the \
\\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"p\\\", \\\"TI\\\"], \
\\nStyleBox[\\nRowBox[{\\\"i\\\", \\\"n\\\"}], \
\\\"TI\\\"]],\\nTraditionalForm]\\) and \
\\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"p\\\", \\\"TI\\\"], \
\\nStyleBox[\\nRowBox[{\\\"f\\\", \\\"i\\\", \\\"n\\\"}], \
\\\"TI\\\"]],\\nTraditionalForm]\\) vectors for the photon time traces \
(initialized using FFretHMMInitWithBinnedData). The command is required if \
FFretHMMLogLikelihood or FFretHMMViterbi are going to be called with the \
option FHMMpinpfin\[Rule]FMTraceWise.\\npinpfin can be of the form \
\\!\\(\\*FormBox[\\({\\*SubscriptBox[\\nStyleBox[\\\"p\\\", \\\"TI\\\"], \
\\\"in\\\"], \\*SubscriptBox[\\nStyleBox[\\\"p\\\", \\\"TI\\\"], \
\\\"fin\\\"]}\\),\\nTraditionalForm]\\), where \\!\\(\\*FormBox[SubscriptBox[\
\\nStyleBox[\\\"p\\\", \\\"TI\\\"], \\\"in\\\"],\\nTraditionalForm]\\) and \
\\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"p\\\", \\\"TI\\\"], \
\\\"fin\\\"],\\nTraditionalForm]\\) are state population vectors. In this \
case, the vectors will be assumed to be the same for all photon time traces. \
Alternatively, state population vectors can be set for the photon time traces \
individually with pinpfin of the form \
\\!\\(\\*FormBox[\\({{\\*SubscriptBox[\\nStyleBox[\\\"p\\\", \\\"TI\\\"], \
\\\"in1\\\"], \\*SubscriptBox[\\nStyleBox[\\\"p\\\", \\\"TI\\\"], \
\\\"fin1\\\"]},  ... , {\\*SubscriptBox[\\nStyleBox[\\\"p\\\", \\\"TI\\\"], \
\\nRowBox[{\\\"in\\\", \\nStyleBox[\\\"M\\\", \\\"TI\\\"]}]], \
\\*SubscriptBox[\\nStyleBox[\\\"p\\\", \\\"TI\\\"], \\nRowBox[{\\\"fin\\\", \
\\nStyleBox[\\\"M\\\", \\\"TI\\\"]}]]}}\\),\\nTraditionalForm]\\), where \
\\!\\(\\*FormBox[\\nStyleBox[\\\"M\\\", \\\"TI\\\"],\\nTraditionalForm]\\) is \
the number of traces that the HM system was initialized with. \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FFretHMMSetPinPfin", "[", 
                    RowBox[{"Fretica`Private`pinpfin", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ".."}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ".."}], "}"}]}], "}"}], 
                    ".."}], "}"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "Fretica`Private`nstates", "}"}], ",", 
                    RowBox[{
                    RowBox[{"Fretica`Private`nstates", "=", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Fretica`Private`pinpfin", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"AnyTrue", "[", 
                    RowBox[{"Fretica`Private`pinpfin", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "#1", "]"}], "\[NotEqual]", 
                    "Fretica`Private`nstates"}], "&"}], ",", "2"}], "]"}], 
                    ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    
                    RowBox[{"Fretica`Private`FFretHMMGlobalRates", "=", 
                    "False"}], ";", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    
                    RowBox[{"Fretica`Private`FFretHMMmode", "===", 
                    "Fretica`Private`FHMMBinned"}], ",", 
                    RowBox[{"Fretica`Private`FPFretHmmSetPinPfin", "[", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Fretica`Private`pinpfin", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}], "]"}], ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Fretica`Private`pinpfin", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], 
                    "]"}], "]"}], ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Fretica`Private`pinpfin", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], "]"}], ",", 
                    
                    RowBox[{"Fretica`Private`FFretHMMmode", "===", 
                    "Fretica`Private`FHMMPhotonByPhoton"}], ",", 
                    RowBox[{"Fretica`Private`FPMLHSetPinPfin", "[", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Fretica`Private`pinpfin", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}], "]"}], ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Fretica`Private`pinpfin", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], 
                    "]"}], "]"}], ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Fretica`Private`pinpfin", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], "]"}], ",", "True", ",", "$Failed"}], "]"}]}]}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"FFretHMMSetPinPfin", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Fretica`Private`pin", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ".."}], "}"}]}], ",", 
                    RowBox[{"Fretica`Private`pfin", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ".."}], "}"}]}]}], "}"}], 
                    "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "Fretica`Private`pin", "]"}], 
                    "\[NotEqual]", "Fretica`Private`FFretHMMStateCount"}], 
                    "||", 
                    RowBox[{
                    RowBox[{"Length", "[", "Fretica`Private`pfin", "]"}], 
                    "\[NotEqual]", "Fretica`Private`FFretHMMStateCount"}]}], 
                    ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    RowBox[{"FFretHMMSetPinPfin", "[", 
                    RowBox[{"ConstantArray", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`pin", ",", 
                    "Fretica`Private`pfin"}], "}"}], ",", 
                    "Fretica`Private`FFretHMMTrajectoryCount"}], "]"}], "]"}],
                     ";"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`FFretHMMSetPinPfin\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FFretHMMSetPinPfin[ pinpfin ] sets the \
\\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"p\\\", \\\"TI\\\"], \
\\nStyleBox[\\nRowBox[{\\\"i\\\", \\\"n\\\"}], \
\\\"TI\\\"]],\\nTraditionalForm]\\) and \
\\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"p\\\", \\\"TI\\\"], \
\\nStyleBox[\\nRowBox[{\\\"f\\\", \\\"i\\\", \\\"n\\\"}], \
\\\"TI\\\"]],\\nTraditionalForm]\\) vectors for the photon time traces \
(initialized using FFretHMMInitWithBinnedData). The command is required if \
FFretHMMLogLikelihood or FFretHMMViterbi are going to be called with the \
option FHMMpinpfin\[Rule]FMTraceWise.\\npinpfin can be of the form \
\\!\\(\\*FormBox[\\({\\*SubscriptBox[\\nStyleBox[\\\"p\\\", \\\"TI\\\"], \
\\\"in\\\"], \\*SubscriptBox[\\nStyleBox[\\\"p\\\", \\\"TI\\\"], \
\\\"fin\\\"]}\\),\\nTraditionalForm]\\), where \\!\\(\\*FormBox[SubscriptBox[\
\\nStyleBox[\\\"p\\\", \\\"TI\\\"], \\\"in\\\"],\\nTraditionalForm]\\) and \
\\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"p\\\", \\\"TI\\\"], \
\\\"fin\\\"],\\nTraditionalForm]\\) are state population vectors. In this \
case, the vectors will be assumed to be the same for all photon time traces. \
Alternatively, state population vectors can be set for the photon time traces \
individually with pinpfin of the form \
\\!\\(\\*FormBox[\\({{\\*SubscriptBox[\\nStyleBox[\\\"p\\\", \\\"TI\\\"], \
\\\"in1\\\"], \\*SubscriptBox[\\nStyleBox[\\\"p\\\", \\\"TI\\\"], \
\\\"fin1\\\"]},  ... , {\\*SubscriptBox[\\nStyleBox[\\\"p\\\", \\\"TI\\\"], \
\\nRowBox[{\\\"in\\\", \\nStyleBox[\\\"M\\\", \\\"TI\\\"]}]], \
\\*SubscriptBox[\\nStyleBox[\\\"p\\\", \\\"TI\\\"], \\nRowBox[{\\\"fin\\\", \
\\nStyleBox[\\\"M\\\", \\\"TI\\\"]}]]}}\\),\\nTraditionalForm]\\), where \
\\!\\(\\*FormBox[\\nStyleBox[\\\"M\\\", \\\"TI\\\"],\\nTraditionalForm]\\) is \
the number of traces that the HM system was initialized with. \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FFretHMMSetPinPfin[ pinpfin ] sets the \!\(\*FormBox[SubscriptBox[\n\
StyleBox[\"p\", \"TI\"], \nStyleBox[\nRowBox[{\"i\", \"n\"}], \"TI\"]],\n\
TraditionalForm]\) and \!\(\*FormBox[SubscriptBox[\nStyleBox[\"p\", \"TI\"], \
\nStyleBox[\nRowBox[{\"f\", \"i\", \"n\"}], \"TI\"]],\nTraditionalForm]\) \
vectors for the photon time traces (initialized using \
FFretHMMInitWithBinnedData). The command is required if FFretHMMLogLikelihood \
or FFretHMMViterbi are going to be called with the option \
FHMMpinpfin\[Rule]FMTraceWise.\npinpfin can be of the form \
\!\(\*FormBox[\({\*SubscriptBox[\nStyleBox[\"p\", \"TI\"], \"in\"], \
\*SubscriptBox[\nStyleBox[\"p\", \"TI\"], \"fin\"]}\),\nTraditionalForm]\), \
where \!\(\*FormBox[SubscriptBox[\nStyleBox[\"p\", \"TI\"], \"in\"],\n\
TraditionalForm]\) and \!\(\*FormBox[SubscriptBox[\nStyleBox[\"p\", \"TI\"], \
\"fin\"],\nTraditionalForm]\) are state population vectors. In this case, the \
vectors will be assumed to be the same for all photon time traces. \
Alternatively, state population vectors can be set for the photon time traces \
individually with pinpfin of the form \!\(\*FormBox[\({{\*SubscriptBox[\n\
StyleBox[\"p\", \"TI\"], \"in1\"], \*SubscriptBox[\nStyleBox[\"p\", \"TI\"], \
\"fin1\"]},  ... , {\*SubscriptBox[\nStyleBox[\"p\", \"TI\"], \n\
RowBox[{\"in\", \nStyleBox[\"M\", \"TI\"]}]], \*SubscriptBox[\n\
StyleBox[\"p\", \"TI\"], \nRowBox[{\"fin\", \nStyleBox[\"M\", \"TI\"]}]]}}\),\
\nTraditionalForm]\), where \!\(\*FormBox[\nStyleBox[\"M\", \"TI\"],\n\
TraditionalForm]\) is the number of traces that the HM system was initialized \
with. ", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FFretHMMSetPinPfin, {Fretica`FFretHMMSetPinPfin[
         Pattern[Fretica`Private`pinpfin, {
           Repeated[{{
              Repeated[
               PatternTest[
                Blank[], NumericQ]]}, {
              Repeated[
               PatternTest[
                Blank[], NumericQ]]}}]}]] :> 
       Module[{Fretica`Private`nstates}, Fretica`Private`nstates = Length[
            Part[Fretica`Private`pinpfin, 1, 1]]; If[
           AnyTrue[
           Fretica`Private`pinpfin, Length[#] != Fretica`Private`nstates& , 
            2], 
           Return[$Failed]]; Fretica`Private`FFretHMMGlobalRates = False; 
         Which[Fretica`Private`FFretHMMmode === Fretica`Private`FHMMBinned, 
           Fretica`Private`FPFretHmmSetPinPfin[
            N[
             Flatten[
              Part[Fretica`Private`pinpfin, All, 1]]], 
            N[
             Flatten[
              Part[Fretica`Private`pinpfin, All, 2]]], 
            Length[
             Part[Fretica`Private`pinpfin, 1, 1]]], 
           Fretica`Private`FFretHMMmode === 
           Fretica`Private`FHMMPhotonByPhoton, 
           Fretica`Private`FPMLHSetPinPfin[
            N[
             Flatten[
              Part[Fretica`Private`pinpfin, All, 1]]], 
            N[
             Flatten[
              Part[Fretica`Private`pinpfin, All, 2]]], 
            Length[
             Part[Fretica`Private`pinpfin, 1, 1]]], True, $Failed]], 
       Fretica`FFretHMMSetPinPfin[{
          Pattern[Fretica`Private`pin, {
            Repeated[
             PatternTest[
              Blank[], NumericQ]]}], 
          Pattern[Fretica`Private`pfin, {
            Repeated[
             PatternTest[
              Blank[], NumericQ]]}]}] :> Module[{}, If[
           Or[
           Length[Fretica`Private`pin] != Fretica`Private`FFretHMMStateCount, 
            Length[Fretica`Private`pfin] != 
            Fretica`Private`FFretHMMStateCount], 
           Return[$Failed]]; Fretica`FFretHMMSetPinPfin[
           
           ConstantArray[{Fretica`Private`pin, Fretica`Private`pfin}, 
            Fretica`Private`FFretHMMTrajectoryCount]]; Null]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Fretica`FFretHMMSetPinPfin"|>, False]]], "Output",
 CellLabel->"Out[175]=",
 CellID->16955868,ExpressionUUID->"5d99b2c3-c819-4354-8ff7-bfdbf95c9945"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
FFretHMMLogLikelihood, FHMMFretViterbi, and FFretHMMForwardBackward\
\>", "Subsubsection",
 CellID->4346292,ExpressionUUID->"59cc6421-ed9d-4ac0-b6c2-99722a6a6fbf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FFretHMMLogLikelihood"}]], "Input",
 CellLabel->"In[176]:=",
 CellID->193186216,ExpressionUUID->"2abb257d-f889-449d-a8da-3fd0e82a0280"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FFretHMMLogLikelihood[\\!\\(\\*FormBox[\\nStyleBox[\
\\\"K\\\", \\\"TI\\\"],\\nTraditionalForm]\\)] or\\nFFretHMMLogLikelihood[\\!\
\\(\\*FormBox[\\nStyleBox[\\\"K\\\", \\\"TI\\\"],\\nTraditionalForm]\\), \
photonrates]\\nreturns the total log\[Hyphen]likelihood of the HMM summed \
over all previously initialized trajectories assuming the rate matrix \
\\!\\(\\*FormBox[\\nStyleBox[\\\"K\\\", \\\"TI\\\"],\\nTraditionalForm]\\). \
\\nFor FFretHMMLogLikelihood[\\!\\(\\*FormBox[\\nStyleBox[\\\"K\\\", \\\"TI\\\
\"],\\nTraditionalForm]\\)], the photon rates set with FFretHMMSetPhotonRates \
are used. With FFretHMMLogLikelihood[\\!\\(\\*FormBox[\\nStyleBox[\\\"K\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\), photonrates], the photon rates given in \
photonrates are used. \\nphotonrates is a list that contains, for each \
trajectory \\!\\(\\*FormBox[\\nStyleBox[\\\"i\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\), an expression of the \
form\\n\\!\\(\\*FormBox[\\({{{\\*SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\
\"], \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"1\\\"}]], \
\\*SubscriptBox[\\\"\[Mu]\\\", \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", \\\"1\\\"}]], \\*SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"1\\\"}]]}, \
{\\*SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\"], \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"2\\\"}]], \
\\*SubscriptBox[\\\"\[Mu]\\\", \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", \\\"2\\\"}]], \\*SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"2\\\"}]]} ... \
}, \\*\\nStyleBox[\\\"b\\\", \\\"TI\\\"] \
\\*SubscriptBox[\\nStyleBox[\\\"g\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\
\"A\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"i\\\", \\\"TI\\\"]}]], \
\\*\\nStyleBox[\\\"b\\\", \\\"TI\\\"] \\*SubscriptBox[\\nStyleBox[\\\"g\\\", \
\\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \\\",\\\", \
\\nStyleBox[\\\"i\\\", \\\"TI\\\"]}]]}\\),\\nTraditionalForm]\\).\\nThe first \
list contains for each state \\!\\(\\*FormBox[\\nStyleBox[\\\"s\\\", \\\"TI\\\
\"],\\nTraditionalForm]\\) of the kinetic model the expression \
\\!\\(\\*FormBox[\\({\\*SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\"], \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]], \\*SubscriptBox[\\\"\[Mu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]], \\*SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]]}\\),\\nTraditionalForm]\\), where \
\\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\"], \\nRowBox[{\
\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\", \
\\\"TI\\\"]}]],\\nTraditionalForm]\\) is the mean total fluorescence \
detection rate (without background), \
\\!\\(\\*FormBox[SubscriptBox[\\\"\[Mu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]],\\nTraditionalForm]\\) is the probability that a detected \
fluorescence photon is detected on the acceptor detection route, and \
\\!\\(\\*FormBox[SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]],\\nTraditionalForm]\\) is a parameter describing the \
intrinsic broadening of state \\!\\(\\*FormBox[\\nStyleBox[\\\"s\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\) in proximity ratio space. \
\\!\\(\\*FormBox[\\(\\*\\nStyleBox[\\\"b\\\", \\\"TI\\\"] \
\\*SubscriptBox[\\nStyleBox[\\\"g\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\
\"A\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"i\\\", \
\\\"TI\\\"]}]]\\),\\nTraditionalForm]\\) and \
\\!\\(\\*FormBox[\\(\\*\\nStyleBox[\\\"b\\\", \\\"TI\\\"] \
\\*SubscriptBox[\\nStyleBox[\\\"g\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\
\"D\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"i\\\", \
\\\"TI\\\"]}]]\\),\\nTraditionalForm]\\) are the acceptor and donor \
background rates, respectively, of trajectory \\!\\(\\*FormBox[\\nStyleBox[\\\
\"i\\\", \\\"TI\\\"],\\nTraditionalForm]\\).\\n\\nFFretHMMLogLikelihood has \
the option FHMMpinpfin. The default setting is FHMMpinpfin\[Rule]FHMMOnePeq, \
in which case pini\[LongEqual]peq with \
\\!\\(\\*FormBox[\\(\\*\\nStyleBox[\\\"K\\\", \\\"TI\\\"] . \\*\\nStyleBox[\\\
\"p\\\", \\\"TI\\\"] \\*\\nStyleBox[\\\"e\\\", \\\"TI\\\"] \
\\*\\nStyleBox[\\\"q\\\", \\\"TI\\\"] \[LongEqual] \
0\\),\\nTraditionalForm]\\), and pfinal\[LongEqual]\\!\\(\\*FormBox[\\({\
\[Null]\\),\\nTraditionalForm]\\)1,1,...\\!\\(\\*FormBox[\\(}\\),\\\
nTraditionalForm]\\) are used in the calculations. Alternatively, pini and \
pfinal can be set individually for each trace using FFretHMMSetPinPfin. The \
option is then FHMMpinpfin\[Rule]FMTraceWise. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FFretHMMLogLikelihood", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "Fretica`Private`Km_", "?", "FNumericSquareMatrixQ"}], 
                    ",", 
                    RowBox[{"Fretica`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "Fretica`Private`lh", "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "Fretica`Private`Km", "]"}], 
                    "\[NotEqual]", "Fretica`Private`FFretHMMStateCount"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"FHMMLogLikelihood", "::", "dimerr"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    
                    RowBox[{"Fretica`Private`FFretHMMmode", "===", 
                    "Fretica`Private`FHMMBinned"}], ",", 
                    RowBox[{"Fretica`Private`lh", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"OptionValue", "[", "FHMMpinpfin", "]"}], "===", 
                    "FHMMPeqOne"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"Fretica`Private`FFretHMMGlobalRates", ",", 
                    
                    RowBox[{"Fretica`Private`FPFretHmmGetLikelihoodPeqFromK", 
                    "[", 
                    RowBox[{
                    RowBox[{"Fretica`Private`FFretHmmBinning", " ", 
                    RowBox[{"N", "[", "Fretica`Private`FFretHMMbgA", "]"}]}], 
                    ",", 
                    RowBox[{"Fretica`Private`FFretHmmBinning", " ", 
                    RowBox[{"N", "[", "Fretica`Private`FFretHMMbgD", "]"}]}], 
                    ",", 
                    RowBox[{"Fretica`Private`FFretHmmBinning", " ", 
                    
                    RowBox[{"N", "[", "Fretica`Private`FFretHMMFmean", 
                    "]"}]}], ",", 
                    RowBox[{"N", "[", "Fretica`Private`FFretHMMmu", "]"}], 
                    ",", 
                    RowBox[{"N", "[", "Fretica`Private`FFretHMMnu", "]"}], 
                    ",", 
                    RowBox[{"Fretica`Private`FFretHmmBinning", " ", 
                    RowBox[{"N", "[", 
                    RowBox[{"Flatten", "[", "Fretica`Private`Km", "]"}], 
                    "]"}]}]}], "]"}], ",", 
                    
                    RowBox[{"Fretica`Private`FPFretHmmGetLikelihoodPeqFromK", 
                    "[", 
                    RowBox[{
                    RowBox[{"Fretica`Private`FFretHmmBinning", " ", 
                    RowBox[{"N", "[", 
                    RowBox[{"Flatten", "[", "Fretica`Private`Km", "]"}], 
                    "]"}]}], ",", 
                    RowBox[{"Length", "[", "Fretica`Private`Km", "]"}]}], 
                    "]"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "FHMMpinpfin", "]"}], "===", 
                    "FHMMTraceWise"}], ",", 
                    RowBox[{"Fretica`Private`FPHmmGetLikelihood", "[", 
                    RowBox[{
                    RowBox[{"Fretica`Private`FFretHmmBinning", " ", 
                    RowBox[{"N", "[", 
                    RowBox[{"Flatten", "[", "Fretica`Private`Km", "]"}], 
                    "]"}]}], ",", 
                    RowBox[{"Length", "[", "Fretica`Private`Km", "]"}]}], 
                    "]"}], ",", "True", ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"FHMMLogLikelihood", "::", "erroptval"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}]}], ",", 
                    
                    RowBox[{"Fretica`Private`FFretHMMmode", "===", 
                    "Fretica`Private`FHMMPhotonByPhoton"}], ",", 
                    RowBox[{"Fretica`Private`lh", "=", 
                    RowBox[{"-", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"OptionValue", "[", "FHMMpinpfin", "]"}], "===", 
                    "FHMMPeqOne"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"Fretica`Private`FHMMGlobalRates", ",", 
                    RowBox[{"Fretica`Private`FPMLHGetLikelihoodPeqFromK", "[", 
                    RowBox[{
                    RowBox[{"N", "[", "Fretica`Private`FHMMNa", "]"}], ",", 
                    RowBox[{"N", "[", "Fretica`Private`FHMMNd", "]"}], ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"Flatten", "[", "Fretica`Private`Km", "]"}], 
                    "]"}]}], "]"}], ",", 
                    RowBox[{"Fretica`Private`FPMLHGetLikelihoodPeqFromK", "[", 
                    RowBox[{"N", "[", "Fretica`Private`Km", "]"}], "]"}]}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "FHMMpinpfin", "]"}], "===", 
                    "FHMMTraceWise"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"Fretica`Private`FHMMGlobalRates", ",", 
                    RowBox[{"Fretica`Private`FPMLHGetLikelihood", "[", 
                    RowBox[{
                    RowBox[{"N", "[", "Fretica`Private`FHMMNa", "]"}], ",", 
                    RowBox[{"N", "[", "Fretica`Private`FHMMNd", "]"}], ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"Flatten", "[", "Fretica`Private`Km", "]"}], 
                    "]"}]}], "]"}], ",", 
                    RowBox[{"Fretica`Private`FPMLHGetLikelihood", "[", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{"Flatten", "[", "Fretica`Private`Km", "]"}], 
                    "]"}], ",", 
                    RowBox[{"Length", "[", "Fretica`Private`Km", "]"}]}], 
                    "]"}]}], "]"}], ",", "True", ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"FHMMLogLikelihood", "::", "erroptval"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}]}]}], 
                    ",", "True", ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"FHMMLogLikelihood", "::", "noinit"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
                    "Fretica`Private`lh"}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"FFretHMMLogLikelihood", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "Fretica`Private`Km_", "?", "FNumericSquareMatrixQ"}], 
                    ",", 
                    RowBox[{"Fretica`Private`rateparams", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ",", 
                    RowBox[{"_", "?", "NumericQ"}], ",", 
                    RowBox[{"_", "?", "NumericQ"}]}], "}"}], ".."}], "}"}], 
                    ",", 
                    RowBox[{"_", "?", "NumericQ"}], ",", 
                    RowBox[{"_", "?", "NumericQ"}]}], "}"}], ".."}], "}"}]}], 
                    ",", 
                    RowBox[{"Fretica`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "Fretica`Private`lh", "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"FFretHMMSetPhotonRates", "[", 
                    "Fretica`Private`photonrates", "]"}], "===", "$Failed"}], 
                    ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    
                    RowBox[{"FFretHMMLogLikelihood", "[", 
                    "Fretica`Private`Km", "]"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"FHMMpinpfin", "\[Rule]", "FHMMPeqOne"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`FFretHMMLogLikelihood\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FFretHMMLogLikelihood[\\!\\(\\*FormBox[\\nStyleBox[\
\\\"K\\\", \\\"TI\\\"],\\nTraditionalForm]\\)] or\\nFFretHMMLogLikelihood[\\!\
\\(\\*FormBox[\\nStyleBox[\\\"K\\\", \\\"TI\\\"],\\nTraditionalForm]\\), \
photonrates]\\nreturns the total log\[Hyphen]likelihood of the HMM summed \
over all previously initialized trajectories assuming the rate matrix \
\\!\\(\\*FormBox[\\nStyleBox[\\\"K\\\", \\\"TI\\\"],\\nTraditionalForm]\\). \
\\nFor FFretHMMLogLikelihood[\\!\\(\\*FormBox[\\nStyleBox[\\\"K\\\", \\\"TI\\\
\"],\\nTraditionalForm]\\)], the photon rates set with FFretHMMSetPhotonRates \
are used. With FFretHMMLogLikelihood[\\!\\(\\*FormBox[\\nStyleBox[\\\"K\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\), photonrates], the photon rates given in \
photonrates are used. \\nphotonrates is a list that contains, for each \
trajectory \\!\\(\\*FormBox[\\nStyleBox[\\\"i\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\), an expression of the \
form\\n\\!\\(\\*FormBox[\\({{{\\*SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\
\"], \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"1\\\"}]], \
\\*SubscriptBox[\\\"\[Mu]\\\", \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", \\\"1\\\"}]], \\*SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"1\\\"}]]}, \
{\\*SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\"], \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"2\\\"}]], \
\\*SubscriptBox[\\\"\[Mu]\\\", \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", \\\"2\\\"}]], \\*SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"2\\\"}]]} ... \
}, \\*\\nStyleBox[\\\"b\\\", \\\"TI\\\"] \
\\*SubscriptBox[\\nStyleBox[\\\"g\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\
\"A\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"i\\\", \\\"TI\\\"]}]], \
\\*\\nStyleBox[\\\"b\\\", \\\"TI\\\"] \\*SubscriptBox[\\nStyleBox[\\\"g\\\", \
\\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \\\",\\\", \
\\nStyleBox[\\\"i\\\", \\\"TI\\\"]}]]}\\),\\nTraditionalForm]\\).\\nThe first \
list contains for each state \\!\\(\\*FormBox[\\nStyleBox[\\\"s\\\", \\\"TI\\\
\"],\\nTraditionalForm]\\) of the kinetic model the expression \
\\!\\(\\*FormBox[\\({\\*SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\"], \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]], \\*SubscriptBox[\\\"\[Mu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]], \\*SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]]}\\),\\nTraditionalForm]\\), where \
\\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\"], \\nRowBox[{\
\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\", \
\\\"TI\\\"]}]],\\nTraditionalForm]\\) is the mean total fluorescence \
detection rate (without background), \
\\!\\(\\*FormBox[SubscriptBox[\\\"\[Mu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]],\\nTraditionalForm]\\) is the probability that a detected \
fluorescence photon is detected on the acceptor detection route, and \
\\!\\(\\*FormBox[SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]],\\nTraditionalForm]\\) is a parameter describing the \
intrinsic broadening of state \\!\\(\\*FormBox[\\nStyleBox[\\\"s\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\) in proximity ratio space. \
\\!\\(\\*FormBox[\\(\\*\\nStyleBox[\\\"b\\\", \\\"TI\\\"] \
\\*SubscriptBox[\\nStyleBox[\\\"g\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\
\"A\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"i\\\", \
\\\"TI\\\"]}]]\\),\\nTraditionalForm]\\) and \
\\!\\(\\*FormBox[\\(\\*\\nStyleBox[\\\"b\\\", \\\"TI\\\"] \
\\*SubscriptBox[\\nStyleBox[\\\"g\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\
\"D\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"i\\\", \
\\\"TI\\\"]}]]\\),\\nTraditionalForm]\\) are the acceptor and donor \
background rates, respectively, of trajectory \\!\\(\\*FormBox[\\nStyleBox[\\\
\"i\\\", \\\"TI\\\"],\\nTraditionalForm]\\).\\n\\nFFretHMMLogLikelihood has \
the option FHMMpinpfin. The default setting is FHMMpinpfin\[Rule]FHMMOnePeq, \
in which case pini\[LongEqual]peq with \
\\!\\(\\*FormBox[\\(\\*\\nStyleBox[\\\"K\\\", \\\"TI\\\"] . \\*\\nStyleBox[\\\
\"p\\\", \\\"TI\\\"] \\*\\nStyleBox[\\\"e\\\", \\\"TI\\\"] \
\\*\\nStyleBox[\\\"q\\\", \\\"TI\\\"] \[LongEqual] \
0\\),\\nTraditionalForm]\\), and pfinal\[LongEqual]\\!\\(\\*FormBox[\\({\
\[Null]\\),\\nTraditionalForm]\\)1,1,...\\!\\(\\*FormBox[\\(}\\),\\\
nTraditionalForm]\\) are used in the calculations. Alternatively, pini and \
pfinal can be set individually for each trace using FFretHMMSetPinPfin. The \
option is then FHMMpinpfin\[Rule]FMTraceWise. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FFretHMMLogLikelihood[\!\(\*FormBox[\nStyleBox[\"K\", \"TI\"],\n\
TraditionalForm]\)] or\nFFretHMMLogLikelihood[\!\(\*FormBox[\nStyleBox[\"K\", \
\"TI\"],\nTraditionalForm]\), photonrates]\nreturns the total \
log\[Hyphen]likelihood of the HMM summed over all previously initialized \
trajectories assuming the rate matrix \!\(\*FormBox[\nStyleBox[\"K\", \
\"TI\"],\nTraditionalForm]\). \nFor FFretHMMLogLikelihood[\!\(\*FormBox[\n\
StyleBox[\"K\", \"TI\"],\nTraditionalForm]\)], the photon rates set with \
FFretHMMSetPhotonRates are used. With FFretHMMLogLikelihood[\!\(\*FormBox[\n\
StyleBox[\"K\", \"TI\"],\nTraditionalForm]\), photonrates], the photon rates \
given in photonrates are used. \nphotonrates is a list that contains, for \
each trajectory \!\(\*FormBox[\nStyleBox[\"i\", \"TI\"],\nTraditionalForm]\), \
an expression of the form\n\!\(\*FormBox[\({{{\*SubscriptBox[\n\
StyleBox[\"F\", \"TI\"], \nRowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \
\"1\"}]], \*SubscriptBox[\"\[Mu]\", \nRowBox[{\nStyleBox[\"i\", \"TI\"], \
\",\", \"1\"}]], \*SubscriptBox[\"\[Nu]\", \nRowBox[{\nStyleBox[\"i\", \
\"TI\"], \",\", \"1\"}]]}, {\*SubscriptBox[\nStyleBox[\"F\", \"TI\"], \n\
RowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \"2\"}]], \*SubscriptBox[\"\[Mu]\", \
\nRowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \"2\"}]], \
\*SubscriptBox[\"\[Nu]\", \nRowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \
\"2\"}]]} ... }, \*\nStyleBox[\"b\", \"TI\"] \*SubscriptBox[\nStyleBox[\"g\", \
\"TI\"], \nRowBox[{\nStyleBox[\"A\", \"TI\"], \",\", \nStyleBox[\"i\", \
\"TI\"]}]], \*\nStyleBox[\"b\", \"TI\"] \*SubscriptBox[\nStyleBox[\"g\", \"TI\
\"], \nRowBox[{\nStyleBox[\"D\", \"TI\"], \",\", \nStyleBox[\"i\", \
\"TI\"]}]]}\),\nTraditionalForm]\).\nThe first list contains for each state \
\!\(\*FormBox[\nStyleBox[\"s\", \"TI\"],\nTraditionalForm]\) of the kinetic \
model the expression \!\(\*FormBox[\({\*SubscriptBox[\nStyleBox[\"F\", \
\"TI\"], \nRowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \nStyleBox[\"s\", \
\"TI\"]}]], \*SubscriptBox[\"\[Mu]\", \nRowBox[{\nStyleBox[\"i\", \"TI\"], \
\",\", \nStyleBox[\"s\", \"TI\"]}]], \*SubscriptBox[\"\[Nu]\", \nRowBox[{\n\
StyleBox[\"i\", \"TI\"], \",\", \nStyleBox[\"s\", \"TI\"]}]]}\),\n\
TraditionalForm]\), where \!\(\*FormBox[SubscriptBox[\nStyleBox[\"F\", \
\"TI\"], \nRowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \nStyleBox[\"s\", \
\"TI\"]}]],\nTraditionalForm]\) is the mean total fluorescence detection rate \
(without background), \!\(\*FormBox[SubscriptBox[\"\[Mu]\", \nRowBox[{\n\
StyleBox[\"i\", \"TI\"], \",\", \nStyleBox[\"s\", \"TI\"]}]],\n\
TraditionalForm]\) is the probability that a detected fluorescence photon is \
detected on the acceptor detection route, and \!\(\*FormBox[SubscriptBox[\"\
\[Nu]\", \nRowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \nStyleBox[\"s\", \
\"TI\"]}]],\nTraditionalForm]\) is a parameter describing the intrinsic \
broadening of state \!\(\*FormBox[\nStyleBox[\"s\", \"TI\"],\n\
TraditionalForm]\) in proximity ratio space. \!\(\*FormBox[\(\*\nStyleBox[\"b\
\", \"TI\"] \*SubscriptBox[\nStyleBox[\"g\", \"TI\"], \nRowBox[{\n\
StyleBox[\"A\", \"TI\"], \",\", \nStyleBox[\"i\", \"TI\"]}]]\),\n\
TraditionalForm]\) and \!\(\*FormBox[\(\*\nStyleBox[\"b\", \"TI\"] \
\*SubscriptBox[\nStyleBox[\"g\", \"TI\"], \nRowBox[{\nStyleBox[\"D\", \
\"TI\"], \",\", \nStyleBox[\"i\", \"TI\"]}]]\),\nTraditionalForm]\) are the \
acceptor and donor background rates, respectively, of trajectory \
\!\(\*FormBox[\nStyleBox[\"i\", \"TI\"],\nTraditionalForm]\).\n\n\
FFretHMMLogLikelihood has the option FHMMpinpfin. The default setting is \
FHMMpinpfin\[Rule]FHMMOnePeq, in which case pini\[LongEqual]peq with \
\!\(\*FormBox[\(\*\nStyleBox[\"K\", \"TI\"] . \*\nStyleBox[\"p\", \"TI\"] \*\n\
StyleBox[\"e\", \"TI\"] \*\nStyleBox[\"q\", \"TI\"] \[LongEqual] 0\),\n\
TraditionalForm]\), and pfinal\[LongEqual]\!\(\*FormBox[\({\[Null]\),\n\
TraditionalForm]\)1,1,...\!\(\*FormBox[\(}\),\nTraditionalForm]\) are used in \
the calculations. Alternatively, pini and pfinal can be set individually for \
each trace using FFretHMMSetPinPfin. The option is then \
FHMMpinpfin\[Rule]FMTraceWise. ", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FFretHMMLogLikelihood, {Fretica`FFretHMMLogLikelihood[
         PatternTest[
          Pattern[Fretica`Private`Km, 
           Blank[]], Fretica`FNumericSquareMatrixQ], 
         Pattern[Fretica`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{Fretica`Private`lh}, 
         If[Length[Fretica`Private`Km] != Fretica`Private`FFretHMMStateCount, 
           Message[
             MessageName[Fretica`FHMMLogLikelihood, "dimerr"]]; 
           Return[$Failed]]; 
         Which[Fretica`Private`FFretHMMmode === Fretica`Private`FHMMBinned, 
           Fretica`Private`lh = 
           Which[OptionValue[Fretica`FHMMpinpfin] === Fretica`FHMMPeqOne, 
             If[Fretica`Private`FFretHMMGlobalRates, 
              Fretica`Private`FPFretHmmGetLikelihoodPeqFromK[
              Fretica`Private`FFretHmmBinning N[Fretica`Private`FFretHMMbgA], 
               Fretica`Private`FFretHmmBinning N[Fretica`Private`FFretHMMbgD],
                Fretica`Private`FFretHmmBinning 
               N[Fretica`Private`FFretHMMFmean], 
               N[Fretica`Private`FFretHMMmu], 
               N[Fretica`Private`FFretHMMnu], Fretica`Private`FFretHmmBinning 
               N[
                 Flatten[Fretica`Private`Km]]], 
              Fretica`Private`FPFretHmmGetLikelihoodPeqFromK[
              Fretica`Private`FFretHmmBinning N[
                 Flatten[Fretica`Private`Km]], 
               Length[Fretica`Private`Km]]], OptionValue[Fretica`FHMMpinpfin] === 
             Fretica`FHMMTraceWise, 
             Fretica`Private`FPHmmGetLikelihood[
             Fretica`Private`FFretHmmBinning N[
                Flatten[Fretica`Private`Km]], 
              Length[Fretica`Private`Km]], True, Message[
               MessageName[Fretica`FHMMLogLikelihood, "erroptval"]]; 
             Return[$Failed]], Fretica`Private`FFretHMMmode === 
           Fretica`Private`FHMMPhotonByPhoton, 
           Fretica`Private`lh = -
            Which[OptionValue[Fretica`FHMMpinpfin] === Fretica`FHMMPeqOne, 
              If[Fretica`Private`FHMMGlobalRates, 
               Fretica`Private`FPMLHGetLikelihoodPeqFromK[
                N[Fretica`Private`FHMMNa], 
                N[Fretica`Private`FHMMNd], 
                N[
                 Flatten[Fretica`Private`Km]]], 
               Fretica`Private`FPMLHGetLikelihoodPeqFromK[
                N[Fretica`Private`Km]]], OptionValue[Fretica`FHMMpinpfin] === 
              Fretica`FHMMTraceWise, 
              If[Fretica`Private`FHMMGlobalRates, 
               Fretica`Private`FPMLHGetLikelihood[
                N[Fretica`Private`FHMMNa], 
                N[Fretica`Private`FHMMNd], 
                N[
                 Flatten[Fretica`Private`Km]]], 
               Fretica`Private`FPMLHGetLikelihood[
                N[
                 Flatten[Fretica`Private`Km]], 
                Length[Fretica`Private`Km]]], True, Message[
                MessageName[Fretica`FHMMLogLikelihood, "erroptval"]]; 
              Return[$Failed]], True, Message[
             MessageName[Fretica`FHMMLogLikelihood, "noinit"]]; 
           Return[$Failed]]; Fretica`Private`lh], 
       Fretica`FFretHMMLogLikelihood[
         PatternTest[
          Pattern[Fretica`Private`Km, 
           Blank[]], Fretica`FNumericSquareMatrixQ], 
         Pattern[Fretica`Private`rateparams, {
           Repeated[{{
              Repeated[{
                PatternTest[
                 Blank[], NumericQ], 
                PatternTest[
                 Blank[], NumericQ], 
                PatternTest[
                 Blank[], NumericQ]}]}, 
             PatternTest[
              Blank[], NumericQ], 
             PatternTest[
              Blank[], NumericQ]}]}], 
         Pattern[Fretica`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{Fretica`Private`lh}, 
         If[Fretica`FFretHMMSetPhotonRates[
            Fretica`Private`photonrates] === $Failed, 
           Return[$Failed]]; 
         Fretica`FFretHMMLogLikelihood[Fretica`Private`Km]]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {Fretica`FHMMpinpfin -> Fretica`FHMMPeqOne}, 
    "Attributes" -> {}, "FullName" -> "Fretica`FFretHMMLogLikelihood"|>, 
   False]]], "Output",
 CellLabel->"Out[176]=",
 CellID->11071762,ExpressionUUID->"358b2319-b220-4fbe-936a-063e425fdc52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FFretHMMViterbi"}]], "Input",
 CellLabel->"In[177]:=",
 CellID->29499591,ExpressionUUID->"417c831c-9ce1-4ddb-a650-0f286afd6479"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FFretHMMViterbi[\\!\\(\\*FormBox[\\nStyleBox[\\\"K\\\
\", \\\"TI\\\"],\\nTraditionalForm]\\)] or \
FFretHMMViterbi[\\!\\(\\*FormBox[\\nStyleBox[\\\"K\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\), photonrates] applies the Viterbi \
algorithm to all previously initialized trajectories assuming the rate matrix \
K. A list of most likely state trajectories is returned in form of a \
FDwellList. \\nFor FFretHMMViterbi[\\!\\(\\*FormBox[\\nStyleBox[\\\"K\\\", \\\
\"TI\\\"],\\nTraditionalForm]\\)], the photon rates set with \
FFretHMMSetPhotonRates are used. With \
FHMMViterbi[\\!\\(\\*FormBox[\\nStyleBox[\\\"K\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\), photonrates], the photon rates given in \
photonrates are used. \\nphotonrates is a list that contains, for each \
trajectory \\!\\(\\*FormBox[\\nStyleBox[\\\"i\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\), an expression of the \
form\\n\\!\\(\\*FormBox[\\({{{\\*SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\
\"], \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"1\\\"}]], \
\\*SubscriptBox[\\\"\[Mu]\\\", \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", \\\"1\\\"}]], \\*SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"1\\\"}]]}, \
{\\*SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\"], \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"2\\\"}]], \
\\*SubscriptBox[\\\"\[Mu]\\\", \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", \\\"2\\\"}]], \\*SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"2\\\"}]]} ... \
}, \\*SubscriptBox[\\\"bg\\\", \\nRowBox[{\\nStyleBox[\\\"A\\\", \\\"TI\\\"], \
\\\",\\\", \\nStyleBox[\\\"i\\\", \\\"TI\\\"]}]], \\*SubscriptBox[\\\"bg\\\", \
\\nRowBox[{\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"i\\\
\", \\\"TI\\\"]}]]}\\),\\nTraditionalForm]\\).\\nThe first list contains for \
each state \\!\\(\\*FormBox[\\nStyleBox[\\\"s\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\) of the kinetic model the expression \\!\\(\
\\*FormBox[\\({{\\*SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\"], \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]], \\*SubscriptBox[\\\"\[Mu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]], \\*SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]]}\\),\\nTraditionalForm]\\), where \
\\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\"], \\nRowBox[{\
\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\", \
\\\"TI\\\"]}]],\\nTraditionalForm]\\) is the mean fluorescence rate (without \
background), \\!\\(\\*FormBox[SubscriptBox[\\\"\[Mu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]],\\nTraditionalForm]\\) is the probability that a detected \
fluorescence photon is detected on the acceptor detection route, and \
\\!\\(\\*FormBox[SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]],\\nTraditionalForm]\\) is a parameter describing the \
intrinsic broadening of state \\!\\(\\*FormBox[\\nStyleBox[\\\"s\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\) in proximity ratio space. \
\\!\\(\\*FormBox[SubscriptBox[\\\"bg\\\", \\nRowBox[{\\nStyleBox[\\\"A\\\", \
\\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"i\\\", \
\\\"TI\\\"]}]],\\nTraditionalForm]\\) and \
\\!\\(\\*FormBox[SubscriptBox[\\\"bg\\\", \\nRowBox[{\\nStyleBox[\\\"D\\\", \
\\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"i\\\", \
\\\"TI\\\"]}]],\\nTraditionalForm]\\) are the acceptor and donor background \
rates, respectively, of trajectory \\!\\(\\*FormBox[\\nStyleBox[\\\"i\\\", \\\
\"TI\\\"],\\nTraditionalForm]\\). \\nFFretHMMViterbi has the option \
FHMMpinpfin. The default setting is FHMMpinpfin\[Rule]FHMMOnePeq, in which \
case pini\[LongEqual]peq with \\!\\(\\*FormBox[\\(\\*\\nStyleBox[\\\"K\\\", \
\\\"TI\\\"] . \\*\\nStyleBox[\\\"p\\\", \\\"TI\\\"] \\*\\nStyleBox[\\\"e\\\", \
\\\"TI\\\"] \\*\\nStyleBox[\\\"q\\\", \\\"TI\\\"] \[LongEqual] \
0\\),\\nTraditionalForm]\\), and pfinal\[LongEqual]\\!\\(\\*FormBox[\\({\
\[Null]\\),\\nTraditionalForm]\\)1,1,...\\!\\(\\*FormBox[\\(}\\),\\\
nTraditionalForm]\\) are used in the calculations. Alternatively, pini and \
pfinal can be set individually for each trace using FPHSetPinPfin. The option \
is then FHMMpinpfin\[Rule]FMTraceWise. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FFretHMMViterbi", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "Fretica`Private`Km_", "?", "FNumericSquareMatrixQ"}], 
                    ",", 
                    RowBox[{"Fretica`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "Fretica`Private`statetrajectory", "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "Fretica`Private`Km", "]"}], 
                    "\[NotEqual]", "Fretica`Private`FFretHMMStateCount"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"FHMMViterbi", "::", "dimerr"}], "MessageName"], 
                    "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    
                    RowBox[{"Fretica`Private`FFretHMMmode", "===", 
                    "Fretica`Private`FHMMBinned"}], ",", 
                    RowBox[{"Fretica`Private`statetrajectory", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"OptionValue", "[", "FHMMpinpfin", "]"}], "===", 
                    "FHMMPeqOne"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"Fretica`Private`FFretHMMGlobalRates", ",", 
                    
                    RowBox[{"Fretica`Private`FretBinnedViterbiPeqFromK", "[", 
                    "Fretica`Private`Km", "]"}], ",", 
                    
                    RowBox[{"Fretica`Private`BinnedViterbiPeqFromK", "[", 
                    "Fretica`Private`Km", "]"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "FHMMpinpfin", "]"}], "===", 
                    "FHMMTraceWise"}], ",", 
                    
                    RowBox[{"Fretica`Private`FretBinnedViterbi", "[", 
                    "Fretica`Private`Km", "]"}], ",", "True", ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"FHMMViterbi", "::", "erroptval"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}]}], ",", 
                    
                    RowBox[{"Fretica`Private`FFretHMMmode", "===", 
                    "Fretica`Private`FHMMPhotonByPhoton"}], ",", 
                    RowBox[{"Fretica`Private`statetrajectory", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"OptionValue", "[", "FHMMpinpfin", "]"}], "===", 
                    "FHMMPeqOne"}], ",", 
                    RowBox[{"Fretica`Private`FPMLHViterbiPeqFromK", "[", 
                    RowBox[{"N", "[", "Fretica`Private`Km", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "FHMMpinpfin", "]"}], "===", 
                    "FHMMTraceWise"}], ",", 
                    RowBox[{"Fretica`Private`FPMLHViterbi", "[", 
                    RowBox[{"N", "[", "Fretica`Private`Km", "]"}], "]"}], ",",
                     "True", ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"FHMMViterbi", "::", "erroptval"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}]}], ",",
                     "True", ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"FHMMViterbi", "::", "noinit"}], "MessageName"], 
                    "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
                    "Fretica`Private`statetrajectory"}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"FFretHMMViterbi", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "Fretica`Private`Km_", "?", "FNumericSquareMatrixQ"}], 
                    ",", "Fretica`Private`photonrates_", ",", 
                    RowBox[{"Fretica`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "Fretica`Private`lh", "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"FFretHMMSetPhotonRates", "[", 
                    "Fretica`Private`photonrates", "]"}], "===", "$Failed"}], 
                    ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    
                    RowBox[{"FFretHMMViterbi", "[", "Fretica`Private`Km", 
                    "]"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"FHMMpinpfin", "\[Rule]", "FHMMPeqOne"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`FFretHMMViterbi\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FFretHMMViterbi[\\!\\(\\*FormBox[\\nStyleBox[\\\"K\\\
\", \\\"TI\\\"],\\nTraditionalForm]\\)] or \
FFretHMMViterbi[\\!\\(\\*FormBox[\\nStyleBox[\\\"K\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\), photonrates] applies the Viterbi \
algorithm to all previously initialized trajectories assuming the rate matrix \
K. A list of most likely state trajectories is returned in form of a \
FDwellList. \\nFor FFretHMMViterbi[\\!\\(\\*FormBox[\\nStyleBox[\\\"K\\\", \\\
\"TI\\\"],\\nTraditionalForm]\\)], the photon rates set with \
FFretHMMSetPhotonRates are used. With \
FHMMViterbi[\\!\\(\\*FormBox[\\nStyleBox[\\\"K\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\), photonrates], the photon rates given in \
photonrates are used. \\nphotonrates is a list that contains, for each \
trajectory \\!\\(\\*FormBox[\\nStyleBox[\\\"i\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\), an expression of the \
form\\n\\!\\(\\*FormBox[\\({{{\\*SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\
\"], \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"1\\\"}]], \
\\*SubscriptBox[\\\"\[Mu]\\\", \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", \\\"1\\\"}]], \\*SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"1\\\"}]]}, \
{\\*SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\"], \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"2\\\"}]], \
\\*SubscriptBox[\\\"\[Mu]\\\", \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", \\\"2\\\"}]], \\*SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"2\\\"}]]} ... \
}, \\*SubscriptBox[\\\"bg\\\", \\nRowBox[{\\nStyleBox[\\\"A\\\", \\\"TI\\\"], \
\\\",\\\", \\nStyleBox[\\\"i\\\", \\\"TI\\\"]}]], \\*SubscriptBox[\\\"bg\\\", \
\\nRowBox[{\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"i\\\
\", \\\"TI\\\"]}]]}\\),\\nTraditionalForm]\\).\\nThe first list contains for \
each state \\!\\(\\*FormBox[\\nStyleBox[\\\"s\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\) of the kinetic model the expression \\!\\(\
\\*FormBox[\\({{\\*SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\"], \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]], \\*SubscriptBox[\\\"\[Mu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]], \\*SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]]}\\),\\nTraditionalForm]\\), where \
\\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\"], \\nRowBox[{\
\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\", \
\\\"TI\\\"]}]],\\nTraditionalForm]\\) is the mean fluorescence rate (without \
background), \\!\\(\\*FormBox[SubscriptBox[\\\"\[Mu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]],\\nTraditionalForm]\\) is the probability that a detected \
fluorescence photon is detected on the acceptor detection route, and \
\\!\\(\\*FormBox[SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]],\\nTraditionalForm]\\) is a parameter describing the \
intrinsic broadening of state \\!\\(\\*FormBox[\\nStyleBox[\\\"s\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\) in proximity ratio space. \
\\!\\(\\*FormBox[SubscriptBox[\\\"bg\\\", \\nRowBox[{\\nStyleBox[\\\"A\\\", \
\\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"i\\\", \
\\\"TI\\\"]}]],\\nTraditionalForm]\\) and \
\\!\\(\\*FormBox[SubscriptBox[\\\"bg\\\", \\nRowBox[{\\nStyleBox[\\\"D\\\", \
\\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"i\\\", \
\\\"TI\\\"]}]],\\nTraditionalForm]\\) are the acceptor and donor background \
rates, respectively, of trajectory \\!\\(\\*FormBox[\\nStyleBox[\\\"i\\\", \\\
\"TI\\\"],\\nTraditionalForm]\\). \\nFFretHMMViterbi has the option \
FHMMpinpfin. The default setting is FHMMpinpfin\[Rule]FHMMOnePeq, in which \
case pini\[LongEqual]peq with \\!\\(\\*FormBox[\\(\\*\\nStyleBox[\\\"K\\\", \
\\\"TI\\\"] . \\*\\nStyleBox[\\\"p\\\", \\\"TI\\\"] \\*\\nStyleBox[\\\"e\\\", \
\\\"TI\\\"] \\*\\nStyleBox[\\\"q\\\", \\\"TI\\\"] \[LongEqual] \
0\\),\\nTraditionalForm]\\), and pfinal\[LongEqual]\\!\\(\\*FormBox[\\({\
\[Null]\\),\\nTraditionalForm]\\)1,1,...\\!\\(\\*FormBox[\\(}\\),\\\
nTraditionalForm]\\) are used in the calculations. Alternatively, pini and \
pfinal can be set individually for each trace using FPHSetPinPfin. The option \
is then FHMMpinpfin\[Rule]FMTraceWise. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FFretHMMViterbi[\!\(\*FormBox[\nStyleBox[\"K\", \"TI\"],\n\
TraditionalForm]\)] or FFretHMMViterbi[\!\(\*FormBox[\nStyleBox[\"K\", \
\"TI\"],\nTraditionalForm]\), photonrates] applies the Viterbi algorithm to \
all previously initialized trajectories assuming the rate matrix K. A list of \
most likely state trajectories is returned in form of a FDwellList. \nFor \
FFretHMMViterbi[\!\(\*FormBox[\nStyleBox[\"K\", \"TI\"],\n\
TraditionalForm]\)], the photon rates set with FFretHMMSetPhotonRates are \
used. With FHMMViterbi[\!\(\*FormBox[\nStyleBox[\"K\", \"TI\"],\n\
TraditionalForm]\), photonrates], the photon rates given in photonrates are \
used. \nphotonrates is a list that contains, for each trajectory \
\!\(\*FormBox[\nStyleBox[\"i\", \"TI\"],\nTraditionalForm]\), an expression \
of the form\n\!\(\*FormBox[\({{{\*SubscriptBox[\nStyleBox[\"F\", \"TI\"], \n\
RowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \"1\"}]], \*SubscriptBox[\"\[Mu]\", \
\nRowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \"1\"}]], \
\*SubscriptBox[\"\[Nu]\", \nRowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \
\"1\"}]]}, {\*SubscriptBox[\nStyleBox[\"F\", \"TI\"], \nRowBox[{\n\
StyleBox[\"i\", \"TI\"], \",\", \"2\"}]], \*SubscriptBox[\"\[Mu]\", \n\
RowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \"2\"}]], \*SubscriptBox[\"\[Nu]\", \
\nRowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \"2\"}]]} ... }, \
\*SubscriptBox[\"bg\", \nRowBox[{\nStyleBox[\"A\", \"TI\"], \",\", \n\
StyleBox[\"i\", \"TI\"]}]], \*SubscriptBox[\"bg\", \nRowBox[{\n\
StyleBox[\"D\", \"TI\"], \",\", \nStyleBox[\"i\", \"TI\"]}]]}\),\n\
TraditionalForm]\).\nThe first list contains for each state \!\(\*FormBox[\n\
StyleBox[\"s\", \"TI\"],\nTraditionalForm]\) of the kinetic model the \
expression \!\(\*FormBox[\({{\*SubscriptBox[\nStyleBox[\"F\", \"TI\"], \n\
RowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \nStyleBox[\"s\", \"TI\"]}]], \
\*SubscriptBox[\"\[Mu]\", \nRowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \n\
StyleBox[\"s\", \"TI\"]}]], \*SubscriptBox[\"\[Nu]\", \nRowBox[{\n\
StyleBox[\"i\", \"TI\"], \",\", \nStyleBox[\"s\", \"TI\"]}]]}\),\n\
TraditionalForm]\), where \!\(\*FormBox[SubscriptBox[\nStyleBox[\"F\", \
\"TI\"], \nRowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \nStyleBox[\"s\", \
\"TI\"]}]],\nTraditionalForm]\) is the mean fluorescence rate (without \
background), \!\(\*FormBox[SubscriptBox[\"\[Mu]\", \nRowBox[{\n\
StyleBox[\"i\", \"TI\"], \",\", \nStyleBox[\"s\", \"TI\"]}]],\n\
TraditionalForm]\) is the probability that a detected fluorescence photon is \
detected on the acceptor detection route, and \!\(\*FormBox[SubscriptBox[\"\
\[Nu]\", \nRowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \nStyleBox[\"s\", \
\"TI\"]}]],\nTraditionalForm]\) is a parameter describing the intrinsic \
broadening of state \!\(\*FormBox[\nStyleBox[\"s\", \"TI\"],\n\
TraditionalForm]\) in proximity ratio space. \
\!\(\*FormBox[SubscriptBox[\"bg\", \nRowBox[{\nStyleBox[\"A\", \"TI\"], \
\",\", \nStyleBox[\"i\", \"TI\"]}]],\nTraditionalForm]\) and \
\!\(\*FormBox[SubscriptBox[\"bg\", \nRowBox[{\nStyleBox[\"D\", \"TI\"], \
\",\", \nStyleBox[\"i\", \"TI\"]}]],\nTraditionalForm]\) are the acceptor and \
donor background rates, respectively, of trajectory \!\(\*FormBox[\nStyleBox[\
\"i\", \"TI\"],\nTraditionalForm]\). \nFFretHMMViterbi has the option \
FHMMpinpfin. The default setting is FHMMpinpfin\[Rule]FHMMOnePeq, in which \
case pini\[LongEqual]peq with \!\(\*FormBox[\(\*\nStyleBox[\"K\", \"TI\"] . \
\*\nStyleBox[\"p\", \"TI\"] \*\nStyleBox[\"e\", \"TI\"] \*\nStyleBox[\"q\", \
\"TI\"] \[LongEqual] 0\),\nTraditionalForm]\), and \
pfinal\[LongEqual]\!\(\*FormBox[\({\[Null]\),\n\
TraditionalForm]\)1,1,...\!\(\*FormBox[\(}\),\nTraditionalForm]\) are used in \
the calculations. Alternatively, pini and pfinal can be set individually for \
each trace using FPHSetPinPfin. The option is then \
FHMMpinpfin\[Rule]FMTraceWise. ", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FFretHMMViterbi, {Fretica`FFretHMMViterbi[
         PatternTest[
          Pattern[Fretica`Private`Km, 
           Blank[]], Fretica`FNumericSquareMatrixQ], 
         Pattern[Fretica`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{Fretica`Private`statetrajectory}, 
         If[Length[Fretica`Private`Km] != Fretica`Private`FFretHMMStateCount, 
           Message[
             MessageName[Fretica`FHMMViterbi, "dimerr"]]; Return[$Failed]]; 
         Which[Fretica`Private`FFretHMMmode === Fretica`Private`FHMMBinned, 
           Fretica`Private`statetrajectory = 
           Which[OptionValue[Fretica`FHMMpinpfin] === Fretica`FHMMPeqOne, 
             If[Fretica`Private`FFretHMMGlobalRates, 
              Fretica`Private`FretBinnedViterbiPeqFromK[Fretica`Private`Km], 
              Fretica`Private`BinnedViterbiPeqFromK[Fretica`Private`Km]], 
             OptionValue[Fretica`FHMMpinpfin] === Fretica`FHMMTraceWise, 
             Fretica`Private`FretBinnedViterbi[Fretica`Private`Km], True, 
             Message[
               MessageName[Fretica`FHMMViterbi, "erroptval"]]; 
             Return[$Failed]], Fretica`Private`FFretHMMmode === 
           Fretica`Private`FHMMPhotonByPhoton, 
           Fretica`Private`statetrajectory = 
           Which[OptionValue[Fretica`FHMMpinpfin] === Fretica`FHMMPeqOne, 
             Fretica`Private`FPMLHViterbiPeqFromK[
              N[Fretica`Private`Km]], OptionValue[Fretica`FHMMpinpfin] === 
             Fretica`FHMMTraceWise, 
             Fretica`Private`FPMLHViterbi[
              N[Fretica`Private`Km]], True, Message[
               MessageName[Fretica`FHMMViterbi, "erroptval"]]; 
             Return[$Failed]], True, Message[
             MessageName[Fretica`FHMMViterbi, "noinit"]]; Return[$Failed]]; 
         Fretica`Private`statetrajectory], Fretica`FFretHMMViterbi[
         PatternTest[
          Pattern[Fretica`Private`Km, 
           Blank[]], Fretica`FNumericSquareMatrixQ], 
         Pattern[Fretica`Private`photonrates, 
          Blank[]], 
         Pattern[Fretica`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{Fretica`Private`lh}, 
         If[Fretica`FFretHMMSetPhotonRates[
            Fretica`Private`photonrates] === $Failed, 
           Return[$Failed]]; Fretica`FFretHMMViterbi[Fretica`Private`Km]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {Fretica`FHMMpinpfin -> Fretica`FHMMPeqOne}, 
    "Attributes" -> {}, "FullName" -> "Fretica`FFretHMMViterbi"|>, 
   False]]], "Output",
 CellLabel->"Out[177]=",
 CellID->146761354,ExpressionUUID->"852d7c62-4e9c-4178-b72b-c114b64f6aa0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FFretHMMForwardBackward"}]], "Input",
 CellLabel->"In[178]:=",
 CellID->75002877,ExpressionUUID->"edcb508f-a954-4e68-b26d-cbd72b9ff7b5"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FFretHMMForwardBackward[\\!\\(\\*FormBox[\\\
nStyleBox[\\\"K\\\", \\\"TI\\\"],\\nTraditionalForm]\\)] \
or\\nFFretHMMForwardBackward[\\!\\(\\*FormBox[\\nStyleBox[\\\"K\\\", \\\"TI\\\
\"],\\nTraditionalForm]\\), photonrates]\\napplies the \
forward\[Hyphen]backward algorithm to all previously initialized trajectories \
assuming the rate matrix \\!\\(\\*FormBox[\\nStyleBox[\\\"K\\\", \\\"TI\\\"],\
\\nTraditionalForm]\\). A list of state\[Hyphen]probability trajectories is \
returned. \\nIn the first case (i.e. \
FFretHMMForwardBackward[\\!\\(\\*FormBox[\\nStyleBox[\\\"K\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\)]), the photon rates set with \
FFretHMMSetPhotonRates are used. With \
FFretHMMForwardBackward[\\!\\(\\*FormBox[\\nStyleBox[\\\"K\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\), photonrates], the photon rates given in \
photonrates are used. \\nphotonrates is a list that contains for each \
trajectory \\!\\(\\*FormBox[\\nStyleBox[\\\"i\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\) an expression of the \
form\\n\\!\\(\\*FormBox[\\({{{\\*SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\
\"], \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"1\\\"}]], \
\\*SubscriptBox[\\\"\[Mu]\\\", \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", \\\"1\\\"}]], \\*SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"1\\\"}]]}, \
{\\*SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\"], \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"2\\\"}]], \
\\*SubscriptBox[\\\"\[Mu]\\\", \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", \\\"2\\\"}]], \\*SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"2\\\"}]]} ... \
}, \\*\\nStyleBox[\\\"b\\\", \\\"TI\\\"] \
\\*SubscriptBox[\\nStyleBox[\\\"g\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\
\"A\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"i\\\", \\\"TI\\\"]}]], \
\\*\\nStyleBox[\\\"b\\\", \\\"TI\\\"] \\*SubscriptBox[\\nStyleBox[\\\"g\\\", \
\\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \\\",\\\", \
\\nStyleBox[\\\"i\\\", \\\"TI\\\"]}]]}\\),\\nTraditionalForm]\\).\\nThe first \
list contains for each state \\!\\(\\*FormBox[\\nStyleBox[\\\"s\\\", \\\"TI\\\
\"],\\nTraditionalForm]\\) of the kinetic model the expression \
\\!\\(\\*FormBox[\\({\\*SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\"], \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]], \\*SubscriptBox[\\\"\[Mu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]], \\*SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]]}\\),\\nTraditionalForm]\\), where \
\\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\"], \\nRowBox[{\
\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\", \
\\\"TI\\\"]}]],\\nTraditionalForm]\\) is the mean total fluorescence \
detection rate (without background), \
\\!\\(\\*FormBox[SubscriptBox[\\\"\[Mu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]],\\nTraditionalForm]\\) is the probability that a detected \
fluorescence photon is detected on the acceptor detection route, and \
\\!\\(\\*FormBox[SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]],\\nTraditionalForm]\\) is a parameter describing the \
intrinsic broadening of state \\!\\(\\*FormBox[\\nStyleBox[\\\"s\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\) in proximity ratio space. \
\\!\\(\\*FormBox[\\(\\*\\nStyleBox[\\\"b\\\", \\\"TI\\\"] \
\\*SubscriptBox[\\nStyleBox[\\\"g\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\
\"A\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"i\\\", \
\\\"TI\\\"]}]]\\),\\nTraditionalForm]\\) and \
\\!\\(\\*FormBox[\\(\\*\\nStyleBox[\\\"b\\\", \\\"TI\\\"] \
\\*SubscriptBox[\\nStyleBox[\\\"g\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\
\"D\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"i\\\", \
\\\"TI\\\"]}]]\\),\\nTraditionalForm]\\) are the acceptor and donor \
background rates, respectively, of trajectory \\!\\(\\*FormBox[\\nStyleBox[\\\
\"i\\\", \\\"TI\\\"],\\nTraditionalForm]\\).\\n\\nFFretHMMForwardBackward has \
the option FHMMpinpfin. The default setting is FHMMpinpfin\[Rule]FHMMOnePeq \
in which case pini\[LongEqual]peq with \
\\!\\(\\*FormBox[\\(\\*\\nStyleBox[\\\"K\\\", \\\"TI\\\"] . \\*\\nStyleBox[\\\
\"p\\\", \\\"TI\\\"] \\*\\nStyleBox[\\\"e\\\", \\\"TI\\\"] \
\\*\\nStyleBox[\\\"q\\\", \\\"TI\\\"] \[LongEqual] \
0\\),\\nTraditionalForm]\\), and pfinal\[LongEqual]\\!\\(\\*FormBox[\\({\
\[Null]\\),\\nTraditionalForm]\\)1,1,...\\!\\(\\*FormBox[\\(}\\),\\\
nTraditionalForm]\\) are used in the calculations. Alternatively, pini and \
pfinal can be set individually for each trace using FPHSetPinPfin. The option \
is then FHMMpinpfin\[Rule]FMTraceWise. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FFretHMMForwardBackward", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "Fretica`Private`Km_", "?", "FNumericSquareMatrixQ"}], 
                    ",", 
                    RowBox[{"Fretica`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "Fretica`Private`statetrajectory", "}"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "Fretica`Private`Km", "]"}], 
                    "\[NotEqual]", "Fretica`Private`FFretHMMStateCount"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"FHMMViterbi", "::", "dimerr"}], "MessageName"], 
                    "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    
                    RowBox[{"Fretica`Private`FFretHMMmode", "===", 
                    "Fretica`Private`FHMMBinned"}], ",", 
                    RowBox[{"Fretica`Private`statetrajectory", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"OptionValue", "[", "FHMMpinpfin", "]"}], "===", 
                    "FHMMPeqOne"}], ",", 
                    RowBox[{"If", "[", 
                    
                    RowBox[{"Fretica`Private`FFretHMMGlobalRates", ",", 
                    "Fretica`Private`$False", ",", 
                    
                    RowBox[{
                    "Fretica`Private`FPFretHmmForwardBackwardPeqFromK", "[", 
                    RowBox[{
                    RowBox[{"Fretica`Private`FFretHmmBinning", " ", 
                    RowBox[{"N", "[", 
                    RowBox[{"Flatten", "[", "Fretica`Private`Km", "]"}], 
                    "]"}]}], ",", 
                    RowBox[{"Length", "[", "Fretica`Private`Km", "]"}]}], 
                    "]"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "FHMMpinpfin", "]"}], "===", 
                    "FHMMTraceWise"}], ",", 
                    RowBox[{"Fretica`Private`FPFretHmmForwardBackward", "[", 
                    RowBox[{
                    RowBox[{"Fretica`Private`FFretHmmBinning", " ", 
                    RowBox[{"N", "[", 
                    RowBox[{"Flatten", "[", "Fretica`Private`Km", "]"}], 
                    "]"}]}], ",", 
                    RowBox[{"Length", "[", "Fretica`Private`Km", "]"}]}], 
                    "]"}], ",", "True", ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"FHMMViterbi", "::", "erroptval"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}]}], ",", 
                    
                    RowBox[{"Fretica`Private`FFretHMMmode", "===", 
                    "Fretica`Private`FHMMPhotonByPhoton"}], ",", 
                    RowBox[{"Fretica`Private`statetrajectory", "=", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"OptionValue", "[", "FHMMpinpfin", "]"}], "===", 
                    "FHMMPeqOne"}], ",", 
                    
                    RowBox[{"Fretica`Private`FPMLHForwardBackwardiPeqFromK", 
                    "[", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{"Flatten", "[", "Fretica`Private`Km", "]"}], 
                    "]"}], ",", 
                    RowBox[{"Length", "[", "Fretica`Private`Km", "]"}]}], 
                    "]"}], ",", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "FHMMpinpfin", "]"}], "===", 
                    "FHMMTraceWise"}], ",", 
                    RowBox[{"Fretica`Private`FPMLHForwardBackward", "[", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{"Flatten", "[", "Fretica`Private`Km", "]"}], 
                    "]"}], ",", 
                    RowBox[{"Length", "[", "Fretica`Private`Km", "]"}]}], 
                    "]"}], ",", "True", ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"FHMMViterbi", "::", "erroptval"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}]}], ",",
                     "True", ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"FHMMViterbi", "::", "noinit"}], "MessageName"], 
                    "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}], ";", 
                    "Fretica`Private`statetrajectory"}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"FFretHMMForwardBackward", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "Fretica`Private`Km_", "?", "FNumericSquareMatrixQ"}], 
                    ",", "Fretica`Private`photonrates_", ",", 
                    RowBox[{"Fretica`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "Fretica`Private`lh", "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"FFretHMMSetPhotonRates", "[", 
                    "Fretica`Private`photonrates", "]"}], "===", "$Failed"}], 
                    ",", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], "]"}], ";", 
                    
                    RowBox[{"FFretHMMForwardBackward", "[", 
                    "Fretica`Private`Km", "]"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"FHMMpinpfin", "\[Rule]", "FHMMPeqOne"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`FFretHMMForwardBackward\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FFretHMMForwardBackward[\\!\\(\\*FormBox[\\\
nStyleBox[\\\"K\\\", \\\"TI\\\"],\\nTraditionalForm]\\)] \
or\\nFFretHMMForwardBackward[\\!\\(\\*FormBox[\\nStyleBox[\\\"K\\\", \\\"TI\\\
\"],\\nTraditionalForm]\\), photonrates]\\napplies the \
forward\[Hyphen]backward algorithm to all previously initialized trajectories \
assuming the rate matrix \\!\\(\\*FormBox[\\nStyleBox[\\\"K\\\", \\\"TI\\\"],\
\\nTraditionalForm]\\). A list of state\[Hyphen]probability trajectories is \
returned. \\nIn the first case (i.e. \
FFretHMMForwardBackward[\\!\\(\\*FormBox[\\nStyleBox[\\\"K\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\)]), the photon rates set with \
FFretHMMSetPhotonRates are used. With \
FFretHMMForwardBackward[\\!\\(\\*FormBox[\\nStyleBox[\\\"K\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\), photonrates], the photon rates given in \
photonrates are used. \\nphotonrates is a list that contains for each \
trajectory \\!\\(\\*FormBox[\\nStyleBox[\\\"i\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\) an expression of the \
form\\n\\!\\(\\*FormBox[\\({{{\\*SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\
\"], \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"1\\\"}]], \
\\*SubscriptBox[\\\"\[Mu]\\\", \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", \\\"1\\\"}]], \\*SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"1\\\"}]]}, \
{\\*SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\"], \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"2\\\"}]], \
\\*SubscriptBox[\\\"\[Mu]\\\", \\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \
\\\",\\\", \\\"2\\\"}]], \\*SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\\"2\\\"}]]} ... \
}, \\*\\nStyleBox[\\\"b\\\", \\\"TI\\\"] \
\\*SubscriptBox[\\nStyleBox[\\\"g\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\
\"A\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"i\\\", \\\"TI\\\"]}]], \
\\*\\nStyleBox[\\\"b\\\", \\\"TI\\\"] \\*SubscriptBox[\\nStyleBox[\\\"g\\\", \
\\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \\\",\\\", \
\\nStyleBox[\\\"i\\\", \\\"TI\\\"]}]]}\\),\\nTraditionalForm]\\).\\nThe first \
list contains for each state \\!\\(\\*FormBox[\\nStyleBox[\\\"s\\\", \\\"TI\\\
\"],\\nTraditionalForm]\\) of the kinetic model the expression \
\\!\\(\\*FormBox[\\({\\*SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\"], \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]], \\*SubscriptBox[\\\"\[Mu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]], \\*SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]]}\\),\\nTraditionalForm]\\), where \
\\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"F\\\", \\\"TI\\\"], \\nRowBox[{\
\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\", \
\\\"TI\\\"]}]],\\nTraditionalForm]\\) is the mean total fluorescence \
detection rate (without background), \
\\!\\(\\*FormBox[SubscriptBox[\\\"\[Mu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]],\\nTraditionalForm]\\) is the probability that a detected \
fluorescence photon is detected on the acceptor detection route, and \
\\!\\(\\*FormBox[SubscriptBox[\\\"\[Nu]\\\", \
\\nRowBox[{\\nStyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"s\\\
\", \\\"TI\\\"]}]],\\nTraditionalForm]\\) is a parameter describing the \
intrinsic broadening of state \\!\\(\\*FormBox[\\nStyleBox[\\\"s\\\", \
\\\"TI\\\"],\\nTraditionalForm]\\) in proximity ratio space. \
\\!\\(\\*FormBox[\\(\\*\\nStyleBox[\\\"b\\\", \\\"TI\\\"] \
\\*SubscriptBox[\\nStyleBox[\\\"g\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\
\"A\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"i\\\", \
\\\"TI\\\"]}]]\\),\\nTraditionalForm]\\) and \
\\!\\(\\*FormBox[\\(\\*\\nStyleBox[\\\"b\\\", \\\"TI\\\"] \
\\*SubscriptBox[\\nStyleBox[\\\"g\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\
\"D\\\", \\\"TI\\\"], \\\",\\\", \\nStyleBox[\\\"i\\\", \
\\\"TI\\\"]}]]\\),\\nTraditionalForm]\\) are the acceptor and donor \
background rates, respectively, of trajectory \\!\\(\\*FormBox[\\nStyleBox[\\\
\"i\\\", \\\"TI\\\"],\\nTraditionalForm]\\).\\n\\nFFretHMMForwardBackward has \
the option FHMMpinpfin. The default setting is FHMMpinpfin\[Rule]FHMMOnePeq \
in which case pini\[LongEqual]peq with \
\\!\\(\\*FormBox[\\(\\*\\nStyleBox[\\\"K\\\", \\\"TI\\\"] . \\*\\nStyleBox[\\\
\"p\\\", \\\"TI\\\"] \\*\\nStyleBox[\\\"e\\\", \\\"TI\\\"] \
\\*\\nStyleBox[\\\"q\\\", \\\"TI\\\"] \[LongEqual] \
0\\),\\nTraditionalForm]\\), and pfinal\[LongEqual]\\!\\(\\*FormBox[\\({\
\[Null]\\),\\nTraditionalForm]\\)1,1,...\\!\\(\\*FormBox[\\(}\\),\\\
nTraditionalForm]\\) are used in the calculations. Alternatively, pini and \
pfinal can be set individually for each trace using FPHSetPinPfin. The option \
is then FHMMpinpfin\[Rule]FMTraceWise. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FFretHMMForwardBackward[\!\(\*FormBox[\nStyleBox[\"K\", \"TI\"],\n\
TraditionalForm]\)] or\nFFretHMMForwardBackward[\!\(\*FormBox[\n\
StyleBox[\"K\", \"TI\"],\nTraditionalForm]\), photonrates]\napplies the \
forward\[Hyphen]backward algorithm to all previously initialized trajectories \
assuming the rate matrix \!\(\*FormBox[\nStyleBox[\"K\", \"TI\"],\n\
TraditionalForm]\). A list of state\[Hyphen]probability trajectories is \
returned. \nIn the first case (i.e. FFretHMMForwardBackward[\!\(\*FormBox[\n\
StyleBox[\"K\", \"TI\"],\nTraditionalForm]\)]), the photon rates set with \
FFretHMMSetPhotonRates are used. With FFretHMMForwardBackward[\!\(\*FormBox[\n\
StyleBox[\"K\", \"TI\"],\nTraditionalForm]\), photonrates], the photon rates \
given in photonrates are used. \nphotonrates is a list that contains for each \
trajectory \!\(\*FormBox[\nStyleBox[\"i\", \"TI\"],\nTraditionalForm]\) an \
expression of the form\n\!\(\*FormBox[\({{{\*SubscriptBox[\nStyleBox[\"F\", \
\"TI\"], \nRowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \"1\"}]], \
\*SubscriptBox[\"\[Mu]\", \nRowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \
\"1\"}]], \*SubscriptBox[\"\[Nu]\", \nRowBox[{\nStyleBox[\"i\", \"TI\"], \
\",\", \"1\"}]]}, {\*SubscriptBox[\nStyleBox[\"F\", \"TI\"], \nRowBox[{\n\
StyleBox[\"i\", \"TI\"], \",\", \"2\"}]], \*SubscriptBox[\"\[Mu]\", \n\
RowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \"2\"}]], \*SubscriptBox[\"\[Nu]\", \
\nRowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \"2\"}]]} ... }, \*\nStyleBox[\"b\
\", \"TI\"] \*SubscriptBox[\nStyleBox[\"g\", \"TI\"], \nRowBox[{\n\
StyleBox[\"A\", \"TI\"], \",\", \nStyleBox[\"i\", \"TI\"]}]], \*\n\
StyleBox[\"b\", \"TI\"] \*SubscriptBox[\nStyleBox[\"g\", \"TI\"], \nRowBox[{\n\
StyleBox[\"D\", \"TI\"], \",\", \nStyleBox[\"i\", \"TI\"]}]]}\),\n\
TraditionalForm]\).\nThe first list contains for each state \!\(\*FormBox[\n\
StyleBox[\"s\", \"TI\"],\nTraditionalForm]\) of the kinetic model the \
expression \!\(\*FormBox[\({\*SubscriptBox[\nStyleBox[\"F\", \"TI\"], \n\
RowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \nStyleBox[\"s\", \"TI\"]}]], \
\*SubscriptBox[\"\[Mu]\", \nRowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \n\
StyleBox[\"s\", \"TI\"]}]], \*SubscriptBox[\"\[Nu]\", \nRowBox[{\n\
StyleBox[\"i\", \"TI\"], \",\", \nStyleBox[\"s\", \"TI\"]}]]}\),\n\
TraditionalForm]\), where \!\(\*FormBox[SubscriptBox[\nStyleBox[\"F\", \
\"TI\"], \nRowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \nStyleBox[\"s\", \
\"TI\"]}]],\nTraditionalForm]\) is the mean total fluorescence detection rate \
(without background), \!\(\*FormBox[SubscriptBox[\"\[Mu]\", \nRowBox[{\n\
StyleBox[\"i\", \"TI\"], \",\", \nStyleBox[\"s\", \"TI\"]}]],\n\
TraditionalForm]\) is the probability that a detected fluorescence photon is \
detected on the acceptor detection route, and \!\(\*FormBox[SubscriptBox[\"\
\[Nu]\", \nRowBox[{\nStyleBox[\"i\", \"TI\"], \",\", \nStyleBox[\"s\", \
\"TI\"]}]],\nTraditionalForm]\) is a parameter describing the intrinsic \
broadening of state \!\(\*FormBox[\nStyleBox[\"s\", \"TI\"],\n\
TraditionalForm]\) in proximity ratio space. \!\(\*FormBox[\(\*\nStyleBox[\"b\
\", \"TI\"] \*SubscriptBox[\nStyleBox[\"g\", \"TI\"], \nRowBox[{\n\
StyleBox[\"A\", \"TI\"], \",\", \nStyleBox[\"i\", \"TI\"]}]]\),\n\
TraditionalForm]\) and \!\(\*FormBox[\(\*\nStyleBox[\"b\", \"TI\"] \
\*SubscriptBox[\nStyleBox[\"g\", \"TI\"], \nRowBox[{\nStyleBox[\"D\", \
\"TI\"], \",\", \nStyleBox[\"i\", \"TI\"]}]]\),\nTraditionalForm]\) are the \
acceptor and donor background rates, respectively, of trajectory \
\!\(\*FormBox[\nStyleBox[\"i\", \"TI\"],\nTraditionalForm]\).\n\n\
FFretHMMForwardBackward has the option FHMMpinpfin. The default setting is \
FHMMpinpfin\[Rule]FHMMOnePeq in which case pini\[LongEqual]peq with \
\!\(\*FormBox[\(\*\nStyleBox[\"K\", \"TI\"] . \*\nStyleBox[\"p\", \"TI\"] \*\n\
StyleBox[\"e\", \"TI\"] \*\nStyleBox[\"q\", \"TI\"] \[LongEqual] 0\),\n\
TraditionalForm]\), and pfinal\[LongEqual]\!\(\*FormBox[\({\[Null]\),\n\
TraditionalForm]\)1,1,...\!\(\*FormBox[\(}\),\nTraditionalForm]\) are used in \
the calculations. Alternatively, pini and pfinal can be set individually for \
each trace using FPHSetPinPfin. The option is then \
FHMMpinpfin\[Rule]FMTraceWise. ", "Documentation" -> None, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FFretHMMForwardBackward, {
      Fretica`FFretHMMForwardBackward[
         PatternTest[
          Pattern[Fretica`Private`Km, 
           Blank[]], Fretica`FNumericSquareMatrixQ], 
         Pattern[Fretica`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{Fretica`Private`statetrajectory}, 
         If[Length[Fretica`Private`Km] != Fretica`Private`FFretHMMStateCount, 
           Message[
             MessageName[Fretica`FHMMViterbi, "dimerr"]]; Return[$Failed]]; 
         Which[Fretica`Private`FFretHMMmode === Fretica`Private`FHMMBinned, 
           Fretica`Private`statetrajectory = 
           Which[OptionValue[Fretica`FHMMpinpfin] === Fretica`FHMMPeqOne, 
             If[Fretica`Private`FFretHMMGlobalRates, Fretica`Private`$False, 
              Fretica`Private`FPFretHmmForwardBackwardPeqFromK[
              Fretica`Private`FFretHmmBinning N[
                 Flatten[Fretica`Private`Km]], 
               Length[Fretica`Private`Km]]], OptionValue[Fretica`FHMMpinpfin] === 
             Fretica`FHMMTraceWise, 
             Fretica`Private`FPFretHmmForwardBackward[
             Fretica`Private`FFretHmmBinning N[
                Flatten[Fretica`Private`Km]], 
              Length[Fretica`Private`Km]], True, Message[
               MessageName[Fretica`FHMMViterbi, "erroptval"]]; 
             Return[$Failed]], Fretica`Private`FFretHMMmode === 
           Fretica`Private`FHMMPhotonByPhoton, 
           Fretica`Private`statetrajectory = 
           Which[OptionValue[Fretica`FHMMpinpfin] === Fretica`FHMMPeqOne, 
             Fretica`Private`FPMLHForwardBackwardiPeqFromK[
              N[
               Flatten[Fretica`Private`Km]], 
              Length[Fretica`Private`Km]], OptionValue[Fretica`FHMMpinpfin] === 
             Fretica`FHMMTraceWise, 
             Fretica`Private`FPMLHForwardBackward[
              N[
               Flatten[Fretica`Private`Km]], 
              Length[Fretica`Private`Km]], True, Message[
               MessageName[Fretica`FHMMViterbi, "erroptval"]]; 
             Return[$Failed]], True, Message[
             MessageName[Fretica`FHMMViterbi, "noinit"]]; Return[$Failed]]; 
         Fretica`Private`statetrajectory], Fretica`FFretHMMForwardBackward[
         PatternTest[
          Pattern[Fretica`Private`Km, 
           Blank[]], Fretica`FNumericSquareMatrixQ], 
         Pattern[Fretica`Private`photonrates, 
          Blank[]], 
         Pattern[Fretica`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{Fretica`Private`lh}, 
         If[Fretica`FFretHMMSetPhotonRates[
            Fretica`Private`photonrates] === $Failed, 
           Return[$Failed]]; 
         Fretica`FFretHMMForwardBackward[Fretica`Private`Km]]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {Fretica`FHMMpinpfin -> Fretica`FHMMPeqOne}, 
    "Attributes" -> {}, "FullName" -> "Fretica`FFretHMMForwardBackward"|>, 
   False]]], "Output",
 CellLabel->"Out[178]=",
 CellID->712009982,ExpressionUUID->"98900a1e-b6f2-4dbd-a1a8-2a843b8e39c6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FFretHMMSimulateBinnedTrace", "Subsubsection",
 CellID->163888271,ExpressionUUID->"5837fd12-9d24-4460-8e54-e645a6649de5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FFretHMMSimulateBinnedTrace"}]], "Input",
 CellLabel->"In[179]:=",
 CellID->621241466,ExpressionUUID->"5b06bfa7-9c59-4043-8aeb-c126c1561c82"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FFretHMMSimulateBinnedTrace[Km\\!\\(\\*FormBox[\\(_\
\\),\\nTraditionalForm]\\)?FNumericSquareMatrixQ, \\!\\(\\*FormBox[\\({{\
\[Null]\\),\\nTraditionalForm]\\)Fmean, mu, nu, bgA, bgD\\!\\(\\*FormBox[\\(}\
\\),\\nTraditionalForm]\\)..\\!\\(\\*FormBox[\\(}\\),\\nTraditionalForm]\\), \
Smax, t, binning] \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FFretHMMSimulateBinnedTrace", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "Fretica`Private`Km_", "?", "FNumericSquareMatrixQ"}], 
                    ",", 
                    RowBox[{"Fretica`Private`rateparams", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ",", 
                    RowBox[{"_", "?", "NumericQ"}], ",", 
                    RowBox[{"_", "?", "NumericQ"}], ",", 
                    RowBox[{"_", "?", "NumericQ"}], ",", 
                    RowBox[{"_", "?", "NumericQ"}]}], "}"}], ".."}], "}"}]}], 
                    ",", "Fretica`Private`Smax_Integer", ",", 
                    RowBox[{"Fretica`Private`t_", "?", "NumericQ"}], ",", 
                    RowBox[{"Fretica`Private`binning_", "?", "NumericQ"}]}], 
                    "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`Fmean", ",", 
                    "Fretica`Private`mu", ",", "Fretica`Private`nu", ",", 
                    "Fretica`Private`bgA", ",", "Fretica`Private`bgD", ",", 
                    "Fretica`Private`length", ",", "Fretica`Private`dat"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`Fmean", ",", 
                    "Fretica`Private`mu", ",", "Fretica`Private`nu", ",", 
                    "Fretica`Private`bgA", ",", "Fretica`Private`bgD"}], 
                    "}"}], "=", 
                    
                    RowBox[{"Transpose", "[", "Fretica`Private`rateparams", 
                    "]"}]}], ";", 
                    RowBox[{"Fretica`Private`length", "=", 
                    RowBox[{"Round", "[", 
                    FractionBox[
                    "Fretica`Private`t", "Fretica`Private`binning"], "]"}]}], 
                    ";", 
                    RowBox[{"Fretica`Private`dat", "=", 
                    
                    RowBox[{
                    "Fretica`Private`FPFretHmmSimulateTrajectoryPeqFromK", 
                    "[", 
                    
                    RowBox[{"Fretica`Private`length", ",", 
                    "Fretica`Private`Smax", ",", 
                    RowBox[{
                    RowBox[{"N", "[", "Fretica`Private`binning", "]"}], " ", 
                    RowBox[{"Flatten", "[", "Fretica`Private`bgA", "]"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"N", "[", "Fretica`Private`binning", "]"}], " ", 
                    RowBox[{"Flatten", "[", "Fretica`Private`bgD", "]"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"N", "[", "Fretica`Private`binning", "]"}], " ", 
                    RowBox[{"Flatten", "[", "Fretica`Private`Fmean", "]"}]}], 
                    ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"Flatten", "[", "Fretica`Private`mu", "]"}], 
                    "]"}], ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"Flatten", "[", "Fretica`Private`nu", "]"}], 
                    "]"}], ",", 
                    RowBox[{"Fretica`Private`binning", " ", 
                    RowBox[{"N", "[", 
                    RowBox[{"Flatten", "[", "Fretica`Private`Km", "]"}], 
                    "]"}]}]}], "]"}]}], ";", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Fretica`Private`dat", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    RowBox[{"1", ";;", "2"}]}], "\[RightDoubleBracket]"}], 
                    ",", 
                    RowBox[{"Fretica`Private`dat", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}]}], 
                    "}"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`FFretHMMSimulateBinnedTrace\"\
\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FFretHMMSimulateBinnedTrace[Km\\!\\(\\*FormBox[\\(_\
\\),\\nTraditionalForm]\\)?FNumericSquareMatrixQ, \\!\\(\\*FormBox[\\({{\
\[Null]\\),\\nTraditionalForm]\\)Fmean, mu, nu, bgA, bgD\\!\\(\\*FormBox[\\(}\
\\),\\nTraditionalForm]\\)..\\!\\(\\*FormBox[\\(}\\),\\nTraditionalForm]\\), \
Smax, t, binning] \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FFretHMMSimulateBinnedTrace[Km\!\(\*FormBox[\(_\),\n\
TraditionalForm]\)?FNumericSquareMatrixQ, \!\(\*FormBox[\({{\[Null]\),\n\
TraditionalForm]\)Fmean, mu, nu, bgA, bgD\!\(\*FormBox[\(}\),\n\
TraditionalForm]\)..\!\(\*FormBox[\(}\),\nTraditionalForm]\), Smax, t, \
binning] ", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FFretHMMSimulateBinnedTrace, {
      Fretica`FFretHMMSimulateBinnedTrace[
         PatternTest[
          Pattern[Fretica`Private`Km, 
           Blank[]], Fretica`FNumericSquareMatrixQ], 
         Pattern[Fretica`Private`rateparams, {
           Repeated[{
             PatternTest[
              Blank[], NumericQ], 
             PatternTest[
              Blank[], NumericQ], 
             PatternTest[
              Blank[], NumericQ], 
             PatternTest[
              Blank[], NumericQ], 
             PatternTest[
              Blank[], NumericQ]}]}], 
         Pattern[Fretica`Private`Smax, 
          Blank[Integer]], 
         PatternTest[
          Pattern[Fretica`Private`t, 
           Blank[]], NumericQ], 
         PatternTest[
          Pattern[Fretica`Private`binning, 
           Blank[]], NumericQ]] :> 
       Module[{Fretica`Private`Fmean, Fretica`Private`mu, Fretica`Private`nu, 
          Fretica`Private`bgA, Fretica`Private`bgD, Fretica`Private`length, 
          Fretica`Private`dat}, {
           Fretica`Private`Fmean, Fretica`Private`mu, Fretica`Private`nu, 
            Fretica`Private`bgA, Fretica`Private`bgD} = 
          Transpose[Fretica`Private`rateparams]; 
         Fretica`Private`length = 
          Round[Fretica`Private`t/Fretica`Private`binning]; 
         Fretica`Private`dat = 
          Fretica`Private`FPFretHmmSimulateTrajectoryPeqFromK[
           Fretica`Private`length, Fretica`Private`Smax, 
            N[Fretica`Private`binning] Flatten[Fretica`Private`bgA], 
            N[Fretica`Private`binning] Flatten[Fretica`Private`bgD], 
            N[Fretica`Private`binning] Flatten[Fretica`Private`Fmean], 
            N[
             Flatten[Fretica`Private`mu]], 
            N[
             Flatten[Fretica`Private`nu]], Fretica`Private`binning N[
              Flatten[Fretica`Private`Km]]]; {
           Part[Fretica`Private`dat, All, 
            Span[1, 2]], 
           Part[Fretica`Private`dat, All, 3]}]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Fretica`FFretHMMSimulateBinnedTrace"|>, False]]], "Output",
 CellLabel->"Out[179]=",
 CellID->209990037,ExpressionUUID->"c37ad107-14e3-4a71-80f9-c6b25973e454"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Demonstration for a two-state system", "Chapter",
 CellID->149747849,ExpressionUUID->"6a7db7eb-3ddf-4795-9670-38b64e1d5cb6"],

Cell[CellGroupData[{

Cell["Definitions", "Subsubsection",
 CellID->17230674,ExpressionUUID->"38cac3e1-f96c-4f38-9356-fe2d1e7dc4cb"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Addt", "[", "dat_List", "]"}], ":=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"binning", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "dat", "]"}], "]"}], "-", "0.5"}], ")"}]}], 
       ",", "dat"}], "}"}], "\[Transpose]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SimulateAndPlot", "[", "\[Nu]_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mcs", ",", "straj"}], "}"}], "=", 
       RowBox[{"FFretHMMSimulateBinnedTrace", "[", 
        RowBox[{"K", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "Frate", ",", " ", "\[Epsilon]1", ",", " ", "\[Nu]", ",", " ", 
             "bgA", ",", " ", "bgD"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "Frate", ",", " ", "\[Epsilon]2", ",", " ", "\[Nu]", ",", " ", 
             "bgA", ",", " ", "bgD"}], "}"}]}], "}"}], ",", "Smax", ",", " ", 
         "t", ",", " ", "binning"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"na", ",", "nd"}], "}"}], "=", 
       RowBox[{"mcs", "\[Transpose]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Addt", "@", "na"}], ",", 
            RowBox[{"Addt", "@", "nd"}]}], "}"}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Red", ",", 
             RowBox[{"Darker", "@", "Green"}]}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
          RowBox[{"AspectRatio", "\[Rule]", "0.1"}], ",", 
          RowBox[{"PlotRange", "->", "All"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"\"\<nu=\>\"", "<>", 
            RowBox[{"ToString", "[", "\[Nu]", "]"}]}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Addt", "@", 
           FractionBox["na", 
            RowBox[{"na", "+", "nd"}]]}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
          RowBox[{"AspectRatio", "\[Rule]", "0.1"}], ",", 
          RowBox[{"PlotRange", "->", "All"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Histo", "[", 
         RowBox[{
          FractionBox["na", 
           RowBox[{"na", "+", "nd", "+", "0.01"}]], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0.02"}], "}"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"\"\<nu=\>\"", "<>", 
            RowBox[{"ToString", "[", "\[Nu]", "]"}]}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}], ",", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"FBetaPeak", "[", 
              RowBox[{"\[Epsilon]1", ",", "\[Nu]"}], "]"}], "[", "e", "]"}], 
            ",", 
            RowBox[{
             RowBox[{"FBetaPeak", "[", 
              RowBox[{"\[Epsilon]2", ",", "\[Nu]"}], "]"}], "[", "e", "]"}]}],
            "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"e", ",", "0", ",", "1"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"PlotPoints", "\[Rule]", "500"}], ",", " ", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"\"\<nu=\>\"", "<>", 
            RowBox[{"ToString", "[", "\[Nu]", "]"}]}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellLabel->"In[15]:=",
 CellID->934339100,ExpressionUUID->"d8c31488-136c-4d0a-a9c1-4db9da5955f4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Simulation of photon traces", "Subsubsection",
 CellID->617999158,ExpressionUUID->"d5acc81c-2328-4e49-89f1-51a2c021b915"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Km", "[", 
    RowBox[{"{", 
     RowBox[{"k12_", ",", "k21_"}], "}"}], "]"}], ":=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"-", "k12"}], "k21"},
      {"k12", 
       RowBox[{"-", "k21"}]}
     }], "\[NoBreak]", ")"}]}], ";"}]], "Input",
 CellLabel->"In[17]:=",
 CellID->396681419,ExpressionUUID->"c5904d0b-8f07-47af-aeba-857d193a433c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"params", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"kf", "\[Rule]", "40"}], ",", 
     RowBox[{"ku", "\[Rule]", "50"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K", "=", 
   RowBox[{"Km", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"kf", ",", "ku"}], "}"}], "/.", "params"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Frate", "=", "70000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bgA", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bgD", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]1", "=", "0.3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]2", "=", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"binning", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Smax", "=", 
   RowBox[{"Round", "[", 
    RowBox[{"3", "*", "Frate", "*", "binning"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"SimulateAndPlot", "[", "50000", "]"}], ",", 
    RowBox[{"SimulateAndPlot", "[", "50", "]"}]}], "}"}], 
  "\[Transpose]"}]}], "Input",
 CellLabel->"In[18]:=",
 CellID->163882861,ExpressionUUID->"234fd1e6-7395-4464-b972-643d17e759a8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[1, 0, 0], PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxdmnls32d9x6MOIYQmtjEGpRsMWMmyEIyd2I6P2Pn6PpKWo1NVoapCCBjj
pmwd61jXqqoqhFApBQqUUnrRg1Larkd6JE2bNleT1EntOI4TJ07r2E4ce4x1
G+uY9vt+35fU/GO99Nyf53m+r8/j+L2f/PLHPn3WsmXL5n5v2bLy5//e8+sD
532yWL+s+tda/M8Vn3vq7264iLy6+Ke33T8wffmnyGuLf5xf3vCm+77g+uuO
ffjbN37pUvKq4omh3z/rA9deRm4s2h7eedmWWy4nNxWb3n3N6Y9uusL8k+fe
88Cln73K/U3+tpzA1R7vTz909Nw3XnWN+eOfaq+NeC25ufjxj8p/33T5xL7/
uuDlO7/l/t/5hgvf8sGHvu3yi1rLCV1Hbi82rv1m1ydmvkPuLBY+Ws7wetf/
1hdmX7vn198l1xUfuPbttSFuILcVL9za9+hvfvc9ckvx+Vr0zn7DD1z/zeO3
f6XjzTc6nveW4f7DH3p+w2W43v4j1z9VhvfPfuz65exG3neTy//q4uuefXXF
T7z+XbXonvOhmz3+315/5hvrm37q/ah1VgvZLV7PX798503Pvedn5Prijtrs
xm8P/8fvRr8+v/xWt++tAiDuKL53dhnQ27y/VXcP3Ob5rKn+3e7xrt66uxYh
cUPxUm31F7Xe4fp/UW34HY7H1z5bLuBOl297dUVtxXe6vz+uOvy541P29vBO
8brioZuX7tq+4S63P6vaMPHK4mPVAbzb7W8rt2/0bvf/7+X2XHSPz0d3Gf7J
ezy/75bhveRen9fpy8sLcq/rN1QB/4X7v+r7PbUI/sLt97+vXPB9bv/e2um/
/sx9js9Xy+34yi+9n8+U4fvNLz2/P6oO8P1eXzW934rbiqq7b/zK4+HnA+a7
t2+onXjxmuIjtdv71qvD/31BuaPhn51TXsAHzYPVgh/0+P92V9mhuL74Ya23
rbsf9HqKpktqn4SHPP+518oPzkNeX3maL75OXFdU13GEfOVgUX1e3vqvLO8r
qut3gbi/qD4P3xf3FNV1Gxf3Fv9Sfs7OfpjcXfxltUHkK3uKF8vPxU3ivuIf
yut0VDxc/Hn5uXr3I47fjjJ8n3jE6/9yudxbxUXxjuoD9Ijj8XTZ3bmPOn5/
85ny36Pe/9rHqXZiH/X6y9P49fnUv6T6oD7meL6xOlCPefzy6/y2+x/z/C6s
OnzM8f6/8jo3bCIvL35eXtdLN3l+51cXaJPH+8/yur0qbit+Wl6ntY/7fvVX
E3zc4y2W1+GJlP+gPO6vPe71dVYfwCe83yfL43qFeFVRHb+tT3i+1XE560nP
p9renicdn2o7rhF3FlX4totXF2Plct/0lNv/czm9oac8v/dXAXzK8du7p/wn
7ij+/obyA7fZ839XJZzNnu/zpa6u3+zxvljq4cBmx+tPqg3Z4u/j5lIHF27x
+j5d6uvGLZ5f9fmf2OL5Vbo852ny+qL63F/8tPe/0tnNT3v86vN+TLySftnq
8bH/YXz/tro+zoO4nf7f6vnhfGz1+vC93Or9x3kJw2fPeH9wfp7x+vF9JV/Z
xfOk8gH6XNzH8yXu5fdY7Xt43sQD9Oezbo/zJ+7h91vcVVSfzyvCVXpwy7Oe
P85nyvG9f9bzx3ndxvJB+nqbvyc4v+Je+mGb9xvnOfWRv2xzPHC+xd30yTav
F+f9OX8vkR+I+3n+xUP0j7ib9yH1kd895/jhfoThq/SH+/K854N85Hl/D3F/
nvf+w2/iVt4n8Wrma+I1vF/iNvpQvJL3bbvPL/IfcQPvn7ie/hQ3F1U6eaO4
hfnpdq8X93O7zxt8q/Ih3tcdXj/yrR3eb9zfHd4f+Jm8bCPvc+ojP93h+OJ+
7/B4+LnT5wP53E7vJ/y+0/NHfr/T84fvd3p/kP+lP/h/p/cL+XHqIx/Y5Xgi
X9zl/UN+sMv7h/xe3MR8QdzI/DL1kT/s8vyRj+/y+Lhwu71e5KO7fT+RX4i7
+T4R9xbfqfINte9j/rrb4yH/2O14I/9Pe+QjL3h85LviYeYnL7g+3jMpR77y
gvcD+bHqK38RD/K9kfGQz+zxepFP7/F8kd/s8X7i/bbH8UC+k3Lk32mP/GeP
vwd434gL5kN73R75uriN+dFe18f7TdzFfEncy/x+r8dD/rTX68N7ap/3B/nU
PscX74GUI7/a5/19snqP7nO8/6D6oO7z+Hg/qH0L8y9xM99vL5qRj4lX8L3x
otsjPxM38b36ouODfC2M94m4kfmbuIHf9xGXY/9H3D++9yMeH+dBvI7ff/Fa
no8Rxxs+GHF8cF5UX34Ycbxxfka8//BF2uM8pRz+SH84X+KCPkn/OG/pD37Z
7/uA87ff+w3f7Hf/OI/7HR/4J+1xPsPwkXiY51XcQz/tf935TTl8pfI+nueU
w19ine/Uh8/2e7047wccD/jtgMtx/sW99J3qD/E+pD38d8D7jftxwOupjv9l
qY/f36R/+DH18V5R/bX0pbiR90ncTH+KO3i/xO30aerjvr3k/YNfw7h/YfhW
3Mn7KK6jf8X1vJ8vef7wsXgN72sYfha38P5mfPg6/eM+v+T1wN+pj/stXl3g
56i/J8jfRx1P+F28kvn8qPuH78WtzO9HvT74X7yK+b64jfnAqPcH+f+o54v8
YNTrx3tAvI75QsbD+0DcwPxh1PHBeyGMfGLM9fF+GPN8kV+kHO+JMccD+caY
44X3xZjji/wj9fHeGPP+Ih8Z8/zx/hjz/JCfhPEeGXP8kK+MeT/wPsn4yF/E
6/leGXN8kc8cdHzxfjno+SC/Oej54j1z0OMh3xHrfSOuY/5z0PuF9/dBf3/w
+xeV9/P9k/6QH6l+F99DBz1/5EuZP95HmT/yJ3Er30vjXg/yqXHHF++ncc8X
+dW4x8N7atzxR74l7uD7KuXIv8a9/3hvZXzkY+OOJ95f4/7+IT8bd3zwHlN5
P/M18SDfZ2mP/E3tC/r8kL+38Pkhxxs+P+Tx4PND/v7D52Lle+Ju+lztO+nz
Q44nfH7I64fPxavp85TD54ccf/g89eHzjAefi1vo80OOL3w+4fMAn0+4HD4X
19HnEx4PPp/weuDz1IfPyVduoM/FBX0+4XjC52rfTZ9PeH/h8wnvF3ye9vC5
WD5Pe/j8MNsP0OeHvd/w+eHX+VzlffR5GD4/7P2Gz8VdfN+q/iDz39TH758O
ez3weeYDn6ccPj/s9cHn6Q8+V/0u+lxc0OeTjj98PunzDZ9Pev7w+aTnD59P
ejz4PO3h80nHBz4Xn0+fZ3z4fNLxhs/D8Pmk9xc+z/zg80nvJ3ye+eLnEccP
Pj/i/uHzMHx+xOuBz4+4P/g89eHzI94P+PyI4wOfq/0wfS5upM/FDfS5eAV9
nnL4XKzfB4hb6PMwfH7U/obPxW30ubidPhfX0+fiNfT5UY8Pn6d/+Pyo5wuf
H/V64fO0h8/FdfR55gefZ37wubiZPg/D5+JW+nzK64HPp1wOn095PvB5GD6f
8vrh8ynHFz4Xd9DnU14vfr8hbuL/v055f1+pfJ7+4fMprwc+z3zh8ynHFz5P
//D5MbeHz8X6/8tjbg+fH3N84fO0h8+PeX7wecrh82NeL3ye/uDztIfP0x4+
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
vv8HR8U9EQ==
          "]]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], PointSize[
         0.004583333333333334], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdm3ls3nUdxxc0xhDjiYp444UhBna0Xdd2/T7t06d9+vQaGEIMIcZ44K2o
qKgIIYQQQrjUoZzjmkOYG24cY2MFxu6NnbRdt27t1m7dutYLL9T4/H7v45O4
f5p3Pt/j8/18j9fn8zzPPvqFb1/0pTNmzZp14g2zZmV//73sT3u6v5CaZ2X/
rm1P/7rma2u/f+el0LO60k/OWt4+evUXqYvpx5OfnP3mx79B3ZsaD/fesvhb
V7J/W1pTfssZ5994Fe2ltGDV5quev/9q6kJ65kM3nFr0zDVuf8+Gj6y48orr
qDvS8D8zB66n7k3vv+DQx9903Q3UXelzX2yozngjdWf6za+zfzfZ/6Gdf7/4
6CM3UxfT+954yVs/8+Qt1JV0aX3m0K2ev6vupsLnx2+jf61palHm4e2096Sb
v3H89WV/uoP29nT+je+pTnGn9bYlbU/95T+/oG5LX69G7+w3/srrOXPgoe80
nbnY4z+Whfvtd9HekjqzcL3n1+5/MgvvB37j9WXe7Tr3bsf/05fd+uJr593j
9W6pRvecC+51fL56++mfNtfcx/blVB2sGrL73f6zRx+5e8NHHrD94ap3Aw89
4Pn/+p99P5r85BK2L6diHoAlbv+Ls7OAPkh7a8qHW/Gg1zs3//eQ57u+f2s1
Qg/5PO2trv7S+oepe9LH8g2XrqTvXZEt4BHvz0uvnVdd8SPu/658wEepO1M2
2qrNj3q/nrx3ZunGylL7e0a+YUsdv4vyA/hb938w27590h3pz9n2XLrM+9OS
hX94me13ZOG9/DH3H706uyCP2d/ZecB/5/Nx3S9bqxH8neOz+9xswY+7/0er
p//20487Xt/NtuM7T3g/X8jC95cn3P8d+QFebn9y9/653PPnw/309z7/aLfC
+rcbK9UTv8L9+6q3953Xr/D8/7g421HZW9MD52QXcKX3qyNf8ErH+49LswFX
ev/uqo7Wv3Wl451qLq8+CU/a/xOvZw/Ok26fnebLbpW9O+XXcZfsjSl/Xt75
B+oFKb9+F0vXp/x5+KX0wpRftwHplH6ePWdnr6KuTZ/KN2iV+7+SPRd3U19b
SD/MrtMh2RvSh7Pn6kOr7f+mLHyfX+39/Xa23CWrvZ/vzR+g1d6P9dlwH3/K
7+FXvpz9C119nKon9in3z07jjyafcv/L8wf1ac//pvxAPe39yF7ns5Y/bX8u
yQd82vv53+w6z36GOqVHs+t65TO+Hz35BZK9Jf0tu26vSZfSfdl1qnvW+1nK
HXzW79N0dh3WPOv5fpUd99fVvistzB/ANV7fRHZcr1ljf/Pj17/G68mPyxnP
+Xzl29v6nHmTb8cNofPwbVT7YtqfLffNa31/fpa5V15r/z+RB3Ct/d2xPfsX
+gd3Zg/cOr9vH8yBs87xeDnD1e3rfH++meFhzzrv17vzDXne92ddhoNLnjd/
vpTha7F0OeXP/5Dal1KOy3PWUy9K+XN/mXQl5Ti7d73jlz/vh9f7fIAv/Y4/
9r/f68P71+/44Dz02x/wX/11PqI/3svQOC/9Xh949oL9wfmR7ub7Sj2rmedJ
upE8V/sWnq9oj/f4Be83zpvs9eTnix4P5096Ad/vF90+fz6vka5JeXpwf/TH
+Yz2eO+lF/K8vkQ9l7x+yf7j/IYdfJA98TyHRv4iXeD5Vv855Il04nnf4PUh
P9jg9jj/0vPJH+k63gfpJuZ3G7w+3A/p2eRVtMd9edn+Ih952XbcH+kO8k26
nfdJ/XuZr8nex/slXSEPpbt53zb6/iH/oU59vH8bPT/4qfbtKU8nF2/0eMhP
Nzq+uJ/SteTtRscH93WT7zvyLelG3t9N3h/weZPjg/scGvlp9Mf93uT9w9/N
tiOfk24h3ze7PfL7zfYfvN/s+ZD/bfZ+gP/SJebHMR/ygS2OF/JF6SLzgy3m
A/L7Ld4/5AtbPD7yS+lO5g9bHF/k41vsLy7cVp9f5KOhkV9s9f1DfbLV+3lb
nm9s9XjIX6UbmH+ERv4v3cx8ZJvPO/LdbbYjP5EusJ7Z5vmQr2xzPJEfb/N6
kb9It7HeiPGQz2z3eMint7s/8pvtfk9Qv8m+gPnOdvuL/Fu6lvmPdA3rG+l6
5kM7rJGv77A/yI92OH6o36I98qUd3g/k9zscT+RPO7yfqKd22n/kUzttRz2w
0/2RX8k+Lz2X16PR/m35g7rT8UH9IN3F/Cs06rdXvB/Ix0Kj3pBuZ35GXc0X
UK/K3sV8TfZu1ieytzJ/i/Hxvu/y+Nh/6W6+97v8nuE8yF7h+y97kedjl/cL
PNjl+OK8SLeQD7u8fzg/uxw/8CLa4zxJzyc/QuN8STeTJ9KNPG8xPviy2+cb
52+35wNvpAs8j9I15I/0hTyf0rXkUbTHed3t8wQ+7Xa8cH6lG8ir8A/nOezg
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
eB7jg+cz3l/wPPz7H8D+bp8=
          "]]}}, {}, {}, {}, {}},
      AspectRatio->0.1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->500,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"nu=50000\"", TraditionalForm],
      PlotRange->{{0, 0.9995}, {0, 71.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], ",", 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[1, 0, 0], PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxdm3mMnlUVxhskhBDjgogVEaHWcRzG0pl2usx6Z99aymIIMYQQAoiKgKiI
iFhCCCGEALKUfd8FhFKgLC3daEtLl9m6MrSdznRm2k5HRFREjN/7PstJ7D9f
npx7zz333OV37vdNTzr/sjMuPGzChAkjX5gwIfv8z7Mfdc89P9VNyP/VpH9f
+7O3f33H2dSN6ffHvNi65+oLrH83WlR25POXUDen6l3zbllw6RXQ8+elN9u/
eNjJN15JXZ8qF629cunDV1O3pMUn3HDg9MXX2t8Dq0586YqLr6O9Ie38NAvg
eurW9K1T+icfcd0N1j++oKow4o3Unem+e7N/N1E3pe0b/3nm3idvpu5I3zz8
rC/9cOEt9n/27CygWzl+XZoz86b684Zuo70tHTw9i/B2z+/mS4Y/e/ajP9n/
yTceWxjiDuo5af2jza99/PmdbF+ffl7I3sTD76a9MR219fHLa45aQPuc9FyW
7q/cQ92WOrJ0HXuv49ufpff4+5yfLLrNk+53fD8459YVnxQ/4Hy8V8jucac8
SJ3ST28fu6au4iH2b00FZ4WUPex8/Gjvk/evOvERx/dEIbqtjz9i+98/771q
tOhRz6cpT4B0Q7pzYpbQx+w/d/fSY24/Lf/3uPN3/bJ1hQw9bv89hdmfPfsJ
2qvTd/MFf8Ltf3VxNoEnqeellZ8UF2Ys3ZK+ljt8yuuXeVu0lnp+e1r44PjT
qzuftj4sXzDpznRGvgGfcX4fy5av9xnv379ly3P2s16fhiz9O5/1fP+Upffc
55yPPVdnB+Q5x1+WJ/zP9n/dXY2FDFLPb05dk7IJP+98nFTY/bePPW//v8yW
4/IXPP7yLH0fv2D/X8038IvU5SkP71PpKSl3d81fqGclfL5EXZmeWd1Z2PHS
Zem0wuk9+vqX7O9fZ2YrGvZHjssO4MvUxaktn7D07PTXpzOHL3u8ewrelq2T
np5SxbmFK2EhdVUa+Sy7cBbanu3mc26VLkr5cdy80PHk18vRr9h/fvzOlJ6R
8uvhrlfcPj9uW1+x/z9m19nERdS16fv5Ai1y+03ZdXH/Ip+f32bHqX+R4/1O
dl2d8Cp1SVqTpe+8Vx3vZdl0H33V7b+RX0DSFemdzN3k15z/n1yU/QtduJwK
O/Y1zy/bjVeNvmZ/5+YX6ute3yPyDfW6/We38zEvvu71OCt3KD0z/Tc7zmWL
qaelp7LjesViz+fU/AAtdr7+kR23T6Rb0kPZcZr5BvMzN7XkAUrPSYey4/Dm
Gz4Pd2fb/TPptlSbX4BvOv/7su167Zu+z/Ltt0z2dmyXw96yv3x5G9/yfPLl
uEE6pTx9q99y/H3ZdI982/vjD1l47W+7//fyBIbe8H72723n5zd3ZBfcEvf/
dg6cJV6fdzNc3b7E+f5FhofuJR7/6/mCLPV6LclwcNZS+78ww9eCpR4/v/63
L3V+clwe94795df9OdJlKcfZg++4f36975IuJV+WeX9j/aWLef8t83ywH6SL
yH/peu6PZc4H7kvpCu4X6UrybLnjx/5Z7v64X5c7f9hP1IV6ATwPO/bXcseL
+3i554v9Jl1Cfq5wfNh/K2zH/b3C65Nfn9eucHx5efDwCucD+3OF84n7Xnoq
9+tKtwevVzof2L8rHQ/4EBr7eaXHR/2y0vFhf0sn8kS6jPt9lfcD6gPpau7/
VY4H/KEu1Bs4D6s8H9R30tN4PlY5/+CV9Ik8L++ar6hHpNt4ft71/MC30DhP
7zp+1GvSdTxf0q3kofx38Lytdn5Q/0g38fxJi5/Sc1JeTi6QrmF9Kj2P53O1
8wXeSrfzvK7xfkW9Ja3zG3bweY3ni/MsXcT6dI3XF+d7jdcDn2udf9Rz0qXk
+1r7R32/1usL3kuXs/5b6/HA/7XOF+rjtc4n6oH3fD+jXpRuYX3wns8z6vv3
3B/1gnQb60u1b2H9IK16XO0bWU+s8/ioR6XrWF9QF+p1vE/W2f9teb0RGvXr
OseP+iM06n+1b2U9st7xo95d7/FQn8hew/fMesePemW984H6ODTqF+kSvjek
61nPvO/9hXpauoj1jXQr32/vuz/qHelK1t/SU1j/SE/j+yY06qEN3l+o16Un
sj7a4HjwftvgeFEvSVewvt/g+aJ+ki7me2qj7ainNnp8vAekZ7O+ki5Lb+Xv
0Y2e35fzC1V6Bt8P0pNYf210fHi/bXJ71GObnA+8Nza5PeqzTY4P79VNjgf1
2ibHg/fJJq8H6jfpGt7vm+0f67/Z88V9v9n+sR82O17c/5vtH/tDeip5IF3N
/RL+wAfpydw/EQ94Ef6xnzZ7vcGP8If9Fe3BE+ly7reIH3zp8n2C/dfl8w7e
dHk9sB+7PB/wp8v+sT+7nF/wqMvxYL9KN5FPXZ4v9q/iSeRVl+PFfu7y+oBf
Ycf+7nL+wTPpmdzv3d7v4Fu354f9L11K3klP4Xno9nzAv27nH+dDelbKt/+V
3c4Pvr8JO/gY/fFe6fb8wctuzw/nqdvrBX6GHecrNHja7XzhvPU4H+Brj+eL
89fj9QBve+wP57HH+QJ/Q+N8Rn/wOOw4rz3OH/jc4/zi/EZ78Fp6Ms9zj/MJ
fvd4fjjf0rUJn73UVazfe51/8L3X46Gel55K3vd6/qjvpYvIf+nprPd7PT/U
A71eT9T/4Q/1QfTHeyA06oVoj/eBdBnrh17nA++F6I96oo/6eL4f+jx/1Bd9
bo/3RJ/HQ70RdrwvpPX9Yp/zjfdGn9cD9Uif84/3R5/jRX3S5/XHeyT6o17p
837H+yTao36Rnsn3SsSLemaL7yu8X7Z4vVHfSBfzPbPF/lDvRHu8b7Y4PtQ/
0hV8f0d/fP8S/fH+kU6sj6I93kOhUS/FeHgfbfH6oH7a4vXEe2mr9x/qKel6
vp+ka1hfSbfwPUU9v5n1lnTi+0rt21h/STfxvRXjoR6TLuH7a6vzgfpMupzv
sbCjXpOezPeZ9DGs37Y6/+D5NucLPN9m/+C5tOo76QbyXLqYPN/meMDzbc4f
eB4aPJeuJs+la8nzbV5f8Fw6kefSpeT5Ns8fPJeuI8/DDp5v93zBc+lK8ny7
1wc83+7zBZ7LXkaeb3e84Ln0LPJ8u+cPnm/3eoDn0lXkubR4HvGC52EHz2M8
8DzmA57v8HqC5zscL3guPZU83+HxwPPQ4PkOrx94vsPrj/dttEf9u8P5wvdP
Ozx/8Dzag+cRD3guXUKeR3/wPMYHz6M/eL7T44PnO90fPA8Nnu90fsHznY4P
PA9/4Lm0vv8Of+A59fxO8ly6jTxX+1byXPZG8lz2TvJ8p9cXPJduSPj8wPsX
PP/A/cFz6sJ7ETyXbiHP1b6FPP/A8YHn4R88V/968jzs4Ll0B3ku3UaehwbP
pdvJ84gXPI/xwHO1T+R5v9uD59Kt5Ll0M3ke7cHzft8f4Hm/4wfP+z0+eB7+
wfN+5w8873f+wPN+rxd4rv7t5HnEA56rfRN53u/5gufhD4D70PsPPJeeTp5L
V5Hn0uXkuXQxeS5dSZ5LV5PnH3p8fL/xofOD319lb06DOc8jHvBc+jTyXP1b
yPPQ4Hlo8HwX+88hz6XF812ODzzf5XjA811eP/A87OC57Pp9ONqD57u8PuC5
dDt5rvb6PVL2TvI84gXPoz94Lj2bPI/xcL/v9nogIbu9n3Df73a+sB+kG3n/
77Z/7I/dnh94ID2H+0XtG8mHGB/7Z7fnA15EPNhPsqeU4+Mi6baU4+HS3c4/
3oe7nT98Xy7dxPdizA/1pPp38P0Y/VFfyt5K/kR/1JvRHjyKfGG/RvzgU8wP
+1e6gbwK/9jP6l9HfoUd+zv6g2dqr9+n9jhf4Jt0E/f/HrcH7/Z4PXEepNvI
v+iP8yF7B3kY/XFepBP5uMfzwfmRriQvYzycJ+l68nOP84nzJT2LPA2N8yZd
Tb5Kl/P8RTzgrXQZz2O0B3/DjvMZ/sFj6SqeV+li8ll6Js9v9Aevoz3Oc4wH
fkuX8nxLz0j4HLB/1O8Dzgf4Lq3v56SnkvcDzi/q+wHPH/wf8Hio96Wnsx4Y
cHyo/wecX9QHA54P3gPRH/VC9Mf7IPqjfojx8V6QnsR6QrqS74cB5xP1ReQD
74mYP+qNyB/eFzF/1B8DXi+8NyJfqEdifnh/SE9mfRL5x3sk4kG9Ij2N75Pw
h/ol7HivRP5Qz+z1fYj3i3QH65u9vp/wnon2qHdkb+H7RvZa1j97PV+8d6Tb
WQ+FHe8f+WtjfSR7I99DsjezXor+eB9Jt7B+ivjwXpJuYD0lXc/3U/hHfRUa
76noj3pL41XyfRXxo/6K/nhvqX0D6zHZO/j+kl1/nyPdyvdYrAfqtRgP7zO1
P431W6wXeD7ofODCH/T9DJ4POn/g+aDHA89lrybPoz94Hho8j/HA80HHC55L
6/fMQecHPA873oPSp7JeDH94H0Z78Fz+GsnzQecTPI/xwHPpKvJc/urJc2n9
fVjMDzyPfIHn8tdJnkuL52ovnsd44Pmg1w88j/HBc9nbyPPIB3g+5PUAz4fc
HzyXvY48l55Ong85f+C59FTyfMjxg+eyl5PnQ44PPB9yfOD5kPMFnqt9B3k+
5PUBz4ecP/A85gOeyy6ehwbPY37gecwHPI/24Ln0DPJcupI8l55CnkuXkOfR
HzyP8cFz6VLyXLqCPJcWz8MOnoc/fO5z/OD5PucPPN/n+wg8l72JPN/n/IPn
al9PnkvPIc/DDp7v8/qC52EHz2N88Dzag+fSjeR5xA+ehz/wPDR4rvbN5Lns
+v5f9jbyXLqOPFf7JvI8NHiu9vXkedjB8/AHnsveQJ7LXkueRz7A8/APnsf8
wfNYL/A8/IPnw76fwfNh30/g+bDzDZ4PO17wfNjxgefDzhd4Puz8gufDXi/w
PMYDzyMe8DzGB8+HnT/wXLqdPA87eB79wfMYDzwPDZ5He/Bc8bST5zEf8Fzt
9ftnxA+eS7eS55Ef8Fy6hjyP8cHz6A+eD3v9wPOwg+ehwXO1199jj9g/LvwR
xw+ejzh/4PmI+Q6ejzhf4Lns4vmIxwfPRzxf8Dw0eC7dSJ6PeH7guewN5PmI
1xs8j/bgefjH90ERP77/jXjx/VDkAzyXfS55HvGB56HB89DgefgHz+W/kTyP
fIPnkS/wPPyB56HB85gPeC7dQZ7Lfyd5Pkp7J3kuPZ08l55NnktXk+ejzjd4
Lj2PPB91/OD5qNcDPB/1+oHnYQfPR50f8Dw0eC6t93lo8Fy6iTzXePr72Jgv
eC49izyXLiHPpWvJ89DgefgDz6M/eC49jTyXriTPpSeT5+EPPI/4wHPpieR5
5Ac8l7084XO/NXguPYk8l55CnktXkOfRHzzf7/mA52EHz/c7fvB8v/MBnod/
8Fy6mjzf7/mC59EePA8NnkuXkufSs8nz/c4XeL7f9xV4LnsdeR7xgufSZeS5
dCLPoz94Ll1Enmu8VvJc9hbyXPZm8jw0eC7dRJ5L6/cF+RPPZe8gzw94vuD5
AZ9P8Dw0eC5dS56rfyLPDzh+8PyA4wPPD3i+4HnYwXP17yTPpZvJc2n9niE9
lzyP/uC5dCN5HvMFz2VvIM+lq8lzte8kz2N+4Hn4A8/DH3h+wOsBnssunsf8
wfPQ4Hn4B8+lxfMDXl/wPOYPnocdPD/ofOLCl64hzw96f4Hn0m3k+UHnAzw/
6PUEzw96fuC5dBV5HuOD5zEeeC6dyHO1LyXPpaeT59IzyXPpyeS5dAl5Lj2L
PA9/+H1Xehp//4n48feP0lPJc+kK8ly6jjwPf+B5tAfPY37gufQM8ly6jDyP
+YLnocHzaA+ej/m+A8/HbAfPpYvI8zHHB56POV/g+ZjHA8/HzBfwPPyD59KV
5Ll0Is8jPvBcup08l24izzVeE3ku3UGeq/1c8jz8gedq30Cey95Knkt3kudj
Xg/wfMzrCZ7LXz15HvkBz6VryfPIL3ge/sFzaf09TOQfPNd4iTyXvSbh89D/
8fyQ8wueS5eQ52EHzw85PvA8NHgurb+vOeT1Bc8POT/gubT+/4z0FPI82oPn
hzxf8Fw6kecRD3ge/cHz0OC5dBl5Hv3Bc2m9zyMf4Ll0FXke8wXPpU8kzw95
fcBz2fX/JSM+8DzyCZ7HeOC5dCl5Lv/15HnMBzwf934Cz8cdL3guXUOehx08
H/f6gOfSDeT5uPMJnkuXk+fjXj/wPNqD5+OOFzwf9/zB83HnHzyP9uB5zA88
j/HAc+lq8jzGB8+jPXge/sDzmA94HvkCz6VLyHPpIvJ83DwEz2WfS55L632u
9vq+XXbxXLqNPJduTP8DXeEzkw==
          "]]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], PointSize[
         0.004583333333333334], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdm3mM3VUVxydojDHGXUTcN8StMFun7Uxn7pt5b2bevNkAQ4ghxBBA3BUV
FRVLCCHGGERQVGTfBBURC5RNSncKbWfpdDptp51pp52ly7jhhhrf7/ddTuL8
03w5dzn3nHvv59z3Hu+58ItnX3xSTU3N3MtqarJ//33/n0b6LkxtNdnfqpT+
deVnnvrqDedRd6ZvvenBrukrLoKuaUrfnD+t9pW//hx1S2o5MPCDm75wGXVd
eqL86pM+cu3l1MvTitVbLv/DbVdQr0xr3nnN0bPWXMnxC+kXG9790GWXXkX7
0rT3n5kDV1OvSG87Y/L9r7jqGuqG9ImLmqszXuvxf/6z7O971hPb/37OoXu+
T92Y3vryc1/zsYd/4PWctzxz6Dral6Xepu8VPnn4h9SFdOyszMPr7c/3Pzf7
0v1/+hF1ffrItSdXp7jB4z9/R+nRv/znRuqUPluN3ikv/4nj9arxu7608lU3
UbemB7Jwv+6nbt+Thevkn3m+hSy8b/+5/cu8G3rvzR7vQ+dft+7F039B3Zye
q0b31DNucftPX3/8222Nt7p9dbBqyG5zPD9+6J6bN7z7dve/u+rd+F23e31/
/c/Ob8yfdofXV8wDcIfHv/GULKB3er/kwz10p+erz//u8v64eu3WaoTu8nyj
1dWft/xux/t9ecLvtn9fuTRbwD3uv/7F06srvsfxeWM+4L3U7SkbbfWWe21/
+JbF+zZV7rM+KU/YfZ7/7HwD/tLj35mlb6d0W/pzlp7z7re9PQv/3vudvx9l
4b3gAe/f6SuyA/KA11+bB/xXtl/1445qBH9lf4ffmy34117ve6q7//rj0ivT
l7N0fOk3nv/ZLHx/kV6eXp9v4AepO1Pu3j+pV5VSPty3f0tdSWj3EHV3+uWm
SnXHU9f0pMHq6X3D1WH/xzlZRsN++6nZAfwd7eXUnS9Yuiv98b5swNA/rY62
dit1TTmlxguqV8LDtHekuZeyC+dht8928/nXUdf0pfw4DkmXUn69vOH3zl9+
/M6R7k359fDj33v9+XEbD/3d7Do7ZTV1T/pgniDqmq60I7subl5tf76eHafJ
1e7/ruy6eucj9mdzFr5PPuJ4fDFb7h2POL9vyS8g2YvpmWy49z9KeyV96pLs
T7qQqpdTdcc+6nhlu/Eb84/a3wvyC/Ux2gfSK/IN9ZjHy27nNz0o3ZnOzQd8
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
1gOeR/zB8xjvf2IGehw=
          "]]}}, {}, {}, {}, {}},
      AspectRatio->0.1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->500,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"nu=50\"", TraditionalForm],
      PlotRange->{{0, 0.9995}, {0, 73.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004583333333333334], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdmweUFGXWhj3CquiigoJEQRQUQQWXoCBeQEVQkeRPMiwoLKIoQUFF5F/B
sJiR5EpGopJzhoHJsXNPnu6q6pxILqDuf/766r515xzr1DmcYaarq7+69z7v
e+/Xd706feTka6+55ppog2uuUf/+se28a+ir/ekb/RHz9NFv8984/u6SsXT/
hXG9f+hQRh/evvPp4NxJ5J/9sjrpg1in7jdsn0bH+3fKuWmSix6rG/b1irdn
UcPLTaqfnlFGR4f89doun8+ha6zDQ3325885uXYuzRj7+2cHppfT4Ts/TYw4
PB+/99Kq7Pa7Z73+MVlvt9ZLVVfVDSykp6ubvJfd1kmtH6q557qPP6V/WIeL
xk/qa77j55T7/d+7Xs1x0Y//Vscimj38evP0UkXp5VH6pi9pxwHf+Dd3eKll
w9E3P7D3a7r4QN2FB+pcNPZRdUPf0tUvdl35Ylc5Pdd70YAJoe/oMeuopuQI
dYeL6dUWn01s8ZmTvpwW+X3b+e/pwZYLZu//oIy6fN7cfIsllDezjXn6qWj9
Uwcv/ncpDbrj5XedT/npTXP1WjRcjs9XSjf6f5rR78YV1HHI9/cM+d5DP6vl
vvUH6nlm1rC7u/rpGbVczf9NHzQO9Vzqd1BcLW+bH6nX9U137H7UQeruHB1W
knlx9Q7U+aVvz/x63yoatGjtCG2KhwrM1W310Gp6/aH1Jz75j4umLk7No55r
8P7FZF7MXLK1sj4v6JtWZrdfRze0m3cu6/oy2mjenf+ndbT8w1YTj2xx0qX/
et6PdVpPbY4sbn1kcRE9aS3Aevrvzua9J87309IWakE3kGPGyMuhPV6yLrd7
A62Y+/D8Yx43/c06fpL3W3i60FyhnyhdfeSdSGkJuc1PP/bRjdR1xLGmB7o4
6W7rgW/EujvpndfVB9hEy8dvWzZ+m5fO/nqf+Yk30ZOb7v7wug0uus264Gay
Lj/bQepq+/M308AmXwz/pIOH9q7ObMl9dgsZKpy/cdO11gPbQn02dmoxfXIZ
jbQCcKu8foN6fJ6tNIM/AF1Qj2fsNqxfFQ1Uy1+1jR45ERs6fa6bvlfL+8rP
lGw7qsGHeR4KzlUJ8rPEU3drwX/B61308bInzBX8BeviJmcH9YG3y+vvMqN/
cWo7/t5JM9XjmLFDnmeWWr6LO6iNFXAeamIF8E7yDGirTrJu7+pOWnBkzoSd
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
yQ==
          "]]}}, {}, {}, {}, {}},
      AspectRatio->0.1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->500,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 0.9995}, {0, 0.7692307692307693}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], ",", 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004583333333333334], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1: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
J/8/ufO0IQ==
          "]]}}, {}, {}, {}, {}},
      AspectRatio->0.1,
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->500,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 0.9995}, {0, 0.810126582278481}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.33599999999999997`], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.33599999999999997`], Thickness[Small]}], 
         RectangleBox[{0.16, 0}, {0.18, 5.},
          RoundingRadius->0], RectangleBox[{0.18, 0}, {0.2, 9.},
          RoundingRadius->0], RectangleBox[{0.2, 0}, {0.22, 20.},
          RoundingRadius->0], RectangleBox[{0.22, 0}, {0.24, 36.},
          RoundingRadius->0], RectangleBox[{0.24, 0}, {0.26, 47.},
          RoundingRadius->0], RectangleBox[{0.26, 0}, {0.28, 69.},
          RoundingRadius->0], RectangleBox[{0.28, 0}, {0.3, 63.},
          RoundingRadius->0], RectangleBox[{0.3, 0}, {0.32, 84.},
          RoundingRadius->0], RectangleBox[{0.32, 0}, {0.34, 58.},
          RoundingRadius->0], RectangleBox[{0.34, 0}, {0.36, 52.},
          RoundingRadius->0], RectangleBox[{0.36, 0}, {0.38, 31.},
          RoundingRadius->0], RectangleBox[{0.38, 0}, {0.4, 20.},
          RoundingRadius->0], RectangleBox[{0.4, 0}, {0.42, 9.},
          RoundingRadius->0], RectangleBox[{0.42, 0}, {0.44, 5.},
          RoundingRadius->0], RectangleBox[{0.44, 0}, {0.46, 6.},
          RoundingRadius->0], RectangleBox[{0.46, 0}, {0.48, 8.},
          RoundingRadius->0], RectangleBox[{0.48, 0}, {0.5, 20.},
          RoundingRadius->0], RectangleBox[{0.5, 0}, {0.52, 26.},
          RoundingRadius->0], RectangleBox[{0.52, 0}, {0.54, 34.},
          RoundingRadius->0], RectangleBox[{0.54, 0}, {0.56, 36.},
          RoundingRadius->0], RectangleBox[{0.56, 0}, {0.58, 55.},
          RoundingRadius->0], RectangleBox[{0.58, 0}, {0.6, 78.},
          RoundingRadius->0], RectangleBox[{0.6, 0}, {0.62, 53.},
          RoundingRadius->0], RectangleBox[{0.62, 0}, {0.64, 52.},
          RoundingRadius->0], RectangleBox[{0.64, 0}, {0.66, 51.},
          RoundingRadius->0], RectangleBox[{0.66, 0}, {0.68, 30.},
          RoundingRadius->0], RectangleBox[{0.68, 0}, {0.7000000000000001, 18.},
          RoundingRadius->0], RectangleBox[{0.7000000000000001, 0}, {0.72, 17.},
          RoundingRadius->0], RectangleBox[{0.72, 0}, {0.74, 6.},
          RoundingRadius->0], RectangleBox[{0.74, 0}, {0.76, 1.},
          RoundingRadius->0], RectangleBox[{0.76, 0}, {0.78, 1.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[
        Rational[1, 2], 0.5],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{-0.02, 0},
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[1]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->200,
      LabelStyle->{
       FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> Bold},
      PlotLabel->FormBox["\"nu=50000\"", TraditionalForm],
      PlotRange->{{0., 1.}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], ",", 
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.33599999999999997`], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.33599999999999997`], Thickness[Small]}], 
         RectangleBox[{0.06, 0}, {0.08, 1.},
          RoundingRadius->0], RectangleBox[{0.08, 0}, {0.1, 1.},
          RoundingRadius->0], RectangleBox[{0.1, 0}, {0.12, 4.},
          RoundingRadius->0], RectangleBox[{0.12, 0}, {0.14, 4.},
          RoundingRadius->0], RectangleBox[{0.14, 0}, {0.16, 9.},
          RoundingRadius->0], RectangleBox[{0.16, 0}, {0.18, 17.},
          RoundingRadius->0], RectangleBox[{0.18, 0}, {0.2, 23.},
          RoundingRadius->0], RectangleBox[{0.2, 0}, {0.22, 14.},
          RoundingRadius->0], RectangleBox[{0.22, 0}, {0.24, 38.},
          RoundingRadius->0], RectangleBox[{0.24, 0}, {0.26, 44.},
          RoundingRadius->0], RectangleBox[{0.26, 0}, {0.28, 48.},
          RoundingRadius->0], RectangleBox[{0.28, 0}, {0.3, 62.},
          RoundingRadius->0], RectangleBox[{0.3, 0}, {0.32, 54.},
          RoundingRadius->0], RectangleBox[{0.32, 0}, {0.34, 49.},
          RoundingRadius->0], RectangleBox[{0.34, 0}, {0.36, 46.},
          RoundingRadius->0], RectangleBox[{0.36, 0}, {0.38, 35.},
          RoundingRadius->0], RectangleBox[{0.38, 0}, {0.4, 26.},
          RoundingRadius->0], RectangleBox[{0.4, 0}, {0.42, 23.},
          RoundingRadius->0], RectangleBox[{0.42, 0}, {0.44, 23.},
          RoundingRadius->0], RectangleBox[{0.44, 0}, {0.46, 29.},
          RoundingRadius->0], RectangleBox[{0.46, 0}, {0.48, 23.},
          RoundingRadius->0], RectangleBox[{0.48, 0}, {0.5, 18.},
          RoundingRadius->0], RectangleBox[{0.5, 0}, {0.52, 22.},
          RoundingRadius->0], RectangleBox[{0.52, 0}, {0.54, 31.},
          RoundingRadius->0], RectangleBox[{0.54, 0}, {0.56, 20.},
          RoundingRadius->0], RectangleBox[{0.56, 0}, {0.58, 41.},
          RoundingRadius->0], RectangleBox[{0.58, 0}, {0.6, 46.},
          RoundingRadius->0], RectangleBox[{0.6, 0}, {0.62, 41.},
          RoundingRadius->0], RectangleBox[{0.62, 0}, {0.64, 53.},
          RoundingRadius->0], RectangleBox[{0.64, 0}, {0.66, 28.},
          RoundingRadius->0], RectangleBox[{0.66, 0}, {0.68, 38.},
          RoundingRadius->0], RectangleBox[{0.68, 0}, {0.7000000000000001, 26.},
          RoundingRadius->0], RectangleBox[{0.7000000000000001, 0}, {0.72, 18.},
          RoundingRadius->0], RectangleBox[{0.72, 0}, {0.74, 16.},
          RoundingRadius->0], RectangleBox[{0.74, 0}, {0.76, 14.},
          RoundingRadius->0], RectangleBox[{0.76, 0}, {0.78, 10.},
          RoundingRadius->0], RectangleBox[{0.78, 0}, {0.8, 4.},
          RoundingRadius->0], RectangleBox[{0.8, 0}, {0.8200000000000001, 1.},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[
        Rational[1, 2], 0.5],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{-0.02, 0},
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Directive[
        GrayLevel[0], 
        AbsoluteThickness[1]],
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->200,
      LabelStyle->{
       FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> Bold},
      PlotLabel->FormBox["\"nu=50\"", TraditionalForm],
      PlotRange->{{0., 1.}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
ZwWPYL213q7wyP+pOOCdIcoXBufnY90luV+WFM12b7/LgfbKiy6oYfyh6Mwg
PPMsHMavgvFx+pFZxTCxlHNJj2G9jLokdhwbUmzzdi0JiYbzXzsHvXNnvaLS
7rE682QiWAkaPTXmF6qowOBAPJIH38/9sLjMJyyKYW6qjCc7iQCfu1pkIH5M
oaBSL/Dzd1hf/WnbOjfo5Xmlkxcv0Q4BJqG7zKYOk7IbjHbE0xeGgOx2XK7/
4n8y//Wb/izQHgKfyspcMoOtL2b0Rh4ddxsCqeRMldJ0a1JelfPXOqOGgMRN
8JMhLlzy+XK3MEvpECCzvhbjr8Eiwe+8uE3TNwT2u2+q6k64iz3okN6tXR4C
RVVkn8lSB0Tk7BvImJmGwcUKwXRW6Z0LamYfgrokhkFfzePl9FQOofNS+yKK
BsPAPsw/8NOGhoC9jveMsfcweFQ3sR2fqsDvo8XUdSFxGJjn8C2EcaHnJp9L
nr9WNQzulcQPDqzI8WZKJT5GicMgrv+Rf63FJvfFMk7ukfVhsPqazpIuquM0
v8PXNyfYRsDWBZu3/EbGp5bIhh4elxkBHGt/yz/47pyk3dLuumkMPXrH5Ttn
BluIwP5RL78RUDCb84j/5ebxj9jkE/HUEVCStieGOtxg9k75TZNaNwKavy3k
CT1NYfRUTdu3nBgBP1ibC8QMG44oj14TnNoeAbwzi903Q8hpbxZdN6E+PQr2
FfRid1//PuRhm16ziBsFfOXiFZ2uzJSdHvqxYpajIMLho2r3vfNk/g2qN04F
j5K+v2D1WkDrM5JnrRujmJtJ5jifeaJ5huTzQwVDguRjB45pXk1RPEtyd7xt
JI0Kydeyjj4MciT5ErXqukE4yUxG2Skz+SSLTOEQ9g8kc10iP0H/g2QnNp3r
1jTjB6blJDSZCZEcQh2qwahNsqG4N+GGG8kBlXMjAjEk+518dDS7jOT+Blvt
ln6Sd9QdazNWSQ4WXM0cYZw4sKXWm4h6cZIZLxfmmemTfCphpD3Ti+R/9WLs
WQkkX8QxfCOrIrlrW6Calkiy2HP3mt51ktdCfr6VZ5s8MN3bP/KH5Ej+PS64
GGlKMpB7+rzen2TLQInwF09J7me7PLdcS/Kz1WLtz+P/5/fLxWYit0nGFf8K
mOb8dOC4PYXoJJTkWrlSPKU1yYovLU6dCiE5kUE6dfk5yUrv4yO535GsXSPy
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
           "]]},
         Annotation[#, "Charting`Private`Tag$63893#1"]& ], 
        TagBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
VAdIz6T1sQ9u2EL7RUSlHNXs+rmPTxtQvSOm702aB9X/KmW3Z8RQfYjENkFT
QnXLslTZlm6qZdMvlr/7TfVc4GyVEu8Qtb5ULSptVqR6YUD6+y1TqpHi/fRK
P6otrsiHZ92n+j2v/pfpCqpTZ/J0Rgb+5/OFsmO3lqkm5f3yHxX8vOHotaNR
cTjVFYpPu+gsqVZ+Zr5jRyDVsWwKidPpVB9ruHdr12uqdcplgpdGqZa8+6vg
Ds3whs89/jP4VpRql4ciWKMK1e//dPEK2lAdFV7/e0cI1cLrA3R9mVSzlcnz
HW2i+mQdW+bqF6qdy7bZ+DOObPjzuLF4hjTVEit1229oU91wvjS8zonqah7K
4pObVN/MUU49kUd1yeUutfvtVMun/bRT+0l1fc92ix6G0Q1vv2IePsRH9ZlY
ed06Saq127K3LStSbVtgGU/WptqRLr841+x/7ueb8L7emern53jDK/2pvvr7
07L1zVEkLveij/FnCO3c46OXzqaMIvJxg2P3jifSG7yVu344fxTNFjBp6LfZ
MlpwNN21rR5FL4a42pSiTjPHrqdaEO/g8xP6ovkN+9ie2zA3LA+NojYbu1XW
llccIeM8e7f8HEWZyw9/+LF5bcP6n+/7828UPWHYQfdSfIpb1D9pKpptDO0x
YBynGKjylSkJ5AUKjaGn3Bph2/hqtsu5yNHp7R9DZ3cJcU1yLu84UzNx1g2N
oSX5N2aB0UZCrjdkDV31x9C1mj9jquLewgVzVZt2nhtD1k/Oc6qe9RdNDvxS
tuvSGPr8YmRwcV+SuHtQDhSRMZSzx/BLqsyN3X8eMegp3BtDD1+4WmTPB0g9
dss15X80hr4imamwH+f2oKLh5f7iMVTp9vysgif7vjC2svSZ+jF0fNdTvwuJ
HTIVwzuHyV1jCA9rruDhPyfLY9H2KZQMz8ckaJGU1SO3a5Gn5+rvMZQ7SFtE
43nmABfjX+eTdGR0YmklZv+F0oPPFbw3+XOTkZT76vjJmzyHgtiPmBhKkNE9
VvOoxTbLw0rmUapMh8jIuZTIXoq8fiStKejANg0yWm3z2XtHIUtxOou1asmY
jHb7+dKYa2YpfXt4SP2QIxmpMD16erv/8VHO4w9vCfuSkZB1vkyQeLSymOPD
C9/CyeisdqeCqJ4JiX1cckQmgoyMJ061ZeaYkRatCg09wDVCzkU6gWdJHWeq
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
           "]]},
         Annotation[#, "Charting`Private`Tag$63893#2"]& ]}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, {{
         Automatic, {{0., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {50., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {100., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {150., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {200., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-50., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-40., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-30., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-20., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-10., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {10., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {20., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {30., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {40., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {60., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {70., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {80., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {90., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {110., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {120., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {130., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {140., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {160., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {170., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {180., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {190., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {210., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {220., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {230., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {240., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {250., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {0.2, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {0.4, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {0.6, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {0.8, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {1., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-0.2, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-0.15, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-0.1, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-0.05, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.05, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.1, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.15, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.25, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.3, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.35, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.45, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.5, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.55, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.65, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.7, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.75, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.85, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.95, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.05, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.1, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.15, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.2, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->200,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"nu=50000\"", TraditionalForm],
      PlotRange->{All, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], ",", 
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
uMe0Py4ZSJns+h/tx5f4
           "]]},
         Annotation[#, "Charting`Private`Tag$64147#1"]& ], 
        TagBox[
         {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1:eJwU13c8VX8YB3Ape4eblE1SZMs63+dGRMpeJVsliooiEpGRZM8GQpSREbLX
5dp7j8yUNKyQUf3O76/7er++53y/n/Oc57n3dQXsXA0vU1JQUKzRUFD8/9nf
Lag4oSCA7MWeFKqQUpltYx9tz8f+Q+fnPwW+WGoSHXrPzvcqlgWoWw9F7X6O
E4tUtyh8EMsHDOSrYlMfLx+/weDrdSNWEmhmPzmXd8tLXFpinXKIBXBet5gK
LaGSNJq5EGUTqwfq4uVYkP+glN7FB05WsdYgFL7goMv7WmZf2gFvSfebsD5D
NX25PlIuU7BVhOO2J5jrfblcPpYgf+/Sguc3IT94Z0Gz0dxjoPCz771mp/0j
MJUAA0nLHwq7e1/c47QIgdKzx3OEhOxPmk/rcFhlhUFenlWO9273yUb7/qk2
10jI69eWCekSU3wrx7KQdDUa/KLkuO5nuCvKj58Q/vo4FjIxZcmTw9WKTFMT
0d+C40Fekb4qyWBbUd9x+vG8dyKcNk9rl3wrraTc3Fxs/ewZFIWFmr8Kvap0
KwDb/zT2BQylZDy/9zZeSY8zIV25PBk2ciWEi4TISucI6ZNL11JBLFNS+fiR
VaWEnvp9hy+/giEVkf6d4APKpXf6TofcSYOBr722PYmg7K19jLfLLR1etCh+
WbexVeagdWczDs6AO3wB8jyTAcp2jxdaBuNew9PMgeqHNzOUTZUyDkpHZ8K4
QCTD31/1yrwDBo860rNg8A+tWMi9aeWwl5ohp9LfgDszW0nXmW3lfLEr+kUv
30Iq9+WPPRHsKpmpHjL2edlwhpp1mcP9hIq6Zk/ej+wc6OGvz59m11ApHuJW
L6vOhc+dIhvSnlYqY2KRLx6050HhqW8SL0nuKpk55yJ4m9/BkIBat0XSYxVN
rp3nf4fzgehXfo/JM1WFfOE3/yXnAtjzcTPmlOF7lcYQ2iGFhQI4bB7ylr+s
SUU8jy2x0LUQGqhmuBPcRlW+ONYcOfizEAK4yAWnfb+pMHA7NPB7FAF7mKk1
cfGvSoBd3jHOzSIoOW/8XuMwq6oJI+OdYPf3sP/xn2PxyvyqUTn2HUm77+FG
NvGIwh8pVf5Zq+VE72KIem9UxpZMVD3IbCSgSFUCHJuv6Ikf9VVvPL8kZxJW
AhRHu8uz42xUOeroOKzpS8FEp73qxTsXVZGxfAq6mFIoKmCdfHfVR/Xxk63y
lP0fwFsy+ahYYqjqmWRzk+KID3B1faCW926CqmtmwR/HA2WQek7pCZvTa9VF
jdzb9PFl8PO5bar14yLV7rHUXzp85fDUbcWCGFunujT4OjPHrhy0PQmRbatN
qiy92eYMmeWwKmAZJLrZoeouN+Rwt6kcbEXe1Bzx6FEdSdhza+ZTOdj51DvT
lfSpYjviPuf2VcDCuYhUb2xQNc3K/PEHoQqwetBKKj04omr7rz6xTaMCbm0u
PYxOHlflTz3+5uPVCmhhj6GfS51SnSbGfVh+XAHJTyV9M7hmVVNm/pL35laA
q0aDNir8pCrrGEXX114Be1dCbzu5flFt/il0LvVbBfhzS2g5BC2qWtwpDXdh
qISnqzEzExQ/VZd2tHpVj1cC889RQev1ZdXPltK/PFQrwbI0PtqMd1V1svbg
gffnK8E7RyG/+uKa6qAApfJPq0o473Zjpznnl2pHwOIlsZuVYL5/5Ebt/g1V
0nyfr8PDSnAsvO1NEbWpWnGmMi0luhLGH2hK7Ypuqb5lCFvgLKmEgNRLBSaZ
u6odBz80U5AroaLnnlh/8F/Vn6Kzmd+GKkHB+FZskzoFxqrAFDT0pRJUnwSm
ZhrtwWRPK16u/10Jqaunyx+6U2Kmhvanc+mq4Fv3gc4LWXsxT5twoQTuKjCt
+O5J/LEPq77/aea6ahUIWqerdpXSYG1/0i/Kn6uC4/djOvYJ0mFDD+z7/1hU
QXXNZPXeNHps2W+2Mdy7Co4IC3SsfWLC/uxJw8yeVEHi5q8vZtksGH2AbSnf
8yp4GO78q6SRFRMOnM4qqKgCgYEzMwKd+7E9gyzziITnyRtw0XZgxyaFQbCz
vQocqHLNd/+xY4mNL198naiCxtWU9lANTuwOR+eox3wVFGd8XshZ4sQMHXYJ
1D+rgH+AO2EumYAx7rOIEvxXBcnffH3Embiwr0ahXQU01SCmvSr5pIMLI6eX
MwBrNZQEO9x5HnUQ81PnCrIQwD0T7+8hcQhb9x/0ilWvhgbBvZE/CngxLcbu
R1E61SDesPnQPpoPexbXEh5uVA2+wix3qDB+DL2pTAuxr4aIW2KksycEsODO
V233A6rhZmtWcbGSEDZm+nzg3pNq2N0c6UpqEsLEp2Mn78ZUg9UtNc3zJsJY
z2rw6s30auB27JYM9BPBDnK5cF8mVUMzxX6mI3RHMb/NEErl9mo4dv2s8nrR
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
A4VjlMf0lVXsmYAZ/3d7ckX+B9XdTXM=
           "]]},
         Annotation[#, "Charting`Private`Tag$64147#2"]& ]}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->FrontEndValueCache[{{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, {{
         Automatic, {{0., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {2., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {4., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {6., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-2., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-1.5, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-1., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-0.5, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.5, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.5, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.5, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {3., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {3.5, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.5, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {5., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {5.5, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {6.5, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {7., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {7.5, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {8., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {0.2, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {0.4, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {0.6, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {0.8, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {1., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-0.2, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-0.15, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-0.1, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-0.05, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.05, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.1, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.15, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.25, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.3, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.35, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.45, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.5, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.55, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.65, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.7, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.75, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.85, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.9, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.95, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.05, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.1, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.15, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.2, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}}}],
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->200,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"nu=50\"", TraditionalForm],
      PlotRange->{All, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}], "}"}]}], "}"}]], "Output",
 CellContext->"Notebook$$507$316722`",
 CellLabel->"Out[28]=",
 CellID->263146789,ExpressionUUID->"4ed4208e-d2c5-452d-a3f3-09bca7eed681"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
LogLikelihood maximization (nu=50000,  almost pure shot-noise broadening )\
\>", "Subsubsection",
 CellID->113117640,ExpressionUUID->"6ff2e15e-2a5e-48a6-825f-240472aa6bd6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nu", "=", "50000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"params", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"kf", "\[Rule]", "40"}], ",", 
     RowBox[{"ku", "\[Rule]", "50"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K", "=", 
   RowBox[{"Km", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"kf", ",", "ku"}], "}"}], "/.", "params"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Frate", "=", "70000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bgA", "=", "0"}], ";", 
  RowBox[{"bgD", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]1", "=", "0.3"}], ";", 
  RowBox[{"\[Epsilon]2", "=", "0.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"binning", "=", "0.001"}], ";", 
  RowBox[{"Smax", "=", 
   RowBox[{"Round", "[", 
    RowBox[{"3", "*", "Frate", "*", "binning"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SimulateAndPlot", "[", "nu", "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"3", ";;", "4"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FFretHMMInitWithBinnedData", "[", 
  RowBox[{
   RowBox[{"{", "mcs", "}"}], ",", "binning"}], "]"}]}], "Input",
 CellLabel->"In[29]:=",
 CellID->730742617,ExpressionUUID->"10fa9368-9b63-4a5b-8126-fbf75bd39ef9"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
2ezBHZubm2dnZ43VpFxe1Wo7OzuyVdve5NWFe1OwvkawPqiH8UNA5E1srfEx
avO7Tr/zO7o3b+viM2B9kWB9oWB92TFJSuzv79/zEG1zqom/+dUODw+dalLi
V5Nt246O8jWC9UFVFJkDWF8kWF8oWF92jJ8SjcqnnJyc9Kl2eXlpqsn3bdVk
D40NKDLt48H6oCqKzAGsLxKsLxSsLztGTonb29v79+9r3q6vr5/cYZeYmk61
w8NDU7KxsWGqyfdaKK9KHakp9U1JYxuKTPt4sD6oiiJzoNq194cC6wsF68uI
SfLB9OCJkokBaqE9RKslZ2dnpsRUE6Nzqs2t+3NMP6HUN4WNN/gVmfbxYH1Q
FUXmAL4XCdYXCtaXHSOnhOmas/vrxNMcPZvNZlrtwYMHdrmjc7Yc2tVkKy2U
/fhtKDLt48H6oCqKzAGsL5L3fei3sL4gsL7sGDkl1tbWjI+Z+bnyrzNHo1EO
59awr96zZ/cc9tlcKTLt48H6oCqKzAGsL5Kf+NkXsL4gsL7sGDklTNecufvO
IIZmBnPbOuuc8rYuwbZyuw0rO8VcwfqgKorMAawvEqwvFKwvO6ayvkbM4i1Y
3/hgfVAVReYA1hcJ1hfKl//n92B9eTGh9W1sbJydndmzbgVdh3kE6zOs8nRz
AuuDGij71x/riwTrC+WlD3831pcXU1nf2tqaKbRn3eoNe8bunKWbjR861mcv
+SLIVlhfKFhfDPJG+V9VvQO5UPavP9YXCdYXCtaXHSOnhNE5x8ecTrw2bTNZ
rXN4G9dy8ffmUGTax4P1xeC/UbW9A9lRZA5gfZFgfaHY1vfV3/zPUzcHFjNy
SpiHrDm9c/bc3rk1OdfuEry+vjaOpwPB9oM57Ef0mr35j2+bF5r28WB9MWB9
2VFkDmB9kdjWJ99P3ZwMsK3v9vn3Tt0cWMzIKWEvyGyUzO6y0048W+dMNWOM
tgqatVzMg3ftQ9gqaCgy7ePB+mLA+rKjyBzg2RyRYH2hYH0ZMVU+mI447fGz
p3LYOmdGabWavZU9bmtu7dPN7b013tQ3LzTt48H6YsD6sqPIHMD3IsH6QsH6
smP8lLi8vDQddDZSKC8trOYMDd/e3vpL/+neGjv65oWmfTxYXwxYX3YUmQNY
XyRYXyhYX3ZMkhLiY3ZXnvbL2cqnSIlTbXNz06zkbJASM/jbsTdDkWkfD9YX
A9aXHUXmANYXCdYXCtaXHROmhD5+V/BFbolq87vH8gptXXyGItM+HqwvBqwv
O4rMAawvEqwvFKwvOypMiSLTPhR/cblGc8P6eoL1ZUeROVBhng/Lj/7U81hf
EFhfdlSYEmYgeOqGTElPncP6etJofY8ePXrWY+qWwp9TaghUmOfD8p5nPo71
BYH1ZUeFKVFq4AeB9Q1Lo/X5hVIydUvhzyk1BCrM82HB+kLB+rJjpSlxfX3d
5368kSky7UPB+oYF68uOInMA64sE6wsF68uOjpS4vLzUNZOXQKffbmxszGaz
hdMrRqbItA8F6xuWntYnbxSP602EInMA64sE6wsF68uOjpQ4PDzc3NxcW1tr
fJptB6J8slXH2inTUmTah4L1DUt/66v8jUqHInOAZ3NEgvWFgvVlRM980NXw
dnZ2+u9Z6p+cnMS1boUUmfahYH1LI+fl99dhfdlRZA7ge5FgfaFgfdnRMyXW
1tb6357X9ii0RCgy7UPB+pam58KGWF/iFJkDWF8kWF8oWF929EyJjY2N/vf4
JZ6lRaZ9KFjf0mB9ZVBkDmB9kWB9oXzx574D68uLnikxm82wvpLA+pYG6yuD
InMA64sE6wvFKB/WlwtYX51gfUuD9ZVBkTmA9UWC9YWC9WVHtdaXeCNXDda3
NFhfAZQaAlhfJFhfKFhfdmB9dYL1LQ3WVwClhgDWFwnWFwrWlx3VWt/UrZgY
rG9psL4yKDIHsL5IsL5QsL7swPrqBOtbGqyvDIrMAawvEqwvFNv6Xjl5x9TN
gcVgfXUygvU1LmU89XkPANZXBkXmAM/miATrCwXry4igfMD6CmMc6/NLpj7v
AcD6yqDIHMD3IsH6QsH6sgPrqxOsb2mwvjIYPwcuLi6urq4aX7q5uTk/P5cK
bdsurKBgfZFgfaFgfdmB9dUJ1rc0WF8ZjJwD4ntbW1tPnz51ykXnDg4OzMjL
9va22F1QBRusLxKsLxSsLzuwvjrB+pYG6yuDMXNAzO3x48cStr717e3tSfmT
J0/E5Y6Pj7fusLsEF1awwfoisa1Pvp+6ORmA9WUH1lcnWN/SYH1lMFoOiKGp
8vnWd3FxoUbnlIjp9azggPVFgvWFgvVlR3/rOzk56VPz+vp6Y2MjrlGrpdQF
WoPA+pYG6yuA0UJAe+fU03zrk/9K4enpqV2oitizggPWFwnWFwrWlx09U+Lw
8HBzc7NPTVG+/r2Cwu3t7dkdl5eXjRVEI7WC1OyzH6nffUSsb471RYD1FcBo
IbC7uyvWd3FxcX5+7lufvCqFNzc3dqGant68t7CCA9YXCdYXCtaXHf1TYn19
vU3M5nfStb+//+DBA/HDoAaIJWr8yrbOS3I4KbxnIebpu5+USLldTbbqaCrK
N8f6IsD6ymC0vj51tkbra+y1s/v3FlZwwPoiwfpCwfqyo39KqIPt7Ow0dqbp
q8LCrjabk5MTW9Xsl2Q/9+/fv+ch8unsREr8arJtW0uwvjnWFwHWVwYj50Cj
9TWumKpSpzUXVnDA+iLZev+vYH1BYH3ZEZQSs9lMFKujN0/cb21traf43d7e
2l7nWJ/dyycHld2a/0oz7CaZcqljG6DfeahgfXOsLwKsrwxCc2D/ju77TDoY
zfpslmtqzRjlw/p6gvXlwhLJsLm5aetWG0F3ADrDsuYl8UZTbiTTDOOK3Zma
xgbNQaW+2bbRP7G+OdYXAdZXBkE5YP66bPtbciGN1qcTPZyaKnVHR0d9Kjhg
epFgfaFgfdnRMyV0ALfnPm0ra8Me2/Xj1JibvStbBVXn/BLTAMcYbbC+OdYX
AdZXBkE5YP+JGnQTi6FjNodT05/N0VHBAeuLBOsL4s3Xvoz1ZUf/lVv29/d7
7nNhlpqxXXtM1ra+nZ2dxr+sTfDqMjK2OtrVzOiw7KexeVVZ37NNYH1Lg/WV
QVAOyJ+9JmqC1igwNFqfLufiLLlsFy6s4ID1RYL1BfHtr38J68uOSVZpNn84
i7YZQ7MFr03bjCLqWLMZdnGmeLRJo2lebda3tJBgfT5YXxmE5oC5w2S5W/sa
re/4+Ngfq93a2tre3u5ZwQHriwTrCwLry5HxrW9/f1/DUxdz7rY+505Cp7zt
Zpvum3CwPqyvP9Jm56vnyWJ9iROUA2J6Gj7D3td3c3OjT1i7uLjQEmcx54UV
HLC+SLC+IBzre/m5fzx1i2AxI1ufWY9F/tU/maeyvsah4SLB+mJY+o0KepP9
r6nPu1hCf/0PDw93dnb0VmFJrY6FQLtptD7h9PRUZ9Xt7u5ub287z1/rU8EG
64sE6wvCsb6XPvzdU7cIFjOy9RltM893w/pWDdYXwzjWV8AblQuhv/52QC2t
fPO75+eKth0fH/svXV1dHRwcyKuic8tVMGB9kWB9QWB9OTKm9ZmZuevr62dv
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
AAAAAAAAAAAAAAAAAIAG/h/b6/Ft
    "], {{0, 142.00729759723762`}, {425.021841400183, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{143.9926, 143.9926},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{425.021841400183, 142.00729759723762`},
  PlotRange->{{0, 425.021841400183}, {0, 142.00729759723762`}}]], "Output",
 CellContext->"Notebook$$507$316722`",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[37]=",
 CellID->56567803,ExpressionUUID->"1d4d5547-fc4e-4b3f-b868-7ee051ca4f23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ptraj1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Frate", ",", " ", "\[Epsilon]1", ",", " ", "nu"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"Frate", ",", " ", "\[Epsilon]2", ",", " ", "nu"}], "}"}]}], 
      "}"}], ",", " ", "bgA", ",", " ", "bgD"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FFretHMMSetPhotonRates", "[", 
   RowBox[{"{", "ptraj1", " ", "}"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"FFretHMMLogLikelihood", "[", 
    RowBox[{"Km", "[", 
     RowBox[{"Abs", "@", 
      RowBox[{"{", 
       RowBox[{"kf", ",", "ku"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"kf", ",", "30"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"ku", ",", "70"}], "}"}]}], "}"}], ",", 
   RowBox[{"PrecisionGoal", "\[Rule]", "4"}], ",", 
   RowBox[{"AccuracyGoal", "\[Rule]", "4"}]}], "]"}]}], "Input",
 CellLabel->"In[39]:=",
 CellID->146004112,ExpressionUUID->"4c9f76bd-d8dc-40c7-9962-21c46e8124b7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "65178.08538305135`"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"kf", "\[Rule]", "41.26809979309612`"}], ",", 
     RowBox[{"ku", "\[Rule]", "51.20842436572097`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellContext->"Notebook$$54$634418`",
 CellLabel->"Out[41]=",
 CellID->179209264,ExpressionUUID->"c1db948d-4cd4-4000-ad8e-4fd0ae59a989"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
LogLikelihood maximization (nu=50, shot-noise and intrinsic broadening)\
\>", "Subsubsection",
 CellID->32293092,ExpressionUUID->"c0422cf6-dda0-4392-a6bb-db66a6f2edea"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nu", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SimulateAndPlot", "[", "nu", "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"3", ";;", "4"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FFretHMMInitWithBinnedData", "[", 
  RowBox[{
   RowBox[{"{", "mcs", "}"}], ",", "binning"}], "]"}]}], "Input",
 CellLabel->"In[42]:=",
 CellID->11094770,ExpressionUUID->"1dba0d83-f714-43dc-b9b8-171e7496a47d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
PVt1xxJZdOUZWfkqKystKzkXHNfX3Nyc8zCub/PmzfaqDcz2pRFVJYP1wfoU
YGAeiJv1XRqdZF967o0uQ7ayLQGxyrSuoYliUN/1v/xSSwA+Mjv0SWTuxVi0
5Bl5ew4SM/uqepjD64WoKhmsD9anAAPzQNysL3XqCvtS7ftHdcdSOicGr/Nd
vNSgZ8mUm6kqNqXskde0BOAji9kLWKs5aNTnGcfpGxbss3pzTuv1yQv9Fbte
n9+3pYGoKhmsD9anAAPzQNysr7VrkH3pT/v6dcdSOpnJu3r7qUdbH2FNuvPj
fvW1+04EFh40HMV5hmytoPLlHtQ59705RJ9vsXtzBHJ7aomqksH6YH0KUJMH
MplMMplsbGysr6+nfzs6OlwKx836tu3uY1nqOp7WHUtZvLKzh28kdeqK4qrl
xrGwD+pjxFrNU2d36o4lmijOM7KSOcJdt+4l5RY8ubPYgvs+vBEQv6gqGawP
1hc0apIAKV9dXR3l2JqaGrI++pe+piN03LF83FZuERtb9F+c0B1LWfxpX7+u
RsuZwT0RGwg3deZtvqOJzmd0xxJNVGYYeQ+OgtZHhUXjnoxlfkcujx/SuY4N
fTlYn/FKBuuD9QWNmiTQ1NRECVZu3+Mj9K9j+fj4HjE6MRPqvdhkDp0Z4Rup
/uPXiquO0qA+5u5Ij1ireXVZ8+7GkURlnpEnXxS0vtya+DU0NMgdu4lEwvHK
dFzM4KioqKCz8ilfDj28xisZrA/WpwAFeYBb+SwH6Uh1dXW+8oHGYxSnzo/p
MiXfkXcTpq9VVh2xQX3EyuK06LNemAjxgE9jiVWeYWB9hisZrA/WpwAFeWB4
eLi/3/qxVV9fny/rxiobJw4OsSa9nTitOxYfeHlHim/n6MCoskqjN6iPubHv
V+trNQ/u0R1LBIlVnmFgfYYrGawP1qcALXkgk8lUV1fbGwCZWGXjHe2nWJP2
9VzUHYsPiK3ldh34TlmlUVqpT+ZWby3f182UdUAXKJ9Y5RkG1me4ksH6YH0K
0JIH2traKOXSv47fjVU2Fo1jp86P6Y7FB7pPXubbeWVnj7JKxfa7kRnUx9z5
cT/f17X2x3THEkFilWeYMM7m2Lt3L32a21+RVDJYH6wvaLQkgWQyWXAOr8p4
NHJrel4MhBu/Nac7HB8YGZsWd5SZvKuiSmn73TvDB1TUqIqlybTouaavdYcT
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
AAAAAAAAAAAAAADq+f8Bqwxgdg==
    "], {{0, 149.0076573379465}, {425.021841400183, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{143.9926, 143.9926},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{425.021841400183, 149.0076573379465},
  PlotRange->{{0, 425.021841400183}, {0, 149.0076573379465}}]], "Output",
 CellContext->"Notebook$$507$316722`",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[43]=",
 CellID->105291102,ExpressionUUID->"414f565b-2903-4adf-afdd-062db6fd0ffb"]
}, Open  ]],

Cell["Maximize log-likelihood assuming nu=50 (as simulated):", "TechNoteText",
 CellID->297835824,ExpressionUUID->"2edb7a81-8263-4559-b85b-7a9ac1b8a1fb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"nu", "=", "50"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ptraj1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Frate", ",", " ", "\[Epsilon]1", ",", " ", "nu"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"Frate", ",", " ", "\[Epsilon]2", ",", " ", "nu"}], "}"}]}], 
      "}"}], ",", " ", "bgA", ",", " ", "bgD"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FFretHMMSetPhotonRates", "[", 
   RowBox[{"{", "ptraj1", " ", "}"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"FFretHMMLogLikelihood", "[", 
    RowBox[{"Km", "[", 
     RowBox[{"Abs", "@", 
      RowBox[{"{", 
       RowBox[{"kf", ",", "ku"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"kf", ",", "30"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"ku", ",", "70"}], "}"}]}], "}"}], ",", 
   RowBox[{"PrecisionGoal", "\[Rule]", "4"}], ",", 
   RowBox[{"AccuracyGoal", "\[Rule]", "4"}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<PrincipalAxis\>\""}]}], "]"}]}], "Input",
 CellLabel->"In[45]:=",
 CellID->58482904,ExpressionUUID->"227ea491-af33-4ce4-becf-08064db55c61"],

Cell[BoxData["50"], "Output",
 CellContext->"Notebook$$54$634418`",
 CellLabel->"Out[45]=",
 CellID->115903712,ExpressionUUID->"fedd82c6-1eb8-450e-9720-e0f43d090899"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "69061.87394522045`"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"kf", "\[Rule]", "35.55214489960864`"}], ",", 
     RowBox[{"ku", "\[Rule]", "41.7219920596749`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellContext->"Notebook$$54$634418`",
 CellLabel->"Out[48]=",
 CellID->25072542,ExpressionUUID->"dc222603-501d-4c4f-9c31-4c8d7ad5e5a3"]
}, Open  ]],

Cell["\<\
Maximize log-likelihood assuming nu=50000 (almost pure shot-noise broadening):\
\>", "TechNoteText",
 CellID->122105796,ExpressionUUID->"e239fd31-dca3-4fa5-ae32-ef1d82084235"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nu", "=", "50000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ptraj1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Frate", ",", " ", "\[Epsilon]1", ",", " ", "nu"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"Frate", ",", " ", "\[Epsilon]2", ",", " ", "nu"}], "}"}]}], 
      "}"}], ",", " ", "bgA", ",", " ", "bgD"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FFretHMMSetPhotonRates", "[", 
   RowBox[{"{", "ptraj1", " ", "}"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"FFretHMMLogLikelihood", "[", 
    RowBox[{"Km", "[", 
     RowBox[{"Abs", "@", 
      RowBox[{"{", 
       RowBox[{"kf", ",", "ku"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"kf", ",", "30"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"ku", ",", "50"}], "}"}]}], "}"}], ",", 
   RowBox[{"PrecisionGoal", "\[Rule]", "4"}], ",", 
   RowBox[{"AccuracyGoal", "\[Rule]", "4"}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<PrincipalAxis\>\""}]}], "]"}]}], "Input",
 CellLabel->"In[49]:=",
 CellID->423968,ExpressionUUID->"198a9d95-cf49-4ad9-a4f0-1c6138edba88"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "71430.33862233716`"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"kf", "\[Rule]", "57.89274837183642`"}], ",", 
     RowBox[{"ku", "\[Rule]", "67.16139914501909`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellContext->"Notebook$$507$316722`",
 CellLabel->"Out[52]=",
 CellID->247727125,ExpressionUUID->"51b6411c-6d9c-49a8-8e28-b489e475470f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, "RelatedGuide.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Related", " ", "Guides"}], "TutorialMoreAboutSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[TextData[ButtonBox["Fretica",
         BaseStyle->"Link",
         ButtonData->"paclet:Fretica/guide/Fretica"]], "TutorialMoreAbout",
         ExpressionUUID->"fa0d06de-8d86-4975-8287-9b0ee46b937e"]}]}
     }]}
  }]], "TutorialMoreAboutSection",ExpressionUUID->"f785ab6a-6330-4ed6-968a-\
48261110d6cf"],

Cell[BoxData[""], "Input",ExpressionUUID->"b4ea172e-7fd1-4665-9cd1-899b91fe5dd6"]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell",ExpressionUUID->"c795176c-c68c-4c33-b5cc-977154c1fb79"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
Evaluator->"FreticaDocumentation",
WindowSize->{900., 604.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"Hidden Markov Model analysis of FRET photon traces",
Visible->False,
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, "ExampleSection" -> {"0" -> Open}}, 
  "NewStyles" -> True, "CitationPopupData" -> {"", ""}, "ShowCitation" -> 
  False, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2022, 7, 26, 15, 37, 26.0768835}", 
    "history" -> {"", "", "", ""}, "context" -> "Fretica`", "keywords" -> {}, 
    "specialkeywords" -> {}, "tutorialcollectionlinks" -> {}, "index" -> True,
     "label" -> "Fretica Tech Note", "language" -> "en", "paclet" -> 
    "Fretica", "status" -> "None", "summary" -> 
    "Remark: The HMM analysis for FRET photon traces is currently only \
implemented for binned photon traces. The probability P_i(S_A,S_D) that state \
i emits S_A acceptor photons and S_D donor photons in a bin is given by F_A, \
F_D : fluorescence photons in acceptor and donor channels. F = F_A+ F_D \
:total fluorescence photons (Poisson distributed) B_A, B_D : background \
photons in acceptor and donor channels (Poisson distributed). \\[Epsilon] : \
probability that a fluorescence photon is detected in the acceptor channel. \
\\[Rho]_i(\\[Epsilon]): distribution of \\[Epsilon] for state i. Ideally \
\\[Rho]_i(\\[Epsilon])is a delta function for each state i. However, fast \
fluctuations of the transfer efficieny on the timescale of the binning might \
lead to a broadening. We describe this \"intrinsic broadening\" \
phenomenological by an empirical peak function. For this we use the PDF of \
the beta distribution: Maximize log-likelihood assuming nu=50 (as simulated): \
Maximize log-likelihood assuming nu=50000 (almost pure shot-noise \
broadening):", "synonyms" -> {}, "tabletags" -> 
    DocumentationBuild`Make`Private`tabletaggingrules$284209, "title" -> 
    "Hidden Markov Model analysis of FRET photon traces", "titlemodifier" -> 
    "", "windowtitle" -> "Hidden Markov Model analysis of FRET photon traces",
     "type" -> "Tech Note", "uri" -> 
    "Fretica/tutorial/HiddenMarkovModelAnalysisOfFRETPhotonTraces"}},
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (January 30, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> Notebook], 
   Cell[
    StyleData["Output"], CellContext -> Notebook], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> "13.2 for Microsoft Windows (64-bit) (January 30, 2023)",
   StyleDefinitions -> "Default.nb"],
ExpressionUUID->"cbeee435-db64-4de7-8883-e24b5dcd12f3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "RasterizedOutput"->{
  Cell[443958, 8548, 20182, 336, 163, "Output",ExpressionUUID->"1d4d5547-fc4e-4b3f-b868-7ee051ca4f23",
   CellTags->"RasterizedOutput",
   CellID->56567803],
  Cell[466427, 8961, 29205, 484, 170, "Output",ExpressionUUID->"414f565b-2903-4adf-afdd-062db6fd0ffb",
   CellTags->"RasterizedOutput",
   CellID->105291102]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"RasterizedOutput", 503762, 9661}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[622, 21, 3541, 82, 56, "AnchorBarGrid",ExpressionUUID->"a5b8e5ff-8031-4586-97a4-848d58aa8e33",
 CellID->1],
Cell[CellGroupData[{
Cell[4188, 107, 150, 1, 120, "TechNoteTitle",ExpressionUUID->"4f625268-2f04-4d60-b4d6-a4097c7b2823",
 CellID->134205706],
Cell[4341, 110, 210, 5, 42, "Input",ExpressionUUID->"cc5a2123-519e-4ebb-9b61-15886f85987c",
 CellID->437123169],
Cell[CellGroupData[{
Cell[4576, 119, 111, 1, 36, "Subsubsection",ExpressionUUID->"0b1c29be-a292-4063-b332-3a6b6e088686",
 CellID->65771107],
Cell[4690, 122, 24981, 453, 553, "TechNoteText",ExpressionUUID->"233fdb07-7ec0-4ac1-9318-779770efd6bd",
 CellID->275348296],
Cell[CellGroupData[{
Cell[29696, 579, 301, 8, 70, "Input",ExpressionUUID->"0d22e9db-2977-43b3-9c75-a0432e432462",
 CellID->117604588],
Cell[30000, 589, 2254, 64, 65, "Output",ExpressionUUID->"aee0810e-9dc6-4735-8619-cc5a0f406521",
 CellID->184550730]
}, Open  ]],
Cell[CellGroupData[{
Cell[32291, 658, 848, 24, 70, "Input",ExpressionUUID->"788e743a-3988-4f17-ba4b-4737ffa107f4",
 CellID->497926310],
Cell[33142, 684, 2134, 42, 70, "Output",ExpressionUUID->"f78162e9-9165-4e0d-93b9-842ba6193abd",
 CellID->618955909]
}, Open  ]],
Cell[CellGroupData[{
Cell[35313, 731, 534, 14, 70, "Input",ExpressionUUID->"b1987f9a-7d73-48b9-8e25-2f625fe063f1",
 CellID->300105834],
Cell[35850, 747, 165, 3, 35, "Output",ExpressionUUID->"19f630cc-4ac6-4b47-a080-ed0613970857",
 CellID->448392583]
}, Open  ]],
Cell[CellGroupData[{
Cell[36052, 755, 569, 15, 70, "Input",ExpressionUUID->"95b0df2e-d0db-4e55-b799-7177c02412f2",
 CellID->61442167],
Cell[36624, 772, 169, 3, 35, "Output",ExpressionUUID->"1c4dfaad-49ae-40a2-896b-e4bf5ed07d91",
 CellID->100360402]
}, Open  ]],
Cell[CellGroupData[{
Cell[36830, 780, 652, 18, 70, "Input",ExpressionUUID->"a8e8a029-b0ae-46d1-84c1-983664522178",
 CellID->15594363],
Cell[37485, 800, 336, 10, 51, "Output",ExpressionUUID->"3e60010c-03ed-4d79-aed1-16204dfc22c5",
 CellID->263945891]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37870, 816, 264, 5, 70, "Subsubsection",ExpressionUUID->"0d2534ba-cbcc-44f9-8873-6912e5316cbc",
 CellID->96097228],
Cell[CellGroupData[{
Cell[38159, 825, 168, 3, 70, "Input",ExpressionUUID->"9a6dde0d-b03c-4275-ade2-6b2fe9b0d002",
 CellID->48917487],
Cell[38330, 830, 17888, 384, 70, "Output",ExpressionUUID->"cabb0e40-208a-4566-8fa6-00ba73c3c24f",
 CellID->813959565]
}, Open  ]],
Cell[CellGroupData[{
Cell[56255, 1219, 176, 3, 70, "Input",ExpressionUUID->"d347db6a-f8c2-4dd2-ae29-d9d8650dd43e",
 CellID->24955602],
Cell[56434, 1224, 248, 5, 35, "Output",ExpressionUUID->"14050392-72b7-4803-9044-934e86a34027",
 CellID->17347195]
}, Open  ]],
Cell[CellGroupData[{
Cell[56719, 1234, 164, 3, 70, "Input",ExpressionUUID->"4e598bc5-5da7-44d3-b509-1bc342f4964b",
 CellID->64629733],
Cell[56886, 1239, 27982, 559, 70, "Output",ExpressionUUID->"30a3ee35-37b8-4eb5-8cbf-b3e4b74bc07b",
 CellID->90101831]
}, Open  ]],
Cell[CellGroupData[{
Cell[84905, 1803, 160, 3, 70, "Input",ExpressionUUID->"ec94acf9-a33a-4244-b881-16a955768954",
 CellID->41426265],
Cell[85068, 1808, 22381, 481, 70, "Output",ExpressionUUID->"5d99b2c3-c819-4354-8ff7-bfdbf95c9945",
 CellID->16955868]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[107498, 2295, 173, 3, 70, "Subsubsection",ExpressionUUID->"59cc6421-ed9d-4ac0-b6c2-99722a6a6fbf",
 CellID->4346292],
Cell[CellGroupData[{
Cell[107696, 2302, 164, 3, 70, "Input",ExpressionUUID->"2abb257d-f889-449d-a8da-3fd0e82a0280",
 CellID->193186216],
Cell[107863, 2307, 36613, 710, 70, "Output",ExpressionUUID->"358b2319-b220-4fbe-936a-063e425fdc52",
 CellID->11071762]
}, Open  ]],
Cell[CellGroupData[{
Cell[144513, 3022, 157, 3, 70, "Input",ExpressionUUID->"417c831c-9ce1-4ddb-a650-0f286afd6479",
 CellID->29499591],
Cell[144673, 3027, 30405, 588, 70, "Output",ExpressionUUID->"852d7c62-4e9c-4178-b72b-c114b64f6aa0",
 CellID->146761354]
}, Open  ]],
Cell[CellGroupData[{
Cell[175115, 3620, 165, 3, 70, "Input",ExpressionUUID->"edcb508f-a954-4e68-b26d-cbd72b9ff7b5",
 CellID->75002877],
Cell[175283, 3625, 33033, 638, 70, "Output",ExpressionUUID->"98900a1e-b6f2-4dbd-a1a8-2a843b8e39c6",
 CellID->712009982]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[208365, 4269, 127, 1, 70, "Subsubsection",ExpressionUUID->"5837fd12-9d24-4460-8e54-e645a6649de5",
 CellID->163888271],
Cell[CellGroupData[{
Cell[208517, 4274, 170, 3, 70, "Input",ExpressionUUID->"5b06bfa7-9c59-4043-8aeb-c126c1561c82",
 CellID->621241466],
Cell[208690, 4279, 16309, 382, 70, "Output",ExpressionUUID->"c37ad107-14e3-4a71-80f9-c6b25973e454",
 CellID->209990037]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[225060, 4668, 130, 1, 70, "Chapter",ExpressionUUID->"6a7db7eb-3ddf-4795-9670-38b64e1d5cb6",
 CellID->149747849],
Cell[CellGroupData[{
Cell[225215, 4673, 110, 1, 70, "Subsubsection",ExpressionUUID->"38cac3e1-f96c-4f38-9356-fe2d1e7dc4cb",
 CellID->17230674],
Cell[225328, 4676, 4122, 101, 70, "Input",ExpressionUUID->"d8c31488-136c-4d0a-a9c1-4db9da5955f4",
 CellID->934339100]
}, Closed]],
Cell[CellGroupData[{
Cell[229487, 4782, 127, 1, 70, "Subsubsection",ExpressionUUID->"d5acc81c-2328-4e49-89f1-51a2c021b915",
 CellID->617999158],
Cell[229617, 4785, 409, 13, 70, "Input",ExpressionUUID->"c5904d0b-8f07-47af-aeba-857d193a433c",
 CellID->396681419],
Cell[CellGroupData[{
Cell[230051, 4802, 1350, 40, 70, "Input",ExpressionUUID->"234fd1e6-7395-4464-b972-643d17e759a8",
 CellID->163882861],
Cell[231404, 4844, 210894, 3649, 616, "Output",ExpressionUUID->"4ed4208e-d2c5-452d-a3f3-09bca7eed681",
 CellID->263146789]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[442347, 8499, 182, 3, 70, "Subsubsection",ExpressionUUID->"6ff2e15e-2a5e-48a6-825f-240472aa6bd6",
 CellID->113117640],
Cell[CellGroupData[{
Cell[442554, 8506, 1401, 40, 70, "Input",ExpressionUUID->"10fa9368-9b63-4a5b-8126-fbf75bd39ef9",
 CellID->730742617],
Cell[443958, 8548, 20182, 336, 163, "Output",ExpressionUUID->"1d4d5547-fc4e-4b3f-b868-7ee051ca4f23",
 CellTags->"RasterizedOutput",
 CellID->56567803]
}, Open  ]],
Cell[CellGroupData[{
Cell[464177, 8889, 1144, 33, 70, "Input",ExpressionUUID->"4c9f76bd-d8dc-40c7-9962-21c46e8124b7",
 CellID->146004112],
Cell[465324, 8924, 398, 11, 35, "Output",ExpressionUUID->"c1db948d-4cd4-4000-ad8e-4fd0ae59a989",
 CellID->179209264]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[465771, 8941, 178, 3, 70, "Subsubsection",ExpressionUUID->"c0422cf6-dda0-4392-a6bb-db66a6f2edea",
 CellID->32293092],
Cell[CellGroupData[{
Cell[465974, 8948, 450, 11, 70, "Input",ExpressionUUID->"1dba0d83-f714-43dc-b9b8-171e7496a47d",
 CellID->11094770],
Cell[466427, 8961, 29205, 484, 170, "Output",ExpressionUUID->"414f565b-2903-4adf-afdd-062db6fd0ffb",
 CellTags->"RasterizedOutput",
 CellID->105291102]
}, Open  ]],
Cell[495647, 9448, 153, 1, 70, "TechNoteText",ExpressionUUID->"2edb7a81-8263-4559-b85b-7a9ac1b8a1fb",
 CellID->297835824],
Cell[CellGroupData[{
Cell[495825, 9453, 1260, 35, 70, "Input",ExpressionUUID->"227ea491-af33-4ce4-becf-08064db55c61",
 CellID->58482904],
Cell[497088, 9490, 166, 3, 35, "Output",ExpressionUUID->"fedd82c6-1eb8-450e-9720-e0f43d090899",
 CellID->115903712],
Cell[497257, 9495, 396, 11, 35, "Output",ExpressionUUID->"dc222603-501d-4c4f-9c31-4c8d7ad5e5a3",
 CellID->25072542]
}, Open  ]],
Cell[497668, 9509, 185, 3, 70, "TechNoteText",ExpressionUUID->"e239fd31-dca3-4fa5-ae32-ef1d82084235",
 CellID->122105796],
Cell[CellGroupData[{
Cell[497878, 9516, 1279, 36, 70, "Input",ExpressionUUID->"198a9d95-cf49-4ad9-a4f0-1c6138edba88",
 CellID->423968],
Cell[499160, 9554, 399, 11, 35, "Output",ExpressionUUID->"51b6411c-6d9c-49a8-8e28-b489e475470f",
 CellID->247727125]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[499608, 9571, 654, 15, 70, "TutorialMoreAboutSection",ExpressionUUID->"f785ab6a-6330-4ed6-968a-48261110d6cf"],
Cell[500265, 9588, 81, 0, 70, "Input",ExpressionUUID->"b4ea172e-7fd1-4665-9cd1-899b91fe5dd6"]
}, Open  ]]
}, Open  ]],
Cell[500373, 9592, 78, 0, 70, "FooterCell",ExpressionUUID->"c795176c-c68c-4c33-b5cc-977154c1fb79"]
}
]
*)

