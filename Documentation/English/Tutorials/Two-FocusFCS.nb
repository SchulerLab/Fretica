(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    539318,      10399]
NotebookOptionsPosition[    529659,      10191]
NotebookOutlinePosition[    532996,      10270]
CellTagsIndexPosition[    532914,      10265]
WindowTitle->Two-Focus FCS
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell["FRETICA TECH NOTE", "PacletNameCell",
           TextAlignment->Center,ExpressionUUID->
           "431f2b86-4557-40f3-8900-8ce903ada85e"], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center,ExpressionUUID->
         "9a4ac75e-edef-40e2-ba32-cb6b850d9b88"],
        Background->RGBColor[
         0.3843137254901961, 0.4627450980392157, 0.7019607843137254],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[Cell[BoxData[
     TagBox[
      ActionMenuBox[
       FrameBox[Cell[TextData[{
         "URL",
         " ",
         Cell[BoxData[
          GraphicsBox[
           {GrayLevel[0.66667], Thickness[0.13], 
            LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
           AspectRatio->1,
           ImageSize->20,
           PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
          "70f5e35f-a913-45a0-8aef-fd3410e34b8b"]
        }],ExpressionUUID->"fb7fd27a-8476-4529-9905-06405fb509bc"],
        StripOnInput->False], {"\<\"Fretica/tutorial/Two-FocusFCS\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["Fretica/tutorial/Two-FocusFCS"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/Fretica/tutorial/Two-\
FocusFCS.html"], StandardForm]], "Input", TextClipboardType -> "PlainText"]}, 
            Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$289714], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"] <> 
            "Fretica/tutorial/Two-FocusFCS" <> ".html"], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"],
      MouseAppearanceTag["LinkHand"]]],
     LineSpacing->{1.4, 0},ExpressionUUID->
     "3e8715b0-a06d-4bc5-b5dc-aeb9dadd33a6"]], "AnchorBar",
     CacheGraphics->False,ExpressionUUID->
     "957cb726-f954-4f95-aee9-6b582083fc6d"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1,ExpressionUUID->"049743fb-a7ba-4e95-b945-6c1b36c59bb3"],

Cell[CellGroupData[{

Cell["Two-Focus FCS", "TechNoteTitle",
 CellID->295139048,ExpressionUUID->"1d00ea36-dc40-48b7-9aba-29d6bf885399"],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{
      Cell["Literature:"], "paclet:Fretica/tutorial/Two-FocusFCS#395868266", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["F2fFCSFit"], "paclet:Fretica/tutorial/Two-FocusFCS#500366741", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
      Cell["Fitting model"], "paclet:Fretica/tutorial/Two-FocusFCS#301969416", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], ""}
  }]], "TechNoteJumpBox",ExpressionUUID->"46ab00a1-c262-4ce0-99e9-\
bf3eca4e2288"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<Fretica`\>\"", "]"}]], "Input",
 CellLabel->"In[492]:=",
 CellID->876589,ExpressionUUID->"428a0fdf-a2e8-4762-ad66-99fd84142f10"],

Cell[CellGroupData[{

Cell["Literature:", "TechNoteSection",
 CellID->395868266,ExpressionUUID->"90b87b8d-3b8b-4aad-8aef-75cb35ed1ab6"],

Cell[TextData[{
 "Dertinger, Thomas, et al. \"Two\[Hyphen]focus fluorescence correlation \
spectroscopy: A new tool for accurate and absolute diffusion measurements.\" ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ChemPhysChem 8.3 (2007): 433-443."]], 
    "https://doi.org/10.1002/cphc.200600638"},
   "WebLink",
   BaseStyle->{"TechNoteText"}]],ExpressionUUID->
  "349c2076-b35c-43cd-9706-06dabbd91ac8"],
 "\nArbour, Tyler J., and J\[ODoubleDot]rg Enderlein. \"Application of \
dual-focus fluorescence correlation spectroscopy to microfluidic \
flow-velocity measurement.\" ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Lab on a Chip 10.10 (2010): 1286-1292."]], 
    "https://doi.org/10.1039/B924594D"},
   "WebLink",
   BaseStyle->{"TechNoteText"}]],ExpressionUUID->
  "dbedcbac-ca2d-407b-b6ae-96314df7acd1"]
}], "TechNoteText",
 CellID->217847135,ExpressionUUID->"d0cde6f0-bb70-439e-84f9-2edcb3107f1a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fitting model", "TechNoteSection",
 CellID->301969416,ExpressionUUID->"292475cc-b2b9-48d2-8ec6-b6c0b1b1606e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQV4FUn2tyEKUULQ4B4gJIHg7u4W3F2Cu7u7Q3B3SSAQCAFCCAlEgXiC
y8zs6P53dnaA+b5f34ZO3bbbceTc5312Geiurq46daROVXWpIRO6jjDKkSPH
lFz4n66DZzSZPHnwrG558B89PKaMHukxfFgbj6nDRw6fXHuIMf7SAtd2xqXc
n1/9/P8IgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIIs28JAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIL5LXhAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE8fXyL4IgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIL4fnlOEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEESW8+wngiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
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
dHNU0u/l9N8aQ/763Zis7B0ECAju+KfD5M1bsjFZ547CGS5briK7Rp395cxp
hJG4eddxNq6BVzBh6oK8efMp3YXRCq8JalB7yiM8/pcFyzaXKesoKFWVn4mJ
CcrfuPOY9j66G/Z84DAPOEtKdcYvV26L1u27ed8Ii3uZ6nwHFy88SMYj7Ozs
VR7Btyn80n6DRt8ydBxKBuY74BgXK17KYMOyP7Qwq2PhXcOYCq8Gk7p51wkt
j0ZwxPYp/H+ls7PgUcA5F66cNmd5sk5jwK7BuAufupP+IA8I+eGxaF/GduFa
SLtO7sIEvkrJqPCxczeF5W0QJLaSGn9tO/SI0N/phrbduOMY2zJ9Bo4yKM/w
uA6dvg7nGUGZATHThTxwI8dPmWfQiCMI7d5rkHAjdypX9E8YvJf9wtu078a5
2cr6oUy5ims2H9Di8Ki+1/tu7gMNvhH7gzNwzue+dBgGRb2ePHNJ4SLFtGgS
NCMCgb1HvQ1uST5x4TY8K/4uSMX2vWfwrKu3HzVq1oZN2Qs/977DUjunIYAB
smD5FvjMCMS0tAneAvrKNyDDEvQhT35o0KQV+y5wgBPffjh0ytetZj12nZ7o
Z5+vwLQ5Kx4xcxr489I1O+EzK5uYnKVKl9/qeUp98KK1EbMbMyvz+Vqx18Bz
7tC5F9vvxUqUPu0dqO4r4oJiXASXU3gF3p3AWKtRq4G4uoZ+cJvvhj7Xr/lH
tAmrvmA9tfTC7ZBkuNPCXSonaD148iPEWLiyZ58hGNGICMZOmmNjm0dayRIl
y8AiSMtB3Hfi4m3oUvhU6oKHfy1avNT0uSsjVA8sTRuJbz4cO+cPxcsuGFCp
CZy30R4zlVLe0BLsxzEN/lAgdFGak5XQhKs27kNnqesfhHXlHZ1g2mQXsEFi
Z85fLcyXVqjoBJ8EfxkY/mLwiAmIsFSaxdTMrGWbzj63Hmlt7bcfT3vdRUQs
hPkqLQMfEhVTSZaJgCaZOntZkWIlDLRGzpxQEfOXbpKdw8GLu1arJVyMKAMW
2eCjw+N+xrgrXqJMTkOGAC2GuP60910N20w+eh7xQmWErlF6nYKFi8xeuDYL
FjVBJ7PrgsqWr3gzKN7gXROnL2J3OTVpDotvOAuwaecxYeUAfvAZRNPXW/ac
ZBVO2449RIYV0mtkpOjIyf4sLa0uXQ8V1UQ23xGV+PviVduhM4XlHzJ9bWra
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
NRw+Yszlm16S1K/y5Xy95xk2YdKMTtq6errdho+eeMH5TkLaZ+H2ZuS8Nzzx
z1v3Axcv34jJhZpDaTRv1kzW/6g/hqNx4yaYepN/mmvreOt59Du8SLAcsvzY
lL+PWrsMHjy8S1ddqaQtfRqUpCQ/m+4TnDR30SrUH9Ok/4Chh46dx+vY/PGi
5VOWE8Uygpr+f1GJv8GvQ4E60CG6PVev1Q+Jfo/0JKnkY3YkZMjlJ9Mx0wPD
Ui1P2g8eNqardpeatWo3gFZtzJyM0QIdVasWUrp01oa52bbL/KF3JHxywXI4
5XsFv164dK2ubjdowsGDh5kdPpfdsYrrI5t0eVPdcKsuXvOcOnMhLAWiJ3Yr
VNly5RH36XTrbbz/JHPThDTzjQehcNtQMdipNZuMgxXvqlJqLL6ybQlL+NPM
0rpHr34dOnXt06vP0pVboNmU9Lks3f9l+tyFq3r36oOn+g0YihJQjvK+RR+6
3fIeOWZKF51uujrdho2a6HztkWB+KJO7T8PHTZrRo1sPlD981Hh7Jw+MNVk+
5uDYCTAfzBj16zdAf/u+0NhP2eWkK5CZ9P+LfvXXHnNrCD8sI1Pzvv2N9x2P
SPxDeEzTvjwNiFuycrNOV9369RtUqlSpXevWpUuXrlu3LiYj+v/UucuS1M9k
+WQ5jBnyjVqvb6Kr17NN6zYVKlbC5IUpqlipknanTjp6vYz3HvV9/optl4Pr
o5Ejx6BWet16bd2+Fw4Gv/4o/2XCnwcP2fTs3R850f9LVmwOinyrqL3K0+NS
//EMTNhrYTN27MSmzVs2adqsRTPGCsvqWb58hY7t29et16BNm/Z9+w5YuGy9
vbMHrBLcRU45Mg2gUurYysSny0x5tt6IfvXn9fshq9dt1e6i27BRU/RtuXLl
ateq1bRJE1SmdatWqFjrNh1mzJxrY38zJDIzQaaZ07nlyEwqkQ4pipz+8/xu
3XpCSEaPmXD2oru0t4Xzi9Fgcd9yog4wFja2rhMnz2zbvlPHDh3hMcrqjMil
VQumM5u3bDNl6szDVpcCwzOU1BlRpJnlaagqaPXWLVtCwFavM5S5Md6B8ZsM
9mh37daxQwdZnzRr2rRc+fLt27br0rUb7MLth8HRyf8Ktl1Rn8SkfPEJeXXw
8JnBw8dpd+7SsGGjatVroJPxXpSPoa9UuQqGoE3bDhDRlWu2nL14yyf4VVzq
vyrLh9ULDk+HOA0dPgZWtWq1Gq1atqxRvTpjrVq3rlmzdqtWbQYNHm5keuyx
T2RM8j+C5cDPMd57HM6DdCL0/HXlRjj8Ytr1Iu63Kze9l69irtjr1KEjDEGF
ChVk/Yl2tWzREgE4hqljpy4jx0zed/DEzYehL2I/8sYlu/yw2I92lx8sXLyy
fYdODRs1ade2LVoh63+4kW3b4Nd+0LAxGLinQa9iUz/nQZbyoLRlhlhmbmR2
OSGD0ZYv4n7fs+9ov4HDOnbuqgcHsmv3GbMWXLvtC9ESzC8rJzAyc73+7iGD
h6GrtbvodO/ea/b8FQ+8XirKz0l/5Bs9deYC+LfwavoPGn7Ozg2vU5Jflh4a
nWm48yDehjGCJNeHYq1fnzkgpW077S5623ZZRsZ/4tYz4u2CpWv79O6Levbt
P9j88FlEBErale0wp/x9+sL1wUNH6eh069yl28xZ8x/5xbL5ZdFE3gYiIOLd
kVNOg4aOqd+wMXM0sZSRlJ5qWwmR45ARE07b3ZSdRxGV/Pn4Wdc+/YdB//Tq
O8TihINKLgl9+CQwaaPhvs5dutesXZf9lrNkyVKVq1Rr3KTFT7MWXbz6hKU4
AyIyl67S7whz1ll31NhpKr9dlUg/jbS7/HDMhOmNm7bAZGcZ4fIVKtauU0+v
R78de46S3/icuXi778DhCMB1uvVBMK5oDepF/B/rt+5BkC7LuWbzLjEr/wzt
fvSCbve+terUk+5pZ2LkEiVKwBFq2rz1ouUb+buzUP8Dh8937zUAL4Koz1+y
TtGuA07HPgt/e9TmMhyPJk1bVq9RC+PFcr6lSpeGd123fiNtnR4bDEzdH4WJ
/CTBLywDLlNHbT1UpkfvgTv3Hhe5NwZC0m/gCNnKCSLEO0+jlGQOi//j3KU7
oydMR8yFnmHXtMuWK1enXoMefQbttTyLmsgo9cvufoOHj5eNwkaDvZEKDhgH
TM1t+g5gRhbCNmfhap/Q1LzNCA6evXyLbmSX8tDV9lce8bPFp2W7JdlTGFZV
qkUlr/884+A+fNSETh07ValSDfoBP3jFHdq1Q0A9dcY8z2cxZP4kqXuzz8Jm
4MAhmGjduvdctHQN2pKUIVy+YDqszLoNhtpd9Tp11kE5RqZHY1P+VZR/5OgJ
8EwQ+lWuXLlO3XqXrz9mqp3yz/W7/j/PWaano1enTl1Yn1YtWmCkEI+0bdtO
t3uf3XssEWrJ/D3l9fEMiMM0792zN/T5oKGjrc8xl7Yrr79Euobw6Fns7v0n
hw4d2bhJ81YtWzdp3IStJ+oDK4YQtUP7jn37D1q+xsDx8l2/F2kxKZ9V1ic2
7fPlW34zf54LnwYhFcw6iq1fr16zZs3qN2g0btwk19t+bH5OKOQf/hZtZ4UB
XoHTdRXspEYgi3EIA/FVlvI8MuPA4XN9+g+RBdRw2GrWqAHnqlOHDk2btRw5
ZtJZO7cQSZYsf1Tyvxg1ve59OmnrjBgxxtb5XnzaZ1k5bNzHKT8nHkz+G84/
HA+UD+ehQ9u2cIFs7G7I7BQ/P7+cG/dDxk2crqfXvUNnnVGjJzi7ebJxqJL3
RiX9rr/DrHfv/nCndbv13rhpR1j874ryx6Yza3H7D52DY9YcPlK16vD50RtV
qlSBkwMDMWXqz3bOd8MS/pDl32thPWjQUGiMocNG2V66DWEWrM+TwMSFC5cj
yEK/DRky4qi1S5yqfktI/eeC872RYyejvZ209SZNmeF2N0BleyOS/jI9cLxb
z/46OnB8ei5esSk4PFUwf+zrPw+dvNin32BdHT34AwsXr0Iso3IcJalfHvlE
bjQw7dOnf4sWrcj+gc9cs1YdzKYx46ces7kc8OK1cLvS/nn0LO7A4bPDh4+B
+W7Tpm3dOnUZeWjXDlOytnQBqk27TnPnL3O4fB9OLKc+ImOrIoiYIozo1K+R
yZ/VB8pR+pYvOTlTvuShblGin8prP3yBk3btXjD8IsRlazbtWr1xJzy3XftP
Hj931f1x2Muk/4mvA2qO/Pd9Y8863jG1sFm3xQSlAfAnD592drsfEhyTpZEW
xSb9L8M7LD3h/afrd98/fJaR9OF3O6e0Fwlvnr3MsnNOjctk0/9wcHkT/vpd
YOTvDldk+T98S88If/XWPzzrglNK7NuP1zzeP/AVyH/j3gf5cn5zuJwS9/bD
tduZ97xTE979Ye/8Lf/lb/n9vuV/9S4wik1//8AP+d+cOusO5+bQ8WdbDPZs
2XbfYNstY1OH07avj5x4FRid6R/xm6pypOkf+env7vtGh8YlWhy1229pu83I
b4vBoV17g8wOJbreTsuu56t3Qdn5s9zuZN71To3P/O3CpYyXOelM+Q++lc9L
T0/68OnCpZcPnj1zdH1hvGefwQ7U/4q+4T5Do/DdpndtnUOuuH+0dUyJy8xC
PysuR5aeEZaU0/9udz4w/Z+d/+2LhBTfKDGSkBD9/p3fyzcx6b+fd3wTnfbO
O/TT5Zupqb9/cLmR+dAvLTLlt7MObHp62p+fXG9/eBLIyZ+TLslOz/QKSTp1
ztnhir/JPid9A0uDHeFGu73c7ibf98lyuUHm/+3cxbSI1288gz84XUtL/UO+
nNR3Pt/Kv3r73WP/tKiUrDN2yI/yP8nKuYr8AW8kGTn55dNRfnpk8punwR8u
XUtN+S3L9Zby/Gx6lvP16MjkWKuzt03NDm83DtY3tNTfdtVkf8yRk6Ehkvcu
N94/FlWOLP3D5ZuhtpecT54NNdxhscXA0dDo+V6z2zcfpNm7vH/sL1jOu0fP
0qJSs87Yp6O93s8VlP+Cn54RmZz68FmU5bHz1hf8dpk66xtaGOx4brDd8YjV
E6uzGbaXUpPRD0rLiZVLx7h8uOye+cAP9fkEeYgi83vw82enPw5Ij0lH/dOg
KJ6GZDm5selvYt+kPw6RpHxWKZ/xkqx3jwPTEj/87uT27tnLjKjUP+yc0uPe
Zj7y/+hyPTn27SfHqxBgWXpGfOZ7z6DfXG9l51eYHpYclph+/LTrOcf75kce
6xvs3brDZ+u2Kyb7r1idTz1qlQiN9CTgN1d3Jr8zUU4cUQ6Rnh6XifxMfTBz
HV0zfV8oz4/0t8GSxPAMdXR4+Ku/73pHHz/rus3kMGMmNhnvOnDK7sqjwKj3
sEpkTpgM9azh13TfiPT4d++fBsv65Dena2+9n6eGv/6EySvJyEl3vv4eUXRU
2h8XpG2XT0+PTPl0/mJqTHrm4wBMaiJ/qjT/W8FyUiUZbx8zfQut+JuTG1G+
XP53vmFpEcmoT3b5V76V75udPz32beaTwG9jdDXTJ1SwHDZ/Tjq0vePVt14h
cu29QuSP/pbfKwTpKXHv3tg63rE8dnqPWfBWQ7Ot22/sORB7/HREkOST07X3
kA0yf857s9NR/qvbT16YWZ4yP+ZjsP3CFoNTJvuTzA/HhsS9Y2SJyB+V+hv6
Mzrt7RP05w1OORmxOeV/cnJj6h+B+jukxWTI6pmW+FEgvyzdRVl6elTqxzN2
z+75+EG97Ny9f5uxt8E2uy0Gx4xMonab3na8FnnZ/aOzW0r8O0XlZz4Jiov7
TaXUZT54lg6LcPnmO+/nb2ERbC9BX33wDMq64o506Od490dP3e7G7Nl/1MjE
xWD7oy2GJtt3Bu7e62tjH+YZmHXWISMmnc0vX440/TI3HfnfPQ744HQ95XXW
Rye3zKch2fljBPKnP3mucu6k+kYyzz799qzLjbeeQTH+4QkHLGwtjrkY7ni8
xcB467ZnO3f7WF8IvOedddYe3ZWTH+/ywrsysuvwNOiTND3S4ujeGTPWzZrl
PmfOymnTnLdu+/Qtf+bTYJQft98cw+FssP3J1m1HzA6Fmx9JueeTEZ3KKSe7
/Fhu+fz0LJebrxLfp55zeHjEyvHY6eewYlu3oXzv7cY2J85EWByVwLiHJ2GC
QKkpLf/mt/QQWTra++ahn+TYabuzDv7Gey7qbzu0zShsx66rNnahMI6XrqUl
/0bml5YTTJaTIUmHVUqLTM587I+xY9PfkPldbvLT3z8N+uh8PSYyOf7kmbsW
x07vNYOVtNi6He1ianL+EmqVet83PSbtN1g3gXLeyJWf8jt8m1i3e0/c7kTt
3nvI0AjlYHwt9pq9OGAR5Xo7OfyVtJw0ohx3ppy4N2JkKVeIj/0E/yQ96ePv
9i6ZoXFvQ2J/s3dJf/3po4dnlscTpP9m5/wmOCY9MCrr/KWUxA/v3R99vP1Y
SX5Z+ptgSZYt8r9/5/7wvfsDOOS/2X3LbyeQn0xH+anQpRjx4JiMwOhP0MlK
82d9q8/b57FJXs9j9h08ZGp2y3CHu77hsX3m0fsOxj32zwiKQUM4+Zl6BsVk
nXeU1vPRh1uP5MsXyJ+d/irr3a1H728+gO5C9TKfx7L5Mz1D4uJ/z/uIpH59
kfCnq0eA+QmHzdsPwF6v0zc5cMQWkWNYwl9kFExGrxw7rgR4CobR1uX+vkPn
1mwyRvn6RgcRk97xigpP+psTZbP+ABCjNACX8zeS/r79JOLQKScDYwtZWLrX
8qyD62P/iEyOXyE+ACcD/FyFyYFRH+xdH+/ab7V2MxNxb9lhduzMFY+nkUyL
FDyStzUBWUh+z0dibe9uanFG1reA4e5DCMmv3PYPkXzKrVtF9n8elzWYZqoe
OAzZrccvj9lc2brTAv7h2i27dx845XTDB3XmiYTI8foaldONqr138Zi/dB17
wl7p0mU2bDXl50n2l7wJjc+MePUHYuH4d1l3n350f8hMYQeXt0ExGWEJiZZH
LxyzdjfcfmuLwf7tu8KM94S63UsJjkEGWf4sIv9bWCvEzpI3728/fn/9Hpue
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
A4aMDvlvEM2Rr/9dp29COnW63fsERtGDiSgoKCgoKCgoKCgoKCj+K6B8BwUF
BQXFjwRXj4CGxFp33wHDg7+vj6AVg/IdYhCZ/O+mbfuJw6xK7T98vmAOsyp0
PAt/q9eznxbx27LDTNFtRBQUFBQUFBQUFBQUFBQUPx4o30FBQUFB8SMh4tU/
k6fPK148267Vql2v4M4yymdQvkMM/F6+6dV3CNtRHbX17nrHFHqtCgYnz7tV
qJBzf03tOvWcb/oWeq0oKCgoKCgoKCgoKCgoKAoMlO+goKCgoPjBcMHlQcVK
lWVGrVSpUr+uMYh8/SMcaUX5DjGwcbhVtlz57I87SpVauX5HxH/jMoKI1/9M
+mlusWLFWSEZPHycf0RmoVeMgoKCgoKCgoKCgoKCgqLAQPkOCgoKCoofDM/C
M4eNmsheV922vfaPscOf8h0qEf7q7wlTZxcrlj30DRs3c7sncGH9D4mbj8Ka
t2zLSkiZMmW37jSPTv1PHORFQSFDNAUFBQUFBQUFBQUFRerXTTy+o/BrRUFB
QUFBkVdEpX49ZnOlatXqMrtWokRJk4PWkcmfC71iaoLPdxR6lYoaXNz9GjZu
JuuiYsWKLVq+KfzV34VeqwJAVMqXHabHSpcpy0pIrdp1bz4KK/SKUVBQUFBQ
UFBQUFBQUFAUJKIo30FBQUFB8cMhKCZr9PjppcuUka17j5/yy4vEvwq9Vmqi
G+U7lCIi+fMO02OlSpWWDXrrdp2ueAQUeq0KBoFRH4aMGK9F/EZPmB4a/0eh
V4yCokCRSkFBQUFBQUFBQUHxX0dUyldLq0sNGzcrVap0yZIl8Y+Dxx0KvVYU
FBQUFBRqwsMzymDXoVUbdq7dYmLr8iAq5UuhV0lNzFuyrnqNWjDWpcuU7aLb
8/qD0EKvUpECXJrbnpGbt5th0NdvNXW85hWe9E+h16pg4B/5fuykn8uVrwDx
qFChkk63PrbOkPmvhV4xCgoKCgoKCgoKCgoKCooCxvO4P+54xbjdf+527/ld
b0lo/J+FXiUKCgoKCgoKDp6FZ956EgFjff1+6CP/xMjk757BodAUopK/eD9P
u/HgBcTj5sMwz+DkiNefC71WFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU
FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU
FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU
FBQUFBQUFBQUIhFFQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFB
QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFB
QUFBQUFBQUFBQUFBQUFBQUFBQfFfRgoFBQUFBQUFBQUFBQUFBQUFBQUFBQUF
BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXF/7N3F2BRZe8f
wBlmaKS7BAUlDBBExe7ubuzubrG7u1EEE1QEpASku0Ek1d111113f+rawP//
wuzOjjPEqMAd4Hufz7MPO869c26d87733HsuAAAAAAAAAAAAAAAAAAAAAAAA
AED9lQkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8APis9/eC0z1
8EsUFhz3U6WzZ/xUFBz33MM/qcwlcEVn/MX4agIAAAAAAAAAAJTtJwAAqAsC
ogpWrN87ZuLsFjb20tLSnH8nKWnpQcMnJOV+qHj21ILPZ68+WLB8y5ARk7S0
dWk+7uxycvI2dg5TZy9fsnrHvYdpjK8mAAAAAECd9yjhlw3bjy1auXXBcqf5
yzbzO3L2NoXuFc+e/qzwyu2QJWt2LFyxVWD2BSu2LFq5bdGqbTe8YtKfFzG+
pgAAAAAAAGXKeF6c8OTvB2HZC5Y5qalrSfw7GRiZXLsXKeISYjL+ctp9WkGx
Ac0oL684Y95q/4i8lPxKUioAAAAAAKgqiTnv7/gnHz3nMXnGEj2DhpKSkrzY
vqVNm6DY5xXPTlF9aOKvt7zj9hxxadexB4fD4c6roakzZuLssy4Pbj9IiEj5
nfHVBAAAqHIZAABQ5yTmfpi/zElKWpqb18jIyi1duys5/5OIs3v4JRsYNWKz
OYNHTIpMe8X46gAAAAAA1EPpz4uT8z+7uIfa2DnwujwaKCnvOepC/yTiEm56
x+kZNKQZ1TW0dh68lJjzQcR5AQAAAAAAxMSDsJzm1vb/3gXGohQpMPqpiPPe
fpBAOZGGpvbxi3eRDQEAAAAAMIgC8lOXvXV0DbiRPZvNHjZ6aszj1yLO7heR
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
TZ2V1CjwP+/cyNSSUgym1jQq69OgkVOpBqr0eZbW7brRAfCty6fgecm6/bwr
D0vW7hPl4KQYz7BhY4ECUK07a/Fmcb4yXx1c7sbp6jcU3BT/9ByJFCFQs0IH
M2UcwskRR0pq/LQlVf7MXZU74xaspa0vUHg9A+Or9+IZLFWd7+8oCX48os3M
W4iYViurqG3Yea5ujOHpF/PCvv3X731ms0dNmhee/o42yzXv5E7dB4r48ItE
6ZgwW/ZfrhtbRrSt92ufQeOoxqZ1NzBqtOf4zYq7e0JSXs9YuFF4nGTawsPG
zgyp7EoatTIUfghXEf/sOA5n7fZTld5+vOfELQXFBtxZuJ135XWnUo1aEuTb
tKN1nDxr1ehJ81vaOpR5Rz2vv4Oazm59hvEeYylNEv+bKh4/k86+gcMnV3o5
MTT1DeUpwrPPXrKlDqfeZaKDbcCwSQIhjWWL1hWMuUonteej/JatHL6u61iU
9/XsN3LHYbeHCX/QZqRdL56J+U3fdNs2XX5w6H6BicLCOUu3Cj/ZJDo6gzr3
GCSwWDpTFqzcFZ1VF47JODEWm1t0/mZY+y79+Nspqgw79Rh01TMhOruwvBl9
o18MGT1d9AcHpEveUrQn+skXxleZcQHxv9u26Sx4wHM4U+asiXj8sWp2a07R
hVvhli3sfuTUFp6o3qMD42HCqx8sHuUa6hraAgtv0EBly37nmJxyDzkoz7Vy
+jsuuUcxXjYu4f6O2NxixktVtaKefN6811nEi410KhmZNDntFsx4satD5OOP
B87epYiXOxQtxcwDhk+mozSGQqOyvk+fH7noo61r2LhJs8t3YsZNWSxwV4lx
Y/PrPimMrxdQpLfjyLUmFi35w0h5ecVJM1c+iPqlvJOaPnfzTra2ay9657uK
qsZptyDG17eqOHtEU4IvsI6UzB44czeuimrCqKzPG3adE77g/4OTtEzJNdWq
ikyqD1W/c5dt415P4J80tfUp3qimH31QYX/HzqPXGd8sVSgs/d2E6cuERxcX
nkzNW9wPLRB9yRQS83oDS483J6pnmFpNOpBoNU1MLbhjqtN/S4bmKGutdfWN
Xe8nfuvyL96OpIXzFjJl7tro7MrTIv/Y3+zadhWqP1m9B44JTvqL8WOjJq10
OiZ8musbNaKMVZTZqSo7dM6zzEvWtJf7DBrnFf6c8XWsFK2svmEjgfJTg7Ji
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
4IOoX+jYEPhpyuYGjZjSzLoNRREduw9w9ogub0wP+kXfmF/HTlksPKjXv6vA
njBjeXg52SVllFPmruEIPR1TMtB3yc0YtSCmrSpRWZ9nL9ki0O1V0mVW4aHo
GZpf2sSUHAOq6loTZyynHcr4ulQqOOU1HRXcVyVSvmNt12Husm0Hz3k6l7ww
9J+k5tyN0A5d+/Ou0lAitu+UR6WpEG2uUJF7KssTk124bscZgRepSJTe8b5p
z0Uxf2qm9rrpl25j31GgLpKTV6S4MVK0dINatANn7grcsUm1aEu79o5zSjr3
eaYv2OC0/3LkY7HLYmpeeOaHCdOWCj+iqKmtd8o16MeXH5LyetLMFZSXKSmr
jp40/6pnAv0iNSj8rRX9vf/MXRVVDe5PU4uwaM3emrym8SjtbeeeQ4TbLz1D
k+sPUqvwh6h+bu3Qrcy2siYn2t1L1h2ovu2J/g5xUnzLP9O2TWeROoJLUnV5
ZofvqEL3HuV16zOMF0VQDbNh17nywlEBJbcDXfYr8+Hrah2RBkTcO/vP3NHR
Exy9n3bNSZdAEc/liMcfp8xdK3CxlILwnv1HTZu3nj9gmLlo02m3oDoztmFA
3EuKuoUPbEoGvSOq4CYQz9ACh859KPszbGi6aPUez0f5lOCU3oX1336hGnjG
ok28c1NDU+f/2bsKsCjWNUyndAiCkkqKAgYq2Ilit6KIjY2IKDbY3VgoadLd
XWJ34Il7OjzpafXcd3Z0zzKzu+wuuzu74P98z328nNmZP77/64hKKGZ8Z8QF
ZBgJXYnQ0NTaezJZcrwGGhA7p4Z+NYTKcZAXiE+/adGBWkiHMhSVlIb6TW0y
54t9dpA/SZHYxt75UraM1i1MLWkgw5g5VzpizIyqxwIxuBuse0qvSeXlPaRE
8IJUL96mFD+Dqk7makGpXxq6s7bVVAkGqhw5n01JclEg/Gs6QKH0so+Kb7+s
ffY3mVKNfxTd+h6y8fbDF+cErevi2VtVTY2y+fi/GhqaQ0ZNOXulQr62sebp
36MnBSrRysUYGrc9d7WSKem69fg7brCus3d/X/oRcB0Qe6YFrCi7x6+CkCxD
XNoNyw6N+geBYk+etQSaDkQ4N4/eu45dqXz4iivi4Y9RiSX2Dp3p24Iribsp
+9UyRYaKB69GjZ/NDucm3NOPhHBPQwbetDtaS5tLWrSzW7eUkqY9m2TmL72Y
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
3XKA7OLoP2AwK6xfE/XbnEd/2G3cA0J2+pxlURmP2X/FE+CF8MVBzSFwoVb1
DEzj877uoi5BF1DMK0E5cs2X2QkwLxGzZK4j0Z0xBGk7xfVv3D18Zdj214FG
bTLeMjb7C9rz9llRXPfa1t6FeR8Rg7HAdkNe5d8tEmQ9eD599rJBgxV9Q/M5
vqH08buN24+9v75h0JD367GcyLj/DJqYNLcuTM65X7P/Fv53wpRZoDyvdzmS
+eA57TXTGUDYrVq3iwqAD4XyvBTBtAfb/yqo3uK6Nykl33tcCFtgu54ScOyP
3AD5y37pPMw/aCmb3U6Q/Rj9Bw6+FlbALWXmg1/HTpxB4t7o6BvH5nzJ/tuE
/G8mTp0j22/AOufDzLjEvK5n6L2bth+ntH1QzKCKch79SXsH4GlbNB08HUCW
ZI3NLKAn0J4luiAbZgRY24OPngtheg8/TBCeVquqpj1m3NSUYp7VUkR6PTmz
DEqXd0Am7ZXQPUSmN6hp6Amwjo95+ffaUsOc7LT734PhMMrAmm7dr1oQEP+A
OLLJ4u3iFZvzq1rKzfaSW/nXPJt1ZMpds3k/GIm0Vw5vyav8y8zcmrJ2VdV1
4j4UFhxbx2XvuX9bR0zihFfUJ1unLQTGl7MHBNYdZRqd+YT2Kup9lDY0elwI
Zb+1mQTTDk2pusvrFQCk7bgd8iILNbJ9+1+8lcZxNaakoXHXYR/iqJKUlD5w
0g90Ueq3RbWvtu270E9u4LhJVv6x93kyKhGO5Fdx93c0NHZ/fkofN+4+coW6
ggpkluWspVnl/G2y9UzA6BNnaf6iomIHT8EAbDxzNd7AaMKxi+HFzRqCs/tZ
6uico9Oh4vo3wPb9F5m3Ll5PJooESFL4CfF3CAkJL7VzhvFLe+k6AKhJM+Ys
o4JZSUhKHzodwLztiO6M9RrIQvrg5hCvIK9HjZkY+ylVrS0U172JTK+337RX
lu08tQAr3pSF9ZKC6o74U7iRfu8XQ5NJ5P0Tp85hBtnmdUUlFX5HheJX19SP
YVu6zH74+3rXo8rDNTe7eXbFpwkgF+w27qG2A0nLyDJlNB0SoeuAXgHmlWDz
eB84SOGkdwwqGwgfAd0VdGxyByv1wORwJSiH525Q5OMUVL+YZm1DViGYq6mt
1glBSG1w9RhpaJZcyNmpmlX+29gJ00kjmo63TC39gdu3fEPzyeFc+NyshXY5
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
JVVN9sHV4hERFdPSG+PofBgkkX98edidOs42HR2Amn3JP2OixVwFRdXVG/dk
lv9Ge5b4At+wwgHNN25Mn7Oc7Mr+SBpdA1OOJhWMxF1Hr5Ljz0JCQktWOUHf
KGpojM75MruCwzt7Askl3y9z2D58hC7Yy6d9E8hO78+UJz2FksdNhXVvUkt/
unAzbdOOE9CRpsxYpKVnNERRRaZPP0EGg0JUVGyAvIKKmvaYcRazFzus2bz/
wKmAsLS6vKp/iusbuzqfIJ4cthwgKw/yQ5Rux9xv+98GJVZOm7VUWkYWMLdc
cD2imGOynIq/5ttuIBOy3IDBMEVD5bBX1JHzoSQeOIPBmL90ffajv8ivbkaV
jZ8y+3p4MXv6biO38sVJn9h5NutuRJZ2/9c/QsaD58vWbF9q7wpmfkHNK9rz
gyAdIKXkRwvrJQy2C49gJrTftI+50kh33jpeopk27CWCGTUg4RHtGesA0Vlf
qKppj51klVr2M8cEsblfj9AeRSZtu017ixvetUgAP9m4/Tipjf4Dh1xjntnh
/K34/G+pI/CgmDFXLdh+CzYXSE9yMZaYmMSBU/5EHIB1uef4DcvZtklF/6W9
ujoPFAdKCna0x8Vwhy0H59uuN5s8c/gIvUFDhklISLErDJJS0mCTamgbjp88
a+HyTRu2HTvpE5dQ8B3IgtatwPNMbnY7Qa5ukWOGBsrnlhLyA9oOaVNtfeOY
7C/ZfwuqEcgv0jdERcX3ed5irhWwlIG9nrdAqUgs/D86mqAJhvDOw1egvyUW
9oZO9ZkAepqEpNQ65yNFXBTmU1fjyfqMbL8BZ68l0Z5hhB8BW2m9y1GyNUtT
ZzQrfiyHZOn3f51kMY9MfQuWbaTMGaTtwPxvMt6S1CGIQrCFOSa7FX2XxA2Q
kpY9eDqAuU+mbe/PqfgbzF6QnmC0cns5whMy7j+fvWgNtedTgLXnfKmdS2b5
77TnrcMlmrPYgZwqIk+//oNAF6JlmYK37Dj4/laOPrJyTEctpxKBmurodJhM
g6CLMk+6samd8CeX/DJIgGJBQYb5tPl37j4jvwpPb5g4de7pqwlE2UM6RtbD
P6zmrRITlxATExcVE4eGYNoFgh8DHkgG9jWkl+s/6NLt9B7VV+/cewYmwALb
DdEfmgkIN5zdz5Ggc/BfGIAcre/1rkeFRd7fsLNl5ynmofVW78mp+IsZfLt5
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
CIIg7Sc86ystPWNiSoD5oz3SxDfyLje/A12gvwNBEARBEARBWpNT0+i877KY
hCToyX37Ddxx2Ndqvt2uY7fYXQnw7y3u58XEJd77RNbv8bySYDZlzo2YcvZX
5dW+W7VxH4mLBY/VAvuMR//QVS70dyAIgiAIgiAI0gHA/HHac5GYP+TRHz0h
MLmO9oyxg/4OBEEQBEEQBGkN6MnmMxYTPVlZTXvxape1zh7pD//mlqaPrJzb
kWvm0xe5e/q10Kjji38aOWaigAAz5pWoqNiBMyF5te/oKhf6OxAEQRAEQRAE
6RhgPky1XirIur5QgHWDocUsW44BrOiipb9jG/o7EARBEARBEOR/IXeeqI7Q
e+8X0De2nL3CL6GqRRr4yRBFVZJGQ2e0rYPbwpVOoGC3SOYbcVdBcThJpqKu
G5BUQ2O50N+BIAiC9BTqEARBEP7jetT9EdqG1BEPCQkpB6ej6Q9f0J4xQsrd
Vv6Oqje05wpBEARBEARB6OXI+UhJKRmiJw8aMmz7oaut9eTD5yMlpKRJGqNx
08ZPnXsr9lGLNDnVb133e0tIMpMJMhgzF65Ju/8njeU6eulDf0fhj7RXNYIg
CIIgCIIg/EJOdeP+U8HUxeXw9B+k4OmTkFfbRHve8tHfgSAIgiAIgiCtyKp4
NddmA4MhRPTk8VPmxuZ//5E0wsIiKuq6W3afy6583SJZctlz5olvQWYwKwlJ
affjt+k1BNDfgSAIgiAIgiBIZ8h4+GL9Nk+yp4vcXW5oOiUy65uP/ElU9rcu
+y6vd/VcxwvAqkq99wfHD6G/A0EQBEEQBEFaEJ37nZa+MVGSpaT7HL0Yzbxx
48M0oXeesp/jNho3rbVPBLgV+0hh2PtgVsNUNIJTGlqnyap8fexyLKjiPFH+
N+084xdfxa1o6O9AEARBEARBEKSTJBT9bDl7BUNIiDKadh29kVvdyC39pYC8
/gOHCPDoAUMmKuc7jh9q7e/IRn8HgiAIgiAI8nlz9kY6pY0bjJnEcavSKd+U
fv3lSRoJKek9nv65NS19Inm1Ta77vSn/gtV8+4yH/7R+Vcrd38ynL+KV8i8p
JbPnRAC3oqG/A0EQBOkh5CEIgiD8QROHH9Y2+SVUa+iMpsyQKdY2yWW/cXsJ
8XcI8ujR0jOOyvmO44eSP/R3rGP5O+iuQARBEARBEAShjczK13abDgoLixAN
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
bm9vjY3LeFTEgdGpd/uMmK86xMPCym6j7yW156tAkZfujJzhoRi5kMk0G7bo
vifyxuGruUUc6Hfia9fa7qpDPBq26BaU+JPa8/VCYtMfrjtwrnGrnjq6+nnv
CpnMoVrtSW/tDkr8sbCHILYv3Bghzeslk8k695sUcekvtWcEAAAAAAAAePPE
pj9Y43lm4oKd4+dtn78uJCjxR7XfUuk7dPKbTn0n6uk/nZ+nqmu9tV5n4zIf
F3FI2IXfWncdZmpumTexT/54EPmnQbMu5a4XFy/h8NXc7cFXnNzqKwY7zCwq
v701Nj7rSbHHLlgfamhkqhQCaNyqZ+j5X9WeNVUJWdnTlx4wMn5uMY5aDdp4
xX1UdLBDEE2pc9+JSkuW6Ojqj52zteioUFkTk/ZAPAQrW0eNfxb0adC8687Q
a0W/K0SBdug1RhoJUiF/yjL/U9+qPS8AAAAAAACAWsRlPPI/9e2BhE+8D3+W
N0NOcb2LL8Tn6BfONRpJHbZ6+kZT3/ZUe35Lk3iYeyJvtOg4UOqN1NCQudVt
7nHwwuGrOcUUSubjkdPXa+vo5U9T86y7W/x12JTV5asX918Sl/FwxNS1NRu0
qlG/ZemrWb/VsMmrYtIf/HsZDD77c6vOQxTXstfR0Rs8cUVM2v2SHO4Zc0tx
SitxnmrVG673Pq/2gitI7tbADHvHmooBi4qWtst3HTtSgteRaGVz1wbp6hnI
jxU/t+0xMuD09+rO1wsISbotmraxaUUpC6Ltt+46zCv2w2KP6jNivm7+YBDp
Y1e1umfsB2rPDgAAAAAAAFD6Eq5kL9wY4ehaT0dX38DItFHL7vuib77G8x9I
+NSmiou8L27kDA+1Z7nUHL6auzfq/frunWWamlL2Hd3qb/S7lJA//X5x5ZIz
Y9lB+ZLN8o+xqcWSbfGvNyZVTsWk3W/Tdbji2IfS/Ijrtu46LLpkoYeXcTX3
7a2xSgM0qtdr4Xv8qxKeQVShOWsCROuTyTQtrOy6D5q+O/zdktS90heVcrfX
sDmKC5SIn/uNWSi2l/AMIUm3ew+fa2RsLg50cqs/ds6W8hXsCDv/W88hM+VD
wMSnQ++xh05+U3S4RzSBIRNXKI3/cnStf/Do52rPEQAAAAAAAFD6QpJ+adqm
t7yvTKapNXHBztfYnf5fjnfsi7nVoHlXmexpsMPK1nH5zqPFjuyQW7QpSnUV
ZpdaTXyPf6n2rJUFb3a8Izr1Xsfe4xRzp6mlNWrmhoSsFwhYxGY89Iz9YEtA
+t6omyWPHZQ+z5gPHKrVVny8Flb2HgdfbChKePIfO0OvbQ3MOHj08/jMYub7
KlOkMRo6/4zR0NCQ1XfvvD/+42IP3BX+TmW7akr1smWnwYUtDAQAAAAAAAC8
2YISf6zv3ulZb5lM1nPobOIdr+7QyW+ate8nD3boG5pMW7I/NuNhyc+wZFuc
tAaxYh97xz7jX+gkb7A3O97he+wLR9d6ilesaGm3LShT7Y/99buau3R7guJs
VBXylhrvHp78h/rv7d8XefnvviPnK47RsLZ32eyfWpKX8EbfS8amForPTd/A
eNbKQy8UFAMAAACA8uXwVQAAChV09ueGLbrLu8tkMs2xc7YevpqrmjIu88my
HUfc2/atUa9lg+Zd39oQHpv+qNjzK8c7pnuoPculIPT8b90HzZCvIKypqdVt
0PTwi3+W/AwJV3Jmr/LXNzBW7MzU0taZsdwn4UoBpfMflJCV4xn70eZDaerh
n+YV9/G/Vxbi/BZW9oqlX7dJR//T36v9sb/+crySO27udvmcb1IsaejkVfGZ
T9R+b/828VKduybIQGHWMh1d/QkLdsZlPC7J4fvjPlYMimlqabfpNiLo7C9q
zxcAAAAAAACgFrEZj6cvO2ht7yx1p9du1HZ3xI0CU0Ze+rtTnwnyr9M3adM7
+NztYs//H4x3xGU+mbxon4GhiTzXDi5190bdfKGTxGdmT1ywW1fv2TLEeV/8
tqu2J/J9tWcQpWCNZ6JZxcqKIYDO/SZFXLqj9ht77RKu5AyZtFI+Ekp6ES3w
CH/j43oig5v90+ydnq3SLpPJWnQcFHjmxxKeQby9F26MdK7ZRFQPQyNTUUP2
x39SYLQaAAAAAAAA+I+ISrm3L+aDzf5pWwMzD538NuFKToHJIi/93aHXOHnX
XKOWPYh3qEq4krvB56Ktg6s8y4bGZpMX7SvhF7blolPv9xm5QFNTSzHe0bhV
L768/R/hGfuRrYPbs7LX0OjQa2z4xb/UfmOvnWgy89aFaGnrPBunoKk1b11w
YS+iN0bAmR9bdR6qGOixtHZY7XnmhQI9cRlPvA//b/OhtB2h18OTX2AEGQAA
AAAAAPBfRryjJAJO/+De7tmyHRU0NJq27RuS9OuLnic06bfmHQYqBju0dfRG
zdhQkjnE8AaISrnXqe9EDZlMXgEaNu8WlPiz2m/s3+AZ82FVl7oKsR3ZyBkb
4rOy1X5j/6IrudOWeuvpGykO4ek3elF06n313xsAAAAAAADwpiPeUay4zCcT
5u/U0X02CZWRsfnizTGHX3xmnoNHPq9Wo5FivMO8ks167/NqzyNKS+7WwAzn
Go01NJ6GPPQNjWeu8H0jA14iUzOWHbSwtJPXdkfXejtCr73BU1r5HPuydqN2
ig3crGLl9d4XmI0KAAAAAAAAKAXEO4q1O+KG0tfUm7XrF3T2xb+TfyV3xe7j
+obPLVbuVL2h3/Gv1Z5HlJqEKzm7wt9t0XGwfK4nS2uHMbO3eMV9/OZFPWLS
Hy7aHC2ajxTf0ZDJatZv9daGiMAzPyZkvWkTW8VlPJ4wf6eevqG8dctkMvF2
Db3wu9rvDQAAAAAAAHgV8Vk5gWd+3B//6f74T7wP/y/y8t9Fp0+4kht87pcD
T9N/FpVyr9hLhCf/Kc4s0h9I+DT0/G9K35qOSXvgc+xLaW9Q4k+K0+aLnwPy
7u0TYVfYuy06DpJ30NVq2GZLQIa0S061b39/IfEOkWv/098v3hLbY8isOo07
1KjXsnGrHgPHLlmx67jIXXn8XndUyt3+YxZraWnLM2tiVmnhxqiXyEtcxuM+
I+bLl4aXQifiQcW+4CIgeAOIBjh3bVD1ei20dXRFTdDR1bd3rOFWt3mN+i1V
Ne8wYP2B8+Wx+RzOGx6VvS/mw6GTV1vaVJWiHkYmFZ3c6ouXg2pOa9Zv1Xv4
PN/yGQH0PfZV7UZtKyg0cENjs7c2RJTTggMAAACA0pQAACjbgpN+bddjlJ6+
kY6uvrGpxYjp6yNT7hWdvkPv8fqGxlL68fN3xqQ/KiJ9TPrDkTM2mJpbifT6
BsY9hswKv3hHMcFqr0Q7xxrS3loN2/ie+Ea+K+T87217jNLVMxB7BU0tLcUe
eB1dPWm7RFfPsFXnoUo3sz/hU2uFeMeI6R5iY8Tlv+esDapRv6U4s8JyvRri
Z7GlnnunVftOx2Y8VnvRvJDtIVet7atVUHhATdv0CUn67SVO5XfyW+eajRUH
d2jr6C3clBc6UXs2UcpEg9p0KKXXsLkVLW0rFPeRyWSjZm6My8pR+22/nNAL
vy/cFN28wwDxHig2s+aVbDx8Lqr9nl9c7vz1YYqDO8THwaWu95HP1X1jAAAA
AAAAwKsKOf/cytQOLnUPHv2yiPS7Im6YWVjL09dq0Mb/9A9FpPc9/rVbnWby
9N0Hz4hKva+YYPbqAD2Dp8vmamnr7Im6Kd/lfeRzB4UJmor92DvVOnTqe8WT
q8Y7vI9+Ie5B39Ck0LNoaFS2c5qx3LcchTzErfYfs0ghdpP3JEUW4l88QhGX
lT1nbZCBkaniI7F1cBPlrvZsotSIaiCa0lsbI93b9atUuYosf+FyDQ2ZsWlF
K1tHUR9UudRq2m/0Qp9jX6n95l9UdNpDr7iPR8/eXKNeSyOTivIWZG5hbW3v
rJpTO8cadZt0nLrkQNGh4bJJvH479pkgX5ZFeuN16jtRPAS13xsAAAAAAADw
iuKycsbM3iJNVpPfy6e7xjOxsMTxV3LnrQ/VkD3rKzM0NtsWfKWI82/wvSQP
Z+jpG85eHaCUoIh4x6FT39dq2Kbk8Q7nmo3Dkv9UPLlSvKN9zzFN2/TR1NT6
p59Pw8SskqVNVT19I6VTiaO2BGaqvXRKaH/8p05u9RXv38Gl7r6YD1/iVMFJ
v7bsNFimUMTi06zDgOCXGiqC8igw8acZy31E09PW0ZOmNRN/2jvV6jNi/rKd
x3xPfBOZci8y5b6SqNT7MRmPEq6Wp0FAcVnZe6NvDRq/zNreWTNvLri8zIof
6rl3HjnDY7N/mmgOqjnNz+yDuMwnar//l+AZ+5GDcx3F1i0Kd/yCnfHldlQO
AAAAAAAAoGjToVTzSjZS35dMU3PQhGWFjQuIzXzSpf8UqVdQ+mhqak1526uw
9PFZOePmbZevBGHr4KraCV9EvENcbuWek0Mmrxo8cUX/MYurutR7Fo+wd+4z
coHYLjdk0splu44pnVwp3iEuJA2CEBdyq9t88mLPneHv7o2+tdEvZcC4JeYW
1vI57TU0ZG27j4pJLwffeY7Lyp658pDi8uKiEHsMnf0SXz6Pv5KzZFuCsamF
Yneotrbu8Gnrip61DG+GiMt3l2w/XKdxe8X5jkR96Dl0tmgm5WjEU7HEKyvg
zI+jZ222reom2ou81VdxqiVeC/6nfxBtQe03+W8Q5WtiVkmxgRsZm6/Zf658
BaoAAAAAAACAwoRe+MO1tru8+6t63RYRl/4uOOX535XGEWhoaDRt26ewzvCo
lPv1m3WRp2zeYWBcZrZSmiLiHQn53ZKxGU+E0PN/tOs5Rn7dhi17+J/+Udol
p/oV5f3xz8U7pI++gXG/0YsOnfzu2c1c+b/otAdLtiVYWNrJk1WqXGVLQIba
S6dYYRf+7NBrrOKIDD19o2lLvVUfdbECTv9Yt2lHxZXKK+SvU7D+YLJ4RGrP
aZkiHu+K3SfGz98xbp4ajJ+3Y9nOY683ACFaRL/RC00rWilWAAsr+3nrQiMu
332jKsCV/9vsn9a0TR9dhbCOaEG1GrbdFnxVvEneqMwqEC/q4VPXitesYgOv
bFctb7a6NzTLAAAAAPCaXQEAlHVxGU8GTVgu7+S0yOvnzyww5QafS4qLd0gf
2yquBxI+KzD93qhbljZVn3YnampOW3IgIStXKc3sVc/HOyJvFniqiIt/d+g1
Tn7RRi17BJ29XWzWVOMdxqYWI2dsCE++o5o4OvXhwHFL5c9BS0tn/Pydqjdc
1uyN/sDeqaZiHitVrrLRL+VFzyOyP27udtWVml1rufud+E7t2SxrolLut+46
XCk2VGofcd1WXYZFptx/XdnxivukZach+XM6PftUsnaYtz4sNv2x2p/2axSX
mb1q72kntwbPP09ZPffOuyPeiy/z7f1ViLdo536TlCqtg3Od/fEFv8ABAAAA
AACAcic+K3ft/iQdXX2p+0tLW2fCgt15YyVUUort2tq6Sl2vBkamCzdFF3jm
OWuC9A2ezrNkam61K/xGvEqaEsY7wl8q3uH1fLxDnH/UzE0Rl++p3kbec7jy
f1uDrpiYW8rTdx804zV2Kf9LZbd813F9g+fWH6ler2XAmZ9e7DxX/m+D72Ur
G0eVfnVZz2FzotMeqT2nZc2bFO/wO/Ft8w4D5evaSB/Rcict2heV+kDtj/o1
EvVcvOvsHGsoFZyNg9umQ2lvdrBDCD3/R8vOQ5XqUvW6LXyPf6P2ewMAAACA
ciEeAFAe+Bz/RnFKq7bdR4Um/6WUJiz5r3Y9RksJDIxMre2d5V2vfUYuiEp9
oJQ+MuV+98Ez5f2KTdv0DTr3q+qlZz0f79gdebPAOwy/+Hf75+MdgWdvF5sv
pXhHm24jQy78UUT6gDM/N2jeVZ7evV2/Au+57IjLzBk1a5PiCvLigbfoOFiK
6ZSc34nvmnUYqNqvLopm8db4+Cu5as+pktjMnPBLdw+d/sH/zE9xWTmlfwOi
ercqA/GOV89I8PnfewyZpTSyQ1ygRafBJWli5UqueL1Ur9dS6WHq6RuNm78z
Ou2Rum+vpGLSH4de+NP3xLch54t6m6kKTPylYYvuStmv07iD/+kf1Z4pAAAA
AAAA4HVRik3YOlT3PvKlUpoDhz+v6vp0xfBqNRqNmO4hn/uodqN2qj1mvse/
lXctamppj5y5MW+JDZVLl2a8Y/i09UWnz7/KWHn6hnlX+UXtpVOE6LRHHftM
UOx119CQdeo7MTr9cclPEnrhzx5DZ4vS1DcwltZzl38q2znvjnhf7dmURKU+
FJVw5d7T05f5jJjm0aX/FLe6LXoOnSPuXw1PPv3x3HWhfUcv6jtqYenrN3rR
vPVhMS9SygWKy8oVDdDQ2EypD9zIxHz5ruNib8lPFZuZvSfq1ozlvuPm7Vjj
de7V7+21C03+q1O/ScqRnQoV3Oo2P3jsqxc6VWTKg3UHLkxauHfyYs99sR+9
0IN6uWIKS/5rV8T7b29LmPjWnsETV7bqMszRrf7ctSEvFOzzPfGtSy13pew7
ujbwPvLFS99bbEa2OPy1hN4AAAAAAACA12Xhpmh5t6e2ju6KPSeVEqzdf15s
l3rUuwyYui34qoWVvZTewNBks3+GUvr13snyObLMLazX7E8q8LqlGe8YMd2j
6PQx6Y97D59fjuIdoRf+rO/eWbH3UkMm6zl0TmxmSXtBwy/dHTd3uygCO8ca
jVv1UlzLWENDo3XXEUWPiCk1B49+NWnhPlGCDVt0l0+SJirkqJmbXii4A0U+
x76u1bBtBZVP/WZdDp36vuTnCUz8ZdSszbYObnn1R0OjkrXD5MWe0ella8TE
8t0nFGerkz4ymeawqWsLDMUWKC4rd2f4DfEuEu80mThYU8u5ZuONfqn/Ysgj
K1ecf/Sszf3Hvu3k1kA+7ZjIi4fP5Rcae+V38jvXOs2UnkBlW6cdYe++3L3F
ZDxZuuOoS2332asDYzOz1V7EAAAAAAAAgGR/wv+sbJ3kfYC9h89T7MGLzcwZ
MWODNI5AU1Nrvkd4+MW/3eo0l9KLLZMW7lVKP2b2Fvm4g+p1WxQ29UqZincI
gyeuLEfxjpDzv9du1O6l4x1RqQ8nLtxrbGphbmE9Y4Wfe/v+iqfS0dUfP39X
TIm7gl+ReNSzVweK+9kV8X68Su+xqF3ibqPSHnolfFanSQfpDs0r2aw7cEHt
pVBOxWXmzFzpb2BootQBrq2jO2zqOvGoS3iesOQ7vYbP09N/bhEZ8XLwPvpl
6WREvArmrAnKqznhNwqLO0SlPmjXY4yGhkwps6bmVuu8k0seNdgX85FocTKF
tU7EOXuPWPCvTocVm5mdV/lTH6zad6aipa103TqNO/idfIGYlBCc9HtzlWnr
RHGLahBX4gjps7vKyF6+67itg5uw/uBF1TYLAAAAAAAAqEtU6sM23UZUqPA0
QuFa2z046XeFvQ/kE7+bV7LZE3UrNiN70IQVUkRD/Nms/QDFjvHIlPvy9DKZ
bOD4ZYX1QxLveBUFxDs0ZK27Di/J9DLhl+6OX7DLxKySeSXbqUu8twVfs3Os
oXgqCyv7/K7gpwX6omuCvJCAMz917DNBR1dPpqnpVrf55oDMIrLcsvMQ6Q5r
NWz7xq0xUXpEmfYbtVBpmfIK+ZNZLdwcU8IQQEz644kL9+gbGiudxMbBTbwl
SiEXgYm/dOo3SUdXXybTFG+tTf7pBSY7dOp7l1pNK6h8nNwaHjj8eQmv5X/6
xzbdRooq+twp8oZBlajFvbpdEe9JCydpaWkPGr+85DEpiXiLdu43WWnRGWkt
mLDkOy9aed7eGm9TxbWyXTXxg/jnoBSyDwAAAAAAAJRQbGbOjBV+8q6wilZ2
G/1S5Xs9Yz+p/M/ojwbNuwUm/hKXlbtmf5J8xirbqtX3J/xPnn5v9AdWto7S
LpFmtefZwq5LvONVqMY7xKdKtdr7Yj4q+sCgc78OnrjC2NTCyMR8wlt7IlLu
L9wcIy9N6VO9Xkv/Mz/F54+tEHWj59A5fie/+5cyssk/3bRi5X+qge6oWZsL
WwDCK/6zqi51pX5acUtlbdKkciQ0+a92PceohgAsKttvDbpSkjPEZeaIpi31
wCt96jbtdOjUD6WQiy2BWeYW1vIXyMgZGwusOftiP7ZReBXIP03b9g0qWcgs
Ou3R8GnrdfUMlc4g6uGwKWtLYTYn0Qzf2hglGqy4qKGxufj5hRbviM8fkTHx
rT3ydZfkH1Nzq7c2RMakl3QkV1jynbFzt5lZVK5oaTtvXWgZXKsFAAAAAP4l
cQCA8mNH2LvmlWzkPYfj5++Ky8qVdi3YGGlgZCp17vUfuyQ6/bHY6H30S6fq
DaX0hsZmef1vT0+VO3tNkHyRBZdaTX1PflfYRVXjHQUmC3s+3tGwZY+As7eL
zZGn0nrl0z2KPUQp3hFw9he1l0sRwi/fa95xkNIXtnX1DEZM3xCZ+qDAQ0TZ
7Qy/IQ2mMDW3Gjt3e0TK/ZiMJ31HL1Ja97zLgGnygq7RoHWD5t2KKMdXtDXo
SkVLO+nSOrr64+btjE5/UkDKrNxlu05IC83o6Rst2hInr6J4UaHJf7XvPa6C
ysfK1mlP9AclOcO+2I9rN26vVP3yisbAaOKifdEZBZXg67Yt5LpFZft/ao7e
mDnbpEqrRLwKbB3cVDObv0LNn8VeJTYzZ8n2I/IVixQ/1vYumwOzSiGnkSkP
BoxbqpW/3rqDcx2v+M9e4iQb/FItbaoqZUGUoE0V17e3Hy7w0T13D6kPRVPt
2Hei+OfA0rrq7NVB0WmPSiHvAAAAAAAAwIsKPHu7cZve8k6wVl2GBV/4Q2yP
znjSf+zb0tT3hsZ5c91I6cMv3+vYZ6I8fa8R86U+9oiU+10HTpNv7zpwukhZ
2EWV4h27iHe8iJjM7KFT1qquSmBuYT116UGlxx6blXvw+Ddj5my1dXCTyTQt
rOwnL/YShSV2BSX9Vr95V8UzaOvozlhxSBwSlfZo9KwtNlVcF29LEJf7lzIS
mnxHlI6xWSVNLe2WnYd4JRTclxud/rjPqIUasrz8VrartjPifbUXQfkVmfpw
4ITlmvn954qfStYO20KuF19kF+907j9FdTqsCnmDJvr9e6Ex1dsYOWOjSX7N
ad5xsGjyBSYLSPyler2W8vn65B/3dv2Dzv1W7FV2R96sVqOxamRHV89g5MxN
RbzfXiOf49/UbNBaftvilfgSJxHtvVO/yTKZ8htDalBTl3gHFvJejcnI3hZy
bcC4Jdb2LuLtYWlTdb5HeFRx8REAAAAAAABAXWIzc0bP3qqlrSN1f1naVN0b
+7HYfujMT/LO8Px5qz5/mj4rd/bqQP1/1juu2aCN36kfxPaDx76WL2VuaGw2
3yMiLqvQixLveKUiy8pdd/CiaUUr1d5LIxPzVl2GLdt13DPukz3RH4gfug+Z
5eBcR1tHV0NDVsWp1qItcVH/fDc7f7YfV8XDjU0tPHxTYrNy1uxPqlKt9rCp
6yLTHv6reQm7dHdr8LVN/hn+iYU+88Bzv0qLlecvOjA8+Pwfai+C8ktUnsVb
E0zMKinVHNGipyw5EFPk6IyQC3+KKqFnoLxsh0ymKQpoR9i7pZmR8Et3t4Vc
z6s5Z34uLE10+uNew+crL72Rv87IlqArRbygxFPyiv/Mvf0AkTWlY/X0jcQ5
S60SbvJPN8ufuUtTU2vy2/vF6/rlzrPOO7nAgSr5RW/sVrf5wPHLVu47I14a
4v25N+bD9T6XJi7cK16GVraO4iGIt4drbXfxPil4BBYAAAAAvNmyAADlyTrv
ZDP5MgpaOtJ8QbsibpqaP+1Rb9KmT0xGtjz9nqgPLK2fzo5iaGy2JTCv53C9
zyV5CMOmiqtn3KdFXFE53hFxs8BkYckq8Y7E28VmR1z6uXjHNI9iD3ku3tFC
XOUXtRdK0YKT/hBPRrUztkJ+UEBbR1dXz0DQ1tGTOns1NbXquXdZ73M5Jv1Z
OW4LvlapssNzPZ8GxvM9Ijx8Umo3atex76SAM2XiOWzwTbGwypv26tmcV+q+
pXItOOn31t1Gqo4PcnStvzP8vby5wgo6SjSKwZNWGRqZKR2lqaXdqsvwfTEf
x2YWfKB6ibeTnWMN5TYik3XsMyFvSqtCjtoZdsO9XX95FFj+MTa1GDljY97Y
kFK5efFIx87dIY2mMa9ksykg86VPFXH5/pjZW/VVYlXyj3hRiNeFrp6+9OoQ
bU1kXxrbIoq4Ucse20KuK/4rAAAAAAAAAJRNIef/lA/NkMk0ewyZHZORs2BD
pNTZJdPUHD9/d5xCZ2bEpXv13Ds/7e3U1Bo3b2dMRvbYudul9OLPlp2GRKc9
LuKKxDteUWxm7mb/DEfX+oX1Xj7r2tXQMDW36jVs3oEjXyr1SG/0S6toaauU
2NKmqk0V15adhx44/IXasylEpz0ZM2ebto6euD0LK7u1By6o/ZbKv9xN/hlV
XespzdQk2n6D5t3EEw5O+kO8AaTEUamP/E7+sGLP6UateiotbS/avoNznUmL
PPNGWKg/UwWLSns0delBE3NLpXahb2DcY+ic3ZG3wi/dfRriycwNu3jXK/5/
05YeFC1LafYnXT2D+u5dlu86EXH5fqndfGjyncate1fIL6a6TTv5nvjuVc4W
cuGvYVPXSevglPCjoSGrZO0wZPJqv5Pfq70oAQAAAAAAgJKITn/Sf8zb8s5P
J7cGAWd+6dJ/qjTvvb6h8Ua/NMX0MRnZI2dskkc3GjTvFnL+T8UIyOzVQUVf
kXjHq4vJyFm590xVl3qqX9R/1iOtpd24de8Ve06FX7yregbvo1+pRkx09Qy7
Dpx+8OjXcWXj6/qiaok6kL94h0bdpp3KRdGUfbGZOeu8L9Zs0EZ5cQoNDSPT
iu7t+g+ftn7c3B1j5+7oN3qxa51morUqVTObKi7ipbEn6sOyP9wmMuXhpEWe
FpWrKFV1mUzT2t5ZvOhGz94iMjt61pbO/adY27to6+gqLvmhpaVdq2HbKW8f
CDz7a950UqV453ujP6pSrba4B21t3aFT1oiMvOIJw5LvTF/uV+CiJKofPX2j
dj3GbPBNKc0QDwAAAAAAAPCKYjNzV+49LZ+8xbySzeKt8U5uDaS/utZp5ntC
+cu9G3xT9PSfBiys7Z0XbYmztHk6w1VFS7tdEe8XfcUSxjsiLt/vMuDZGuhV
Xep5H/262Oz8R+IdcfmBp23B18UjEs9cR1dPun9NLW1DYzMrG0f3dv1EORYx
J1VU6qMR0zcYGpnmh61k4iiXWk1nrw4KTvrjRW/D//TP+xP+J578gSNfhiXf
kQ8kCTr3W95KB4XUusiUB8FJv/ue+C5vFeZCTr478qa9U838nnhZr+Hzy37v
enkRm5GzO+qD3iMWiMaira1bbO+31Ote0dK2et2W4+fv2h15S9SfV7qBzNyQ
8396H/lKVBuv+M8CE2/Lp0sSDV/UitiMgoML+TXnYV7NOf5dWHKhNUeRSL/K
82yz9gNNK1YuIj4o/4j2oG9gXNnWqUmbvm9tjBYXKuxmSiivjZz5p40c/iL0
uTbyu8hLQYfkzF4TZJDXPPPW5Vm4ObawqcZeSHTa470xH42Zu925ZhPxqtfT
N5SvPi9yratnaFaxsmhxnftPWe11ThTQq15RlPKFv+SlHKBSyjGv9mABAAAA
AAAAVd5HvqpWo/HTDnNNrQYtupuYPZ0BplO/yWEqowN8TnxXvV4rKYG+oUn9
Zl3kM8M36zAw6FwB3XeKShjvEIZMWi3/KrKBkenGQ+mxxeXlJeIdg8pnvEMQ
TyMi5cGOsBsTFu7tM2phn5ELRX4Xbo47cOSr8Mv3i+1LDLnw1zyPiH5j3h4w
btnCLXGBZ3990Sn6g8//MW2pT53GHYzNKunqGVS0tGvfa9zirQmhyXcOHvtG
VJ6ZqwLktyFOHnjut63B1+Z7RIyevbXPyLeatR9Yo36rFXtOFbj6g9i4cHOs
NI2Srr7h29sOiy0iX4u2xI+bt6NA4xfs3uSfQSdqCUWlPd4T/eHYeTs7958i
CtHa3lnf8NkSD+JVYGZhbVu1eqOWPbsNnjl23g5RdqJko9OfFNsMixadkb3a
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
NVoriQoiWovJEoWi1C1TVtkPNd1WhG27u2U/lNIZEei2uxFBEEEQSUT1h2n1
p7m1H/W4CythZRQ9t+4Frz/unjse3s/zeT/3xz3HfZ985cNYsj/0Q05paj++
rKIm+ASIB1NuP7Zh5+Hb7qu9ZO6VQ1MuvuL68uq6+Iv7gikPhB4VAAAAACCW
HGjp6Dn9NN492NrV++qhEymtnb3DfGX9c/PhH5f9uipHZG7pDU3D3Mj4W0ma
D50Idhs8CP208JeC2sR/N6looi+YXao2LR0n48MPMXj15lVrU+u5zCm5trH9
WOjH8ufif7xG2s76Gjl7rV0/DZ23nn++q3/XGVOOnfWUAQAAAABGioYDR+cN
rcqRlZ1T8cDm9PlROmmusf3Y/EVLU0vGlN//RCzRF3okAAAAAAAyVl1TMrUq
x4TJM+qbPw49DyPFppc/SK3VMr5g2pbdH4WeBwAAAACAjBVN9FVUbs7Kys4Z
k7f87keGW5gAzhBL9t9ZVR8UJycn95a71mkOAAAAAAAhev71I9OLSkaNGlVY
vPDZts9Cz8NIse2NL2bMXhA0Z8asBVtjn4aeBwAAgMwUBwAyTCzZ/+gL75WW
Lb/p1qrte79KbWzp6LmjcsuY3PyLJk1dU7831j0Qek7STSw58Nj290vLVty4
snLbW1+mNrZ09q6qeio3L3/cxCk1W94M3hN6TgAAAAAAMkFj+/HiksWRyOhz
zrugui4e6x6MJvvX1O8bXzBt7LhJD65vbu7oCT0kaajp4HdzFlwXGT06/9yx
D9VGU81Z+/TbEyZPP//CiZWP727uOBl6SAAAAAAAMsSu/Udnzbs6EokUXXbV
hl2dGxsTS8qrC6YUFZcsXrd1f0tnb+gJSU8NB76dXVIWNGfmpYvW7+yobUws
vX315KlFsy+/Zu0z72gOAAAAIesGADJLNNFfXdc2tXBednZObl7+pIsLFy5e
ee/DO3bs++bUnxGFHY+0FdRj9aY902bOP92c0rIV99Rs27H3a80BAAAAAOC/
F+3qe+61zzc2JDY2dNW3fPLSuz/EkoOhpyL9nWrOniO/Nefg95oDAAAAAAAA
AAAAAAAAAAAAAAAAAAAA/A/EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAEISTQIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAj
1S8johkG
    "], {{0, 522}, {2128, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{2128, 522},
  PlotRange->{{0, 2128}, {0, 522}}]], "Input",
 CellID->19940794,ExpressionUUID->"2209a9d5-7f67-4342-a72a-6929d23b073e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["F2fFCSFit", "TechNoteSection",
 CellID->500366741,ExpressionUUID->"b8ed1138-91b8-491f-87d9-01c21a8febf9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "F2fFCSFromTTTR"}], "\[IndentingNewLine]", 
 RowBox[{"?", "F2fFCSGetModel"}], "\[IndentingNewLine]", 
 RowBox[{"?", "F2fFCSFit"}], "\[IndentingNewLine]", 
 RowBox[{"?", "F2fFCSGetLinearCoefficients"}], "\[IndentingNewLine]", 
 RowBox[{"?", "F2fFCSGlobalFit"}]}], "Input",
 CellLabel->"In[493]:=",
 CellID->361507117,ExpressionUUID->"2894f379-d0e4-422f-beeb-57207db94e9c"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"F2fFCSFromTTTR[logtaumin, logtaumax, dlogtau, \
route1, route2, channelrange1, channelrange2, tstart, tend]\\nor \
\\nF2fFCSFromTTTR[logtaumin, logtaumax, dlogtau, route1, route2, \
channelrange1, channelrange2] calculates and returns the four FCS curves \
derived from the currently open 2fFCS meaurement in a format suitable for \
F2fFCSFit, F2fFCSGetModel, and F2fFCSGetLinearCoefficients. route1 and route2 \
are route lists defining the parallel and orthogonal detection routes. \
channelrange1 and channelrange2 are the lifetime channel ranges used for PIE. \
\\n\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"F2fFCSFromTTTR", "[", 
                    
                    RowBox[{
                    "Fretica`Private`logtaumin_", ",", 
                    "Fretica`Private`logtaumax_", ",", 
                    "Fretica`Private`dlogtau_", ",", 
                    RowBox[{"Fretica`Private`route1", ":", 
                    RowBox[{"{", 
                    RowBox[{"Repeated", "[", 
                    RowBox[{
                    RowBox[{"0", "|", "1"}], ",", "6"}], "]"}], "}"}]}], ",", 
                    RowBox[{"Fretica`Private`route2", ":", 
                    RowBox[{"{", 
                    RowBox[{"Repeated", "[", 
                    RowBox[{
                    RowBox[{"0", "|", "1"}], ",", "6"}], "]"}], "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Fretica`Private`ch11_", "?", "FValidChannelQ"}], 
                    ",", 
                    
                    RowBox[{"Fretica`Private`ch12_", "?", 
                    "FValidChannelQ"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Fretica`Private`ch21_", "?", "FValidChannelQ"}], 
                    ",", 
                    
                    RowBox[{"Fretica`Private`ch22_", "?", 
                    "FValidChannelQ"}]}], "}"}], ",", 
                    RowBox[{"Fretica`Private`tstart_", "?", "NumberQ"}], ",", 
                    RowBox[{"Fretica`Private`tstop_", "?", "NumberQ"}], ",", 
                    RowBox[{"Fretica`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`fcspl", ",", 
                    "Fretica`Private`correldat", ",", 
                    "Fretica`Private`logcorreldat", ",", 
                    "Fretica`Private`c11", ",", "Fretica`Private`c12", ",", 
                    "Fretica`Private`c21", ",", "Fretica`Private`c22"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"Fretica`Private`logcorreldat", ":=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"10", ",", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "}"}], "&"}], ")"}], "/@", 
                    "Fretica`Private`correldat"}]}], ";", 
                    RowBox[{"Fretica`Private`fcspl", ":=", 
                    RowBox[{"ListPlot", "[", 
                    RowBox[{"Fretica`Private`logcorreldat", ",", 
                    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
                    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
                    RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"log(\[Tau]/sec)\"", ",", "\"G(\[Tau])\""}], 
                    "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "12"}], ",", 
                    RowBox[{"FontWeight", "\[Rule]", "Bold"}]}], "}"}]}]}], 
                    "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`c11", ",", "Fretica`Private`c22",
                     ",", "Fretica`Private`c12", ",", "Fretica`Private`c21"}],
                     "}"}], "=", 
                    RowBox[{"FFCS", "[", 
                    
                    RowBox[{"Fretica`Private`logtaumin", ",", 
                    "Fretica`Private`logtaumax", ",", 
                    "Fretica`Private`dlogtau", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`route1", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`ch11", ",", 
                    "Fretica`Private`ch12"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`route2", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`ch11", ",", 
                    "Fretica`Private`ch12"}], "}"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`route1", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`ch21", ",", 
                    "Fretica`Private`ch22"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`route2", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`ch21", ",", 
                    "Fretica`Private`ch22"}], "}"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`route1", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`ch11", ",", 
                    "Fretica`Private`ch12"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`route2", ",", 
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`ch21", ",", 
                    "Fretica`Private`ch22"}], "}"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`route2", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`ch21", ",", 
                    "Fretica`Private`ch22"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`route1", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`ch11", ",", 
                    "Fretica`Private`ch12"}], "}"}]}], "}"}]}], "}"}]}], 
                    "}"}], ",", "Fretica`Private`tstart", ",", 
                    "Fretica`Private`tstop"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Fretica`Private`c11", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "*=", "1000.`"}], ";", 
                    RowBox[{
                    RowBox[{"Fretica`Private`c12", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "*=", "1000.`"}], ";", 
                    RowBox[{
                    RowBox[{"Fretica`Private`c22", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "*=", "1000.`"}], ";", 
                    RowBox[{
                    RowBox[{"Fretica`Private`c21", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "*=", "1000.`"}], ";", 
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`c11", ",", "Fretica`Private`c22",
                     ",", "Fretica`Private`c12", ",", "Fretica`Private`c21"}],
                     "}"}]}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"F2fFCSFromTTTR", "[", 
                    
                    RowBox[{
                    "Fretica`Private`logtaumin_", ",", 
                    "Fretica`Private`logtaumax_", ",", 
                    "Fretica`Private`dlogtau_", ",", 
                    RowBox[{"Fretica`Private`route1", ":", 
                    RowBox[{"{", 
                    RowBox[{"Repeated", "[", 
                    RowBox[{
                    RowBox[{"0", "|", "1"}], ",", "6"}], "]"}], "}"}]}], ",", 
                    RowBox[{"Fretica`Private`route2", ":", 
                    RowBox[{"{", 
                    RowBox[{"Repeated", "[", 
                    RowBox[{
                    RowBox[{"0", "|", "1"}], ",", "6"}], "]"}], "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Fretica`Private`ch11_", "?", "FValidChannelQ"}], 
                    ",", 
                    
                    RowBox[{"Fretica`Private`ch12_", "?", 
                    "FValidChannelQ"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Fretica`Private`ch21_", "?", "FValidChannelQ"}], 
                    ",", 
                    
                    RowBox[{"Fretica`Private`ch22_", "?", 
                    "FValidChannelQ"}]}], "}"}], ",", 
                    RowBox[{"Fretica`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"F2fFCSFromTTTR", "[", 
                    
                    RowBox[{
                    "Fretica`Private`logtaumin", ",", 
                    "Fretica`Private`logtaumax", ",", 
                    "Fretica`Private`dlogtau", ",", "Fretica`Private`route1", 
                    ",", "Fretica`Private`route2", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`ch11", ",", 
                    "Fretica`Private`ch12"}], "}"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`ch21", ",", 
                    "Fretica`Private`ch22"}], "}"}], ",", 
                    RowBox[{"-", "1.`"}], ",", 
                    RowBox[{"-", "1.`"}], ",", "Fretica`Private`opts"}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`F2fFCSFromTTTR\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"F2fFCSFromTTTR[logtaumin, logtaumax, dlogtau, \
route1, route2, channelrange1, channelrange2, tstart, tend]\\nor \
\\nF2fFCSFromTTTR[logtaumin, logtaumax, dlogtau, route1, route2, \
channelrange1, channelrange2] calculates and returns the four FCS curves \
derived from the currently open 2fFCS meaurement in a format suitable for \
F2fFCSFit, F2fFCSGetModel, and F2fFCSGetLinearCoefficients. route1 and route2 \
are route lists defining the parallel and orthogonal detection routes. \
channelrange1 and channelrange2 are the lifetime channel ranges used for PIE. \
\\n\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "F2fFCSFromTTTR[logtaumin, logtaumax, dlogtau, route1, route2, \
channelrange1, channelrange2, tstart, tend]\nor \nF2fFCSFromTTTR[logtaumin, \
logtaumax, dlogtau, route1, route2, channelrange1, channelrange2] calculates \
and returns the four FCS curves derived from the currently open 2fFCS \
meaurement in a format suitable for F2fFCSFit, F2fFCSGetModel, and \
F2fFCSGetLinearCoefficients. route1 and route2 are route lists defining the \
parallel and orthogonal detection routes. channelrange1 and channelrange2 are \
the lifetime channel ranges used for PIE. \n", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`F2fFCSFromTTTR, {Fretica`F2fFCSFromTTTR[
         Pattern[Fretica`Private`logtaumin, 
          Blank[]], 
         Pattern[Fretica`Private`logtaumax, 
          Blank[]], 
         Pattern[Fretica`Private`dlogtau, 
          Blank[]], 
         Pattern[Fretica`Private`route1, {
           Repeated[
            Alternatives[0, 1], 6]}], 
         Pattern[Fretica`Private`route2, {
           Repeated[
            Alternatives[0, 1], 6]}], {
          PatternTest[
           Pattern[Fretica`Private`ch11, 
            Blank[]], Fretica`FValidChannelQ], 
          PatternTest[
           Pattern[Fretica`Private`ch12, 
            Blank[]], Fretica`FValidChannelQ]}, {
          PatternTest[
           Pattern[Fretica`Private`ch21, 
            Blank[]], Fretica`FValidChannelQ], 
          PatternTest[
           Pattern[Fretica`Private`ch22, 
            Blank[]], Fretica`FValidChannelQ]}, 
         PatternTest[
          Pattern[Fretica`Private`tstart, 
           Blank[]], NumberQ], 
         PatternTest[
          Pattern[Fretica`Private`tstop, 
           Blank[]], NumberQ], 
         Pattern[Fretica`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{Fretica`Private`fcspl, Fretica`Private`correldat, 
          Fretica`Private`logcorreldat, Fretica`Private`c11, 
          Fretica`Private`c12, Fretica`Private`c21, Fretica`Private`c22}, 
         Fretica`Private`logcorreldat := Map[{
             Log[10, 
              Part[#, 1]], 
             Part[#, 2]}& , Fretica`Private`correldat]; 
         Fretica`Private`fcspl := 
          ListPlot[
           Fretica`Private`logcorreldat, Joined -> True, PlotRange -> All, 
            Frame -> True, Axes -> False, 
            FrameLabel -> {"log(\[Tau]/sec)", "G(\[Tau])"}, 
            LabelStyle -> {
             FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> 
              Bold}]; {
           Fretica`Private`c11, Fretica`Private`c22, Fretica`Private`c12, 
            Fretica`Private`c21} = 
          Fretica`FFCS[
           Fretica`Private`logtaumin, Fretica`Private`logtaumax, 
            Fretica`Private`dlogtau, {{{
              Fretica`Private`route1, {
               Fretica`Private`ch11, Fretica`Private`ch12}}, {
              Fretica`Private`route2, {
               Fretica`Private`ch11, Fretica`Private`ch12}}}, {{
              Fretica`Private`route1, {
               Fretica`Private`ch21, Fretica`Private`ch22}}, {
              Fretica`Private`route2, {
               Fretica`Private`ch21, Fretica`Private`ch22}}}, {{
              Fretica`Private`route1, {
               Fretica`Private`ch11, Fretica`Private`ch12}}, {
              Fretica`Private`route2, {
               Fretica`Private`ch21, Fretica`Private`ch22}}}, {{
              Fretica`Private`route2, {
               Fretica`Private`ch21, Fretica`Private`ch22}}, {
              Fretica`Private`route1, {
               Fretica`Private`ch11, Fretica`Private`ch12}}}}, 
            Fretica`Private`tstart, Fretica`Private`tstop]; TimesBy[
           Part[Fretica`Private`c11, All, 1], 1000.]; TimesBy[
           Part[Fretica`Private`c12, All, 1], 1000.]; TimesBy[
           Part[Fretica`Private`c22, All, 1], 1000.]; TimesBy[
           Part[Fretica`Private`c21, All, 1], 1000.]; {
          Fretica`Private`c11, Fretica`Private`c22, Fretica`Private`c12, 
           Fretica`Private`c21}], Fretica`F2fFCSFromTTTR[
         Pattern[Fretica`Private`logtaumin, 
          Blank[]], 
         Pattern[Fretica`Private`logtaumax, 
          Blank[]], 
         Pattern[Fretica`Private`dlogtau, 
          Blank[]], 
         Pattern[Fretica`Private`route1, {
           Repeated[
            Alternatives[0, 1], 6]}], 
         Pattern[Fretica`Private`route2, {
           Repeated[
            Alternatives[0, 1], 6]}], {
          PatternTest[
           Pattern[Fretica`Private`ch11, 
            Blank[]], Fretica`FValidChannelQ], 
          PatternTest[
           Pattern[Fretica`Private`ch12, 
            Blank[]], Fretica`FValidChannelQ]}, {
          PatternTest[
           Pattern[Fretica`Private`ch21, 
            Blank[]], Fretica`FValidChannelQ], 
          PatternTest[
           Pattern[Fretica`Private`ch22, 
            Blank[]], Fretica`FValidChannelQ]}, 
         Pattern[Fretica`Private`opts, 
          OptionsPattern[]]] :> 
       Fretica`F2fFCSFromTTTR[
        Fretica`Private`logtaumin, Fretica`Private`logtaumax, 
         Fretica`Private`dlogtau, Fretica`Private`route1, 
         Fretica`Private`route2, {
         Fretica`Private`ch11, Fretica`Private`ch12}, {
         Fretica`Private`ch21, Fretica`Private`ch22}, -1., -1., 
         Fretica`Private`opts]}], "SubValues" -> None, "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "Fretica`F2fFCSFromTTTR"|>, 
   False]]], "Output",
 CellLabel->"Out[493]=",
 CellID->254570389,ExpressionUUID->"50c3eb69-d013-4823-a203-0cb39fd197ac"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"F2fFCSGetModel[ fcsdata, \
\\!\\(\\*FormBox[\\({\\*SubscriptBox[\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \
\\\"1\\\"], \\*SubscriptBox[\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \\\"2\\\"] \
... }, {\\*SubscriptBox[\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \\nStyleBox[\\\"x\
\\\", \\\"TI\\\"]], \\*SubscriptBox[\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \
\\nStyleBox[\\\"y\\\", \\\"TI\\\"]], \\*SubscriptBox[\\nStyleBox[\\\"v\\\", \
\\\"TI\\\"], \\nStyleBox[\\\"z\\\", \\\"TI\\\"]]}, \
{\\*SubscriptBox[\\nStyleBox[\\\"k\\\", \\\"TI\\\"], \\\"1\\\"], \
\\*SubscriptBox[\\nStyleBox[\\\"k\\\", \\\"TI\\\"], \\\"2\\\"],  ... }, \
\\*SubscriptBox[\\nStyleBox[\\\"w\\\", \\\"TI\\\"], \\\"0\\\"], \
\\*SubscriptBox[\\nStyleBox[\\\"R\\\", \\\"TI\\\"], \\\"0\\\"], \
\\*\\nStyleBox[\\\"n\\\", \\\"TI\\\"]\\),\\nTraditionalForm]\\),guess] \
evaluates the 2fFCS model for the given parameters for the lag times given in \
fcsdata. Note that the linear coefficients are optimized to maximize \
\\!\\(\\*FormBox[SuperscriptBox[\\(\[Chi]\\), \
\\(2\\)],\\nTraditionalForm]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"F2fFCSGetModel", "[", 
                    RowBox[{
                    RowBox[{"Fretica`Private`data", ":", 
                    RowBox[{"{", 
                    RowBox[{"Repeated", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumberQ"}], ".."}], "}"}], ",", "5"}], 
                    "]"}], "}"}]}], ",", 
                    RowBox[{"Fretica`Private`diffs", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumberQ"}], ".."}], "}"}]}], ",", 
                    RowBox[{"Fretica`Private`velocities", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"_", "?", "NumberQ"}]}], "}"}]}], ",", 
                    RowBox[{"Fretica`Private`kTs", ":", 
                    RowBox[{"{", 
                    RowBox[{"___", "?", "NumberQ"}], "}"}]}], ",", 
                    RowBox[{"Fretica`Private`w0_", "?", "NumberQ"}], ",", 
                    RowBox[{"Fretica`Private`R0_", "?", "NumberQ"}], ",", 
                    RowBox[{"Fretica`Private`nrefractive_", "?", "NumberQ"}], 
                    ",", 
                    RowBox[{"Fretica`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`model", ",", 
                    "Fretica`Private`output", ",", "Fretica`Private`pl1", ",",
                     "Fretica`Private`pl2"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Fretica`Private`F2focusFCSInit", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"OptionValue", "[", "F2fFCSLambdaex", "]"}], 
                    "Fretica`Private`nrefractive"], ",", 
                    FractionBox[
                    RowBox[{"OptionValue", "[", "F2fFCSLambdaem", "]"}], 
                    "Fretica`Private`nrefractive"], ",", 
                    RowBox[{"OptionValue", "[", "F2fFCSfocidistance", "]"}], 
                    ",", 
                    RowBox[{"OptionValue", "[", "F2fFCSpinhole", "]"}], ",", 
                    
                    RowBox[{"OptionValue", "[", "F2fFCSmagnification", 
                    "]"}]}], "}"}], "]"}], ";", 
                    
                    RowBox[{"Fretica`Private`F2focusFCSSetData", "[", 
                    "Fretica`Private`data", "]"}], ";", 
                    RowBox[{"Fretica`Private`model", "=", 
                    RowBox[{"Fretica`Private`F2focusFCSModel", "[", 
                    
                    RowBox[{"Fretica`Private`diffs", ",", 
                    "Fretica`Private`kTs", ",", "Fretica`Private`w0", ",", 
                    "Fretica`Private`R0", ",", "Fretica`Private`velocities"}],
                     "]"}]}], ";", 
                    RowBox[{"Fretica`Private`output", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"10", ",", 
                    
                    RowBox[{"Fretica`Private`data", "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}]}], "]"}], ",", "#1"}], 
                    "}"}], "]"}], "&"}], ")"}], "/@", 
                    "Fretica`Private`model"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"OptionValue", "[", "FOutput", "]"}], "===", 
                    "FGraph"}], ",", 
                    RowBox[{
                    RowBox[{"Fretica`Private`pl1", "=", 
                    RowBox[{"ListPlot", "[", 
                    RowBox[{"Fretica`Private`output", ",", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "Fretica`Private`opts", "}"}], ",", 
                    RowBox[{"Options", "[", "ListPlot", "]"}]}], "]"}], ",", 
                    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
                    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
                    RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"log(\[Tau]/ms)\"", ",", "\"G(\[Tau])\""}], 
                    "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "12"}], ",", 
                    RowBox[{"FontWeight", "\[Rule]", "Bold"}]}], "}"}]}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}]}]}], "]"}]}],
                     ";", 
                    RowBox[{"Fretica`Private`pl2", "=", 
                    RowBox[{"ListPlot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"10", ",", 
                    
                    RowBox[{"Fretica`Private`data", "\[LeftDoubleBracket]", 
                    "1", "\[RightDoubleBracket]"}]}], "]"}], ",", "#1"}], 
                    "}"}], "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"Fretica`Private`data", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", "All"}], "\[RightDoubleBracket]"}]}], 
                    ",", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "Fretica`Private`opts", "}"}], ",", 
                    RowBox[{"Options", "[", "ListPlot", "]"}]}], "]"}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", 
                    RowBox[{"Fretica`Private`output", "=", 
                    RowBox[{"Show", "[", 
                    
                    RowBox[{"Fretica`Private`pl1", ",", 
                    "Fretica`Private`pl2"}], "]"}]}], ";"}]}], "]"}], ";", 
                    "Fretica`Private`output"}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"F2fFCSGetModel", "[", 
                    RowBox[{
                    RowBox[{"Fretica`Private`lagtimes", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumberQ"}], ".."}], "}"}]}], ",", 
                    RowBox[{"Fretica`Private`diffs", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"_", "?", "NumberQ"}]}], "}"}]}], "}"}], ".."}], 
                    "}"}]}], ",", 
                    RowBox[{"Fretica`Private`velocities", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Fretica`Private`vx_", "?", "FRealNumberQ"}], ",", 
                    RowBox[{"Fretica`Private`vy_", "?", "FRealNumberQ"}], ",", 
                    RowBox[{"Fretica`Private`vz_", "?", "FRealNumberQ"}]}], 
                    "}"}]}], ",", 
                    RowBox[{"Fretica`Private`kTs", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"_", "?", "NumberQ"}]}], "}"}]}], "}"}], "..."}], 
                    "}"}]}], ",", 
                    RowBox[{"Fretica`Private`offsets", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"_", "?", "NumberQ"}]}], "}"}]}], ",", 
                    RowBox[{"Fretica`Private`w0_", "?", "NumberQ"}], ",", 
                    RowBox[{"Fretica`Private`R0_", "?", "NumberQ"}], ",", 
                    RowBox[{"Fretica`Private`nrefractive_", "?", "NumberQ"}], 
                    ",", 
                    RowBox[{"Fretica`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`vecdat", ",", 
                    "Fretica`Private`coeff", ",", "Fretica`Private`output"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"Fretica`Private`F2focusFCSInit", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"OptionValue", "[", "F2fFCSLambdaex", "]"}], 
                    "Fretica`Private`nrefractive"], ",", 
                    FractionBox[
                    RowBox[{"OptionValue", "[", "F2fFCSLambdaem", "]"}], 
                    "Fretica`Private`nrefractive"], ",", 
                    RowBox[{"OptionValue", "[", "F2fFCSfocidistance", "]"}], 
                    ",", 
                    RowBox[{"OptionValue", "[", "F2fFCSpinhole", "]"}], ",", 
                    
                    RowBox[{"OptionValue", "[", "F2fFCSmagnification", 
                    "]"}]}], "}"}], "]"}], ";", 
                    RowBox[{"Fretica`Private`vecdat", "=", 
                    RowBox[{"Fretica`Private`FP2fFCSModelVectors", "[", 
                    RowBox[{"Fretica`Private`lagtimes", ",", 
                    RowBox[{"Fretica`Private`diffs", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Fretica`Private`kTs", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",",
                     "Fretica`Private`w0", ",", "Fretica`Private`R0", ",", 
                    RowBox[{"N", "[", "Fretica`Private`vx", "]"}], ",", 
                    RowBox[{"N", "[", "Fretica`Private`vy", "]"}], ",", 
                    RowBox[{"N", "[", "Fretica`Private`vz", "]"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"Fretica`Private`coeff", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    SqrtBox[
                    RowBox[{
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], " ", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]], ",", 
                    SqrtBox[
                    RowBox[{
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], " ", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]]}], "}"}], "&"}], ")"}], "/@", 
                    RowBox[{"Fretica`Private`diffs", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}]}], 
                    ";", 
                    RowBox[{"Fretica`Private`coeff", "=", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"Join", "[", 
                    RowBox[{"Fretica`Private`coeff", ",", 
                    RowBox[{"Fretica`Private`kTs", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", "Fretica`Private`offsets", "}"}]}], "]"}], 
                    "]"}]}], ";", 
                    RowBox[{"Fretica`Private`output", "=", 
                    RowBox[{"MapThread", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"10", ",", "Fretica`Private`lagtimes"}], "]"}], 
                    ",", 
                    RowBox[{"Total", "[", 
                    RowBox[{
                    RowBox[{"Transpose", "[", "#1", "]"}], " ", "#2"}], 
                    "]"}]}], "}"}], "]"}], "&"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`vecdat", ",", 
                    "Fretica`Private`coeff"}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"OptionValue", "[", "FOutput", "]"}], "===", 
                    "FGraph"}], ",", 
                    RowBox[{
                    RowBox[{"Fretica`Private`output", "=", 
                    RowBox[{"ListPlot", "[", 
                    RowBox[{"Fretica`Private`output", ",", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "Fretica`Private`opts", "}"}], ",", 
                    RowBox[{"Options", "[", "ListPlot", "]"}]}], "]"}], ",", 
                    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
                    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
                    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
                    RowBox[{"FrameLabel", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"log(\[Tau]/ms)\"", ",", "\"G(\[Tau])\""}], 
                    "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FontFamily", "\[Rule]", "\"Helvetica\""}], ",", 
                    RowBox[{"FontSize", "\[Rule]", "12"}], ",", 
                    RowBox[{"FontWeight", "\[Rule]", "Bold"}]}], "}"}]}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"AbsoluteThickness", "[", "2", "]"}]}]}], "]"}]}],
                     ";"}]}], "]"}], ";", "Fretica`Private`output"}]}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"F2fFCSGetModel", "[", 
                    RowBox[{
                    RowBox[{"Fretica`Private`data", ":", 
                    RowBox[{"{", 
                    RowBox[{"Repeated", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumberQ"}], ".."}], "}"}], ",", "5"}], 
                    "]"}], "}"}]}], ",", 
                    RowBox[{"Fretica`Private`diffs", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"_", "?", "NumberQ"}]}], "}"}]}], "}"}], ".."}], 
                    "}"}]}], ",", 
                    RowBox[{"Fretica`Private`velocities", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"_", "?", "NumberQ"}]}], "}"}]}], ",", 
                    RowBox[{"Fretica`Private`kTs", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"_", "?", "NumberQ"}]}], "}"}]}], "}"}], "..."}], 
                    "}"}]}], ",", 
                    RowBox[{"Fretica`Private`offsets", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"_", "?", "NumberQ"}]}], "}"}]}], ",", 
                    RowBox[{"Fretica`Private`w0_", "?", "NumberQ"}], ",", 
                    RowBox[{"Fretica`Private`R0_", "?", "NumberQ"}], ",", 
                    RowBox[{"Fretica`Private`nrefractive_", "?", "NumberQ"}], 
                    ",", 
                    RowBox[{"Fretica`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"F2fFCSGetModel", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "Fretica`Private`data", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "Fretica`Private`diffs", 
                    ",", "Fretica`Private`velocities", ",", 
                    "Fretica`Private`kTs", ",", "Fretica`Private`offsets", 
                    ",", "Fretica`Private`w0", ",", "Fretica`Private`R0", ",",
                     "Fretica`Private`nrefractive", ",", 
                    "Fretica`Private`opts"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"F2fFCSGetModel", "[", 
                    RowBox[{
                    RowBox[{"Fretica`Private`data", ":", 
                    RowBox[{"{", 
                    RowBox[{"Repeated", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"_", "?", "NumberQ"}]}], "}"}], ".."}], "}"}], 
                    ",", "4"}], "]"}], "}"}]}], ",", 
                    "Fretica`Private`var__"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "Fretica`Private`dat5", "}"}], ",", 
                    RowBox[{
                    RowBox[{"Fretica`Private`dat5", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`data", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "All", ",", "1"}], 
                    "\[RightDoubleBracket]"}], "}"}], ",", 
                    RowBox[{"Fretica`Private`data", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "All", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
                    RowBox[{"F2fFCSGetModel", "[", 
                    
                    RowBox[{"Fretica`Private`dat5", ",", 
                    "Fretica`Private`var"}], "]"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"FOutput", "\[Rule]", "FGraph"}]},
                    {
                    RowBox[{"F2fFCSLambdaex", "\[Rule]", "0.485`"}]},
                    {
                    RowBox[{"F2fFCSLambdaem", "\[Rule]", "0.515`"}]},
                    {
                    RowBox[{"F2fFCSfocidistance", "\[Rule]", "0.44`"}]},
                    {
                    RowBox[{"F2fFCSpinhole", "\[Rule]", "150.`"}]},
                    {
                    RowBox[{"F2fFCSmagnification", "\[Rule]", "60"}]},
                    {
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
                    {
                    RowBox[{"AspectRatio", "\[Rule]", 
                    FractionBox["1", "GoldenRatio"]}]},
                    {
                    RowBox[{"Axes", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Background", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ClippingStyle", "\[Rule]", "None"}]},
                    {
                    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ColorOutput", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "CoordinatesToolOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"DataRange", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}]},
                    {
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Filling", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FillingStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "FormatType", "\[RuleDelayed]", "TraditionalForm"}]},
                    {
                    RowBox[{"Frame", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FrameLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FrameTicks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FrameTicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"GridLines", "\[Rule]", "None"}]},
                    {
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
                    {
                    RowBox[{"ImagePadding", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"InterpolationOrder", "\[Rule]", "None"}]},
                    {
                    RowBox[{"IntervalMarkers", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"IntervalMarkersStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Joined", "\[Rule]", "False"}]},
                    {
                    RowBox[{"LabelingFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelingSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"MaxPlotPoints", "\[Rule]", "\[Infinity]"}]},
                    {
                    RowBox[{"Mesh", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MeshFunctions", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"#1", "&"}], "}"}]}]},
                    {
                    RowBox[{"MeshShading", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MeshStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"MultiaxisArrangement", "\[Rule]", "None"}]},
                    {
                    RowBox[{
                    "PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}]},
                    {
                    RowBox[{"PlotLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLabels", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLayout", "\[Rule]", "\<\"Overlaid\"\>"}]},
                    {
                    RowBox[{"PlotLegends", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotMarkers", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotRange", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]},
                    {
                    RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}]},
                    {
                    RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Prolog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"RotateLabel", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ScalingFunctions", "\[Rule]", "None"}]},
                    {
                    RowBox[{"TargetUnits", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "71", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"FOutput", "\[Rule]", "FGraph"}], "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "71", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`F2fFCSGetModel\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"F2fFCSGetModel[ fcsdata, \
\\!\\(\\*FormBox[\\({\\*SubscriptBox[\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \
\\\"1\\\"], \\*SubscriptBox[\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \\\"2\\\"] \
... }, {\\*SubscriptBox[\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \\nStyleBox[\\\"x\
\\\", \\\"TI\\\"]], \\*SubscriptBox[\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \
\\nStyleBox[\\\"y\\\", \\\"TI\\\"]], \\*SubscriptBox[\\nStyleBox[\\\"v\\\", \
\\\"TI\\\"], \\nStyleBox[\\\"z\\\", \\\"TI\\\"]]}, \
{\\*SubscriptBox[\\nStyleBox[\\\"k\\\", \\\"TI\\\"], \\\"1\\\"], \
\\*SubscriptBox[\\nStyleBox[\\\"k\\\", \\\"TI\\\"], \\\"2\\\"],  ... }, \
\\*SubscriptBox[\\nStyleBox[\\\"w\\\", \\\"TI\\\"], \\\"0\\\"], \
\\*SubscriptBox[\\nStyleBox[\\\"R\\\", \\\"TI\\\"], \\\"0\\\"], \
\\*\\nStyleBox[\\\"n\\\", \\\"TI\\\"]\\),\\nTraditionalForm]\\),guess] \
evaluates the 2fFCS model for the given parameters for the lag times given in \
fcsdata. Note that the linear coefficients are optimized to maximize \
\\!\\(\\*FormBox[SuperscriptBox[\\(\[Chi]\\), \
\\(2\\)],\\nTraditionalForm]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "F2fFCSGetModel[ fcsdata, \!\(\*FormBox[\({\*SubscriptBox[\n\
StyleBox[\"D\", \"TI\"], \"1\"], \*SubscriptBox[\nStyleBox[\"D\", \"TI\"], \
\"2\"] ... }, {\*SubscriptBox[\nStyleBox[\"v\", \"TI\"], \nStyleBox[\"x\", \
\"TI\"]], \*SubscriptBox[\nStyleBox[\"v\", \"TI\"], \nStyleBox[\"y\", \
\"TI\"]], \*SubscriptBox[\nStyleBox[\"v\", \"TI\"], \nStyleBox[\"z\", \
\"TI\"]]}, {\*SubscriptBox[\nStyleBox[\"k\", \"TI\"], \"1\"], \*SubscriptBox[\
\nStyleBox[\"k\", \"TI\"], \"2\"],  ... }, \*SubscriptBox[\nStyleBox[\"w\", \
\"TI\"], \"0\"], \*SubscriptBox[\nStyleBox[\"R\", \"TI\"], \"0\"], \*\n\
StyleBox[\"n\", \"TI\"]\),\nTraditionalForm]\),guess] evaluates the 2fFCS \
model for the given parameters for the lag times given in fcsdata. Note that \
the linear coefficients are optimized to maximize \
\!\(\*FormBox[SuperscriptBox[\(\[Chi]\), \(2\)],\nTraditionalForm]\). ", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`F2fFCSGetModel, {Fretica`F2fFCSGetModel[
         Pattern[Fretica`Private`data, {
           Repeated[{
             Repeated[
              PatternTest[
               Blank[], NumberQ]]}, 5]}], 
         Pattern[Fretica`Private`diffs, {
           Repeated[
            PatternTest[
             Blank[], NumberQ]]}], 
         Pattern[Fretica`Private`velocities, {
           PatternTest[
            Blank[], NumberQ], 
           PatternTest[
            Blank[], NumberQ], 
           PatternTest[
            Blank[], NumberQ]}], 
         Pattern[Fretica`Private`kTs, {
           PatternTest[
            BlankNullSequence[], NumberQ]}], 
         PatternTest[
          Pattern[Fretica`Private`w0, 
           Blank[]], NumberQ], 
         PatternTest[
          Pattern[Fretica`Private`R0, 
           Blank[]], NumberQ], 
         PatternTest[
          Pattern[Fretica`Private`nrefractive, 
           Blank[]], NumberQ], 
         Pattern[Fretica`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{Fretica`Private`model, Fretica`Private`output, 
          Fretica`Private`pl1, Fretica`Private`pl2}, 
         Fretica`Private`F2focusFCSInit[{
           OptionValue[Fretica`F2fFCSLambdaex]/Fretica`Private`nrefractive, 
            OptionValue[Fretica`F2fFCSLambdaem]/Fretica`Private`nrefractive, 
            OptionValue[Fretica`F2fFCSfocidistance], 
            OptionValue[Fretica`F2fFCSpinhole], 
            OptionValue[Fretica`F2fFCSmagnification]}]; 
         Fretica`Private`F2focusFCSSetData[Fretica`Private`data]; 
         Fretica`Private`model = 
          Fretica`Private`F2focusFCSModel[
           Fretica`Private`diffs, Fretica`Private`kTs, Fretica`Private`w0, 
            Fretica`Private`R0, Fretica`Private`velocities]; 
         Fretica`Private`output = Map[Transpose[{
              Log[10, 
               Part[Fretica`Private`data, 1]], #}]& , Fretica`Private`model]; 
         If[OptionValue[Fretica`FOutput] === Fretica`FGraph, 
           Fretica`Private`pl1 = ListPlot[Fretica`Private`output, 
              FilterRules[{Fretica`Private`opts}, 
               Options[ListPlot]], Joined -> True, PlotRange -> All, Frame -> 
              True, Axes -> False, 
              FrameLabel -> {"log(\[Tau]/ms)", "G(\[Tau])"}, 
              LabelStyle -> {
               FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> Bold},
               PlotStyle -> AbsoluteThickness[2]]; 
           Fretica`Private`pl2 = ListPlot[
              Map[Transpose[{
                 Log[10, 
                  Part[Fretica`Private`data, 1]], #}]& , 
               Part[Fretica`Private`data, 
                Span[2, All]]], 
              FilterRules[{Fretica`Private`opts}, 
               Options[ListPlot]], PlotRange -> All]; 
           Fretica`Private`output = 
            Show[Fretica`Private`pl1, Fretica`Private`pl2]; Null]; 
         Fretica`Private`output], Fretica`F2fFCSGetModel[
         Pattern[Fretica`Private`lagtimes, {
           Repeated[
            PatternTest[
             Blank[], NumberQ]]}], 
         Pattern[Fretica`Private`diffs, {
           Repeated[{
             PatternTest[
              Blank[], NumberQ], {
              PatternTest[
               Blank[], NumberQ], 
              PatternTest[
               Blank[], NumberQ]}}]}], 
         Pattern[Fretica`Private`velocities, {
           PatternTest[
            Pattern[Fretica`Private`vx, 
             Blank[]], Fretica`FRealNumberQ], 
           PatternTest[
            Pattern[Fretica`Private`vy, 
             Blank[]], Fretica`FRealNumberQ], 
           PatternTest[
            Pattern[Fretica`Private`vz, 
             Blank[]], Fretica`FRealNumberQ]}], 
         Pattern[Fretica`Private`kTs, {
           RepeatedNull[{
             PatternTest[
              Blank[], NumberQ], {
              PatternTest[
               Blank[], NumberQ], 
              PatternTest[
               Blank[], NumberQ], 
              PatternTest[
               Blank[], NumberQ], 
              PatternTest[
               Blank[], NumberQ]}}]}], 
         Pattern[Fretica`Private`offsets, {
           PatternTest[
            Blank[], NumberQ], 
           PatternTest[
            Blank[], NumberQ], 
           PatternTest[
            Blank[], NumberQ], 
           PatternTest[
            Blank[], NumberQ]}], 
         PatternTest[
          Pattern[Fretica`Private`w0, 
           Blank[]], NumberQ], 
         PatternTest[
          Pattern[Fretica`Private`R0, 
           Blank[]], NumberQ], 
         PatternTest[
          Pattern[Fretica`Private`nrefractive, 
           Blank[]], NumberQ], 
         Pattern[Fretica`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{Fretica`Private`vecdat, Fretica`Private`coeff, 
          Fretica`Private`output}, 
         Fretica`Private`F2focusFCSInit[{
           OptionValue[Fretica`F2fFCSLambdaex]/Fretica`Private`nrefractive, 
            OptionValue[Fretica`F2fFCSLambdaem]/Fretica`Private`nrefractive, 
            OptionValue[Fretica`F2fFCSfocidistance], 
            OptionValue[Fretica`F2fFCSpinhole], 
            OptionValue[Fretica`F2fFCSmagnification]}]; 
         Fretica`Private`vecdat = 
          Fretica`Private`FP2fFCSModelVectors[Fretica`Private`lagtimes, 
            Part[Fretica`Private`diffs, All, 1], 
            Part[Fretica`Private`kTs, All, 1], Fretica`Private`w0, 
            Fretica`Private`R0, 
            N[Fretica`Private`vx], 
            N[Fretica`Private`vy], 
            N[Fretica`Private`vz]]; Fretica`Private`coeff = Map[{
             Part[#, 1], 
             Part[#, 2], 
             Sqrt[Part[#, 1] Part[#, 2]], 
             Sqrt[Part[#, 1] Part[#, 2]]}& , 
            Part[Fretica`Private`diffs, All, 2]]; 
         Fretica`Private`coeff = Transpose[
            Join[Fretica`Private`coeff, 
             Part[Fretica`Private`kTs, All, 2], {Fretica`Private`offsets}]]; 
         Fretica`Private`output = MapThread[Transpose[{
              Log[10, Fretica`Private`lagtimes], 
              Total[Transpose[#] #2]}]& , {
            Fretica`Private`vecdat, Fretica`Private`coeff}]; 
         If[OptionValue[Fretica`FOutput] === Fretica`FGraph, 
           Fretica`Private`output = ListPlot[Fretica`Private`output, 
              FilterRules[{Fretica`Private`opts}, 
               Options[ListPlot]], Joined -> True, PlotRange -> All, Frame -> 
              True, Axes -> False, 
              FrameLabel -> {"log(\[Tau]/ms)", "G(\[Tau])"}, 
              LabelStyle -> {
               FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> Bold},
               PlotStyle -> AbsoluteThickness[2]]; Null]; 
         Fretica`Private`output], Fretica`F2fFCSGetModel[
         Pattern[Fretica`Private`data, {
           Repeated[{
             Repeated[
              PatternTest[
               Blank[], NumberQ]]}, 5]}], 
         Pattern[Fretica`Private`diffs, {
           Repeated[{
             PatternTest[
              Blank[], NumberQ], {
              PatternTest[
               Blank[], NumberQ], 
              PatternTest[
               Blank[], NumberQ]}}]}], 
         Pattern[Fretica`Private`velocities, {
           PatternTest[
            Blank[], NumberQ], 
           PatternTest[
            Blank[], NumberQ], 
           PatternTest[
            Blank[], NumberQ]}], 
         Pattern[Fretica`Private`kTs, {
           RepeatedNull[{
             PatternTest[
              Blank[], NumberQ], {
              PatternTest[
               Blank[], NumberQ], 
              PatternTest[
               Blank[], NumberQ], 
              PatternTest[
               Blank[], NumberQ], 
              PatternTest[
               Blank[], NumberQ]}}]}], 
         Pattern[Fretica`Private`offsets, {
           PatternTest[
            Blank[], NumberQ], 
           PatternTest[
            Blank[], NumberQ], 
           PatternTest[
            Blank[], NumberQ], 
           PatternTest[
            Blank[], NumberQ]}], 
         PatternTest[
          Pattern[Fretica`Private`w0, 
           Blank[]], NumberQ], 
         PatternTest[
          Pattern[Fretica`Private`R0, 
           Blank[]], NumberQ], 
         PatternTest[
          Pattern[Fretica`Private`nrefractive, 
           Blank[]], NumberQ], 
         Pattern[Fretica`Private`opts, 
          OptionsPattern[]]] :> Fretica`F2fFCSGetModel[
         Part[Fretica`Private`data, 1], Fretica`Private`diffs, 
         Fretica`Private`velocities, Fretica`Private`kTs, 
         Fretica`Private`offsets, Fretica`Private`w0, Fretica`Private`R0, 
         Fretica`Private`nrefractive, Fretica`Private`opts], 
       Fretica`F2fFCSGetModel[
         Pattern[Fretica`Private`data, {
           Repeated[{
             Repeated[{
               PatternTest[
                Blank[], NumberQ], 
               PatternTest[
                Blank[], NumberQ]}]}, 4]}], 
         Pattern[Fretica`Private`var, 
          BlankSequence[]]] :> 
       Module[{Fretica`Private`dat5}, Fretica`Private`dat5 = Join[{
             Part[Fretica`Private`data, 1, All, 1]}, 
            Part[Fretica`Private`data, All, All, 2]]; 
         Fretica`F2fFCSGetModel[Fretica`Private`dat5, Fretica`Private`var]]}],
     "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, 
    "Options" -> {
     Fretica`FOutput -> Fretica`FGraph, Fretica`F2fFCSLambdaex -> 0.485, 
      Fretica`F2fFCSLambdaem -> 0.515, Fretica`F2fFCSfocidistance -> 0.44, 
      Fretica`F2fFCSpinhole -> 150., Fretica`F2fFCSmagnification -> 60, 
      AlignmentPoint -> Center, AspectRatio -> GoldenRatio^(-1), Axes -> 
      Automatic, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, 
      Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, 
      ClippingStyle -> None, ColorFunction -> Automatic, ColorFunctionScaling -> 
      True, ColorOutput -> Automatic, ContentSelectable -> Automatic, 
      CoordinatesToolOptions -> Automatic, DataRange -> Automatic, 
      DisplayFunction :> $DisplayFunction, Epilog -> {}, Filling -> None, 
      FillingStyle -> Automatic, FormatType :> TraditionalForm, Frame -> 
      Automatic, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> 
      Automatic, FrameTicksStyle -> {}, GridLines -> None, 
      GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, 
      ImageSize -> Automatic, ImageSizeRaw -> Automatic, InterpolationOrder -> 
      None, IntervalMarkers -> Automatic, IntervalMarkersStyle -> Automatic, 
      Joined -> False, LabelingFunction -> Automatic, LabelingSize -> 
      Automatic, LabelStyle -> {}, MaxPlotPoints -> DirectedInfinity[1], Mesh -> 
      None, MeshFunctions -> {#& }, MeshShading -> None, MeshStyle -> 
      Automatic, Method -> Automatic, MultiaxisArrangement -> None, 
      PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, PlotLabels -> 
      None, PlotLayout -> "Overlaid", PlotLegends -> None, PlotMarkers -> 
      None, PlotRange -> Automatic, PlotRangeClipping -> True, 
      PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotStyle -> 
      Automatic, PlotTheme :> $PlotTheme, PreserveImageOptions -> Automatic, 
      Prolog -> {}, RotateLabel -> True, ScalingFunctions -> None, 
      TargetUnits -> Automatic, Ticks -> Automatic, TicksStyle -> {}}, 
    "Attributes" -> {}, "FullName" -> "Fretica`F2fFCSGetModel"|>, 
   False]]], "Output",
 CellLabel->"Out[494]=",
 CellID->184069178,ExpressionUUID->"8f8f3c74-3210-470f-9028-2f8fa5a89257"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"F2fFCSFit[ fcsdata, \
\\!\\(\\*FormBox[\\({\\*SubscriptBox[\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \
\\\"1\\\"], \\*SubscriptBox[\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \\\"2\\\"] \
... }, {\\*SubscriptBox[\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \\nStyleBox[\\\"x\
\\\", \\\"TI\\\"]], \\*SubscriptBox[\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \
\\nStyleBox[\\\"y\\\", \\\"TI\\\"]], \\*SubscriptBox[\\nStyleBox[\\\"v\\\", \
\\\"TI\\\"], \\nStyleBox[\\\"z\\\", \\\"TI\\\"]]}, \
{\\*SubscriptBox[\\nStyleBox[\\\"k\\\", \\\"TI\\\"], \\\"1\\\"], \
\\*SubscriptBox[\\nStyleBox[\\\"k\\\", \\\"TI\\\"], \\\"2\\\"],  ... }, \
\\*SubscriptBox[\\nStyleBox[\\\"w\\\", \\\"TI\\\"], \\\"0\\\"], \
\\*SubscriptBox[\\nStyleBox[\\\"R\\\", \\\"TI\\\"], \\\"0\\\"], \
\\*\\nStyleBox[\\\"n\\\", \\\"TI\\\"]\\),\\nTraditionalForm]\\),guess] \
\\nfits the four 2fFCS curves in fcsdata with the model for a mixture of \
particles with diffusion coefficients \
\\!\\(\\*FormBox[\\({\\*SubscriptBox[\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \
\\\"1\\\"], \\*SubscriptBox[\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \\\"2\\\"] \
... }\\),\\nTraditionalForm]\\) (given in \
\\!\\(\\*FormBox[\\(\[Mu]\\),\\nTraditionalForm]\\)m\\!\\(\\*FormBox[\
SuperscriptBox[\\(\[Null]\\), \\(2\\)],\\nTraditionalForm]\\)/ms) in a fluid \
with flow velocity \
\\!\\(\\*FormBox[\\({\\*SubscriptBox[\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \
\\nStyleBox[\\\"x\\\", \\\"TI\\\"]], \\*SubscriptBox[\\nStyleBox[\\\"v\\\", \
\\\"TI\\\"], \\nStyleBox[\\\"y\\\", \\\"TI\\\"]], \
\\*SubscriptBox[\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \\nStyleBox[\\\"z\\\", \\\
\"TI\\\"]]}\\),\\nTraditionalForm]\\) in \
\\!\\(\\*FormBox[\\(\[Mu]\\),\\nTraditionalForm]\\)m/ms. \\nThe \
inter\[Hyphen]focus vector is expected to be aligned along the \
x\[Hyphen]axis. \\!\\(\\*FormBox[\\({\\*SubscriptBox[\\nStyleBox[\\\"k\\\", \
\\\"TI\\\"], \\\"1\\\"], \\*SubscriptBox[\\nStyleBox[\\\"k\\\", \\\"TI\\\"], \
\\\"2\\\"],  ... }\\),\\nTraditionalForm]\\) are rates (in units of 1/ms) for \
describing additional correlation components (e.g. triplet blinking). \\nThe \
parameters \\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"w\\\", \\\"TI\\\"], \
\\\"0\\\"],\\nTraditionalForm]\\) and \
\\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"R\\\", \\\"TI\\\"], \\\"0\\\"],\
\\nTraditionalForm]\\) (in units of \
\\!\\(\\*FormBox[\\(\[Mu]\\),\\nTraditionalForm]\\)m) are related but not \
identical to the waist and Rayleigh length of the laser foci. \
\\!\\(\\*FormBox[\\nStyleBox[\\\"n\\\", \\\"TI\\\"],\\nTraditionalForm]\\) is \
the refractive index of the solution. \\nAll parameters must either be given \
as numbers or as symbolic expressions that evaluate to numbers when the fit \
parameters \\!\\(\\*FormBox[\\(\\*SubscriptBox[\\nStyleBox[\\\"p\\\", \
\\\"TI\\\"], \\\"1\\\"], \\*SubscriptBox[\\nStyleBox[\\\"p\\\", \\\"TI\\\"], \
\\\"2\\\"],  ... \\),\\nTraditionalForm]\\) are replaced by numbers. Guess \
values for these parameters are provided in the form \
guess\[LongEqual]\\!\\(\\*FormBox[\\({{\\*SubscriptBox[\\nStyleBox[\\\"p\\\", \
\\\"TI\\\"], \\\"1\\\"], \\*SubscriptBox[\\nStyleBox[\\\"g\\\", \\\"TI\\\"], \
\\\"1\\\"]}, {\\*SubscriptBox[\\nStyleBox[\\\"p\\\", \\\"TI\\\"], \\\"2\\\"], \
\\*SubscriptBox[\\nStyleBox[\\\"g\\\", \\\"TI\\\"], \\\"2\\\"]},  ... \
}\\),\\nTraditionalForm]\\), where \\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\
\\\"g\\\", \\\"TI\\\"], \\nStyleBox[\\\"i\\\", \
\\\"TI\\\"]],\\nTraditionalForm]\\) are initial guess values used for the \
least\[Hyphen]square minimization.\\nThe function returns a list with the \
minimal \\!\\(\\*FormBox[SuperscriptBox[\\(\[Chi]\\), \
\\(2\\)],\\nTraditionalForm]\\) found, the best\[Hyphen]fit parameters, and a \
graph of the fcs data and the fits. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"F2fFCSFit", "[", 
                    RowBox[{
                    RowBox[{"Fretica`Private`data", ":", 
                    RowBox[{"{", 
                    RowBox[{"Repeated", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumberQ"}], ".."}], "}"}], ",", "5"}], 
                    "]"}], "}"}]}], ",", "Fretica`Private`diffs_List", ",", 
                    RowBox[{"Fretica`Private`velocities", ":", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", "_"}], "}"}]}], ",", 
                    "Fretica`Private`kTs_List", ",", "Fretica`Private`w0_", 
                    ",", "Fretica`Private`R0_", ",", 
                    "Fretica`Private`nrefractive_", ",", 
                    RowBox[{"Fretica`Private`guess", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"_", "?", "NumberQ"}]}], "}"}], ".."}], "}"}]}], 
                    ",", 
                    RowBox[{"Fretica`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`gdata", ",", "Fretica`Private`f",
                     ",", "Fretica`Private`R", ",", 
                    "Fretica`Private`objectiveFunction", ",", 
                    "Fretica`Private`params", ",", 
                    "Fretica`Private`fitresult", ",", 
                    "Fretica`Private`output"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Fretica`Private`F2focusFCSInit", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"OptionValue", "[", "F2fFCSLambdaex", "]"}], 
                    "Fretica`Private`nrefractive"], ",", 
                    FractionBox[
                    RowBox[{"OptionValue", "[", "F2fFCSLambdaem", "]"}], 
                    "Fretica`Private`nrefractive"], ",", 
                    RowBox[{"OptionValue", "[", "F2fFCSfocidistance", "]"}], 
                    ",", 
                    RowBox[{"OptionValue", "[", "F2fFCSpinhole", "]"}], ",", 
                    
                    RowBox[{"OptionValue", "[", "F2fFCSmagnification", 
                    "]"}]}], "}"}], "]"}], ";", 
                    
                    RowBox[{"Fretica`Private`F2focusFCSSetData", "[", 
                    "Fretica`Private`data", "]"}], ";", 
                    RowBox[{"Fretica`Private`gdata", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Fretica`Private`data", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;", "All"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], ";", 
                    RowBox[{"Fretica`Private`params", "=", 
                    RowBox[{"Fretica`Private`guess", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{
                    RowBox[{"Fretica`Private`f", "[", 
                    RowBox[{"Fretica`Private`var", ":", 
                    RowBox[{"{", 
                    RowBox[{"___", "?", "NumberQ"}], "}"}]}], "]"}], ":=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Fretica`Private`F2focusFCSModel", "[", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Abs", "[", "Fretica`Private`diffs", "]"}], ",", 
                    RowBox[{"Abs", "[", "Fretica`Private`kTs", "]"}], ",", 
                    RowBox[{"Abs", "[", "Fretica`Private`w0", "]"}], ",", 
                    RowBox[{"Abs", "[", "Fretica`Private`R0", "]"}], ",", 
                    "Fretica`Private`velocities"}], "}"}], "/.", 
                    "\[VeryThinSpace]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Rule", "@@", "#1"}], "&"}], ")"}], "/@", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`params", ",", 
                    "Fretica`Private`var"}], "}"}], "]"}]}]}], ")"}]}], "]"}],
                     "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Fretica`Private`R", "[", 
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`vars___", "?", "NumericQ"}], 
                    "}"}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"Fretica`Private`f", "[", 
                    RowBox[{"{", "Fretica`Private`vars", "}"}], "]"}], "-", 
                    "Fretica`Private`gdata"}]}], ";", 
                    RowBox[{
                    RowBox[{"Fretica`Private`objectiveFunction", "[", 
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`params___", "?", "NumericQ"}], 
                    "}"}], "]"}], ":=", 
                    RowBox[{"Norm", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Fretica`Private`f", "[", 
                    RowBox[{"{", "Fretica`Private`params", "}"}], "]"}], "-", 
                    "Fretica`Private`gdata"}], ",", "2"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"OptionValue", "[", "FConstraints", "]"}], "=!=", 
                    "None"}], ",", 
                    RowBox[{"Fretica`Private`fitresult", "=", 
                    RowBox[{"FindMinimum", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"Fretica`Private`objectiveFunction", "[", 
                    "Fretica`Private`params", "]"}], ",", 
                    RowBox[{"OptionValue", "[", "FConstraints", "]"}]}], 
                    "}"}], ",", "Fretica`Private`guess", ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "Fretica`Private`opts", "}"}], ",", 
                    RowBox[{"Options", "[", "FindMinimum", "]"}]}], "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"Options", "[", "F2fFCSFit", "]"}], ",", 
                    RowBox[{"Options", "[", "FindMinimum", "]"}]}], "]"}]}], 
                    "]"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Fretica`Private`fitresult", "=", 
                    RowBox[{"FindMinimum", "[", 
                    RowBox[{
                    
                    RowBox[{"Fretica`Private`objectiveFunction", "[", 
                    "Fretica`Private`params", "]"}], ",", 
                    "Fretica`Private`guess", ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "Fretica`Private`opts", "}"}], ",", 
                    RowBox[{"Options", "[", "FindMinimum", "]"}]}], "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"Method", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"LevenbergMarquardt\"", ",", 
                    RowBox[{"\"Residual\"", "\[Rule]", 
                    
                    RowBox[{"Fretica`Private`R", "[", 
                    "Fretica`Private`params", "]"}]}]}], "}"}]}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"Options", "[", "F2fFCSFit", "]"}], ",", 
                    RowBox[{"Options", "[", "FindMinimum", "]"}]}], "]"}]}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{
                    
                    RowBox[{"Fretica`Private`fitresult", 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    "*=", "2.`"}], ";"}]}], "]"}], ";", 
                    RowBox[{"Fretica`Private`output", "=", 
                    RowBox[{
                    RowBox[{"F2fFCSGetModel", "[", 
                    RowBox[{"Fretica`Private`data", ",", 
                    RowBox[{"Abs", "[", "Fretica`Private`diffs", "]"}], ",", 
                    "Fretica`Private`velocities", ",", 
                    RowBox[{"Abs", "[", "Fretica`Private`kTs", "]"}], ",", 
                    RowBox[{"Abs", "[", "Fretica`Private`w0", "]"}], ",", 
                    RowBox[{"Abs", "[", "Fretica`Private`R0", "]"}], ",", 
                    "Fretica`Private`nrefractive", ",", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "Fretica`Private`opts", "}"}], ",", 
                    RowBox[{"Options", "[", "F2fFCSGetModel", "]"}]}], 
                    "]"}]}], "]"}], "/.", "\[VeryThinSpace]", 
                    
                    RowBox[{"Fretica`Private`fitresult", 
                    "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"Fretica`Private`fitresult", 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    ",", 
                    
                    RowBox[{"Fretica`Private`fitresult", 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                    ",", "Fretica`Private`output"}], "}"}]}]}], "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{"F2fFCSFit", "[", 
                    RowBox[{
                    RowBox[{"Fretica`Private`data", ":", 
                    RowBox[{"{", 
                    RowBox[{"Repeated", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"_", "?", "NumberQ"}]}], "}"}], ".."}], "}"}], 
                    ",", "4"}], "]"}], "}"}]}], ",", 
                    "Fretica`Private`diffs_List", ",", 
                    RowBox[{"Fretica`Private`velocities", ":", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", "_"}], "}"}]}], ",", 
                    "Fretica`Private`kTs_List", ",", "Fretica`Private`w0_", 
                    ",", "Fretica`Private`R0_", ",", 
                    "Fretica`Private`nrefractive_", ",", 
                    RowBox[{"Fretica`Private`guess", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"_", "?", "NumberQ"}]}], "}"}], ".."}], "}"}]}], 
                    ",", 
                    RowBox[{"Fretica`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "Fretica`Private`dat5", "}"}], ",", 
                    RowBox[{
                    RowBox[{"Fretica`Private`dat5", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`data", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "All", ",", "1"}], 
                    "\[RightDoubleBracket]"}], "}"}], ",", 
                    RowBox[{"Fretica`Private`data", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "All", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
                    RowBox[{"F2fFCSFit", "[", 
                    
                    RowBox[{"Fretica`Private`dat5", ",", 
                    "Fretica`Private`diffs", ",", 
                    "Fretica`Private`velocities", ",", "Fretica`Private`kTs", 
                    ",", "Fretica`Private`w0", ",", "Fretica`Private`R0", ",",
                     "Fretica`Private`nrefractive", ",", 
                    "Fretica`Private`guess", ",", "Fretica`Private`opts"}], 
                    "]"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"FConstraints", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PrecisionGoal", "\[Rule]", "5"}]},
                    {
                    RowBox[{"AccuracyGoal", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FOutput", "\[Rule]", "FGraph"}]},
                    {
                    RowBox[{"F2fFCSLambdaex", "\[Rule]", "0.485`"}]},
                    {
                    RowBox[{"F2fFCSLambdaem", "\[Rule]", "0.515`"}]},
                    {
                    RowBox[{"F2fFCSfocidistance", "\[Rule]", "0.44`"}]},
                    {
                    RowBox[{"F2fFCSpinhole", "\[Rule]", "150.`"}]},
                    {
                    RowBox[{"F2fFCSmagnification", "\[Rule]", "60"}]},
                    {
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
                    {
                    RowBox[{"AspectRatio", "\[Rule]", 
                    FractionBox["1", "GoldenRatio"]}]},
                    {
                    RowBox[{"Axes", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Background", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ClippingStyle", "\[Rule]", "None"}]},
                    {
                    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ColorOutput", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "CoordinatesToolOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"DataRange", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}]},
                    {
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Filling", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FillingStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "FormatType", "\[RuleDelayed]", "TraditionalForm"}]},
                    {
                    RowBox[{"Frame", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FrameLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FrameTicks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FrameTicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"GridLines", "\[Rule]", "None"}]},
                    {
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
                    {
                    RowBox[{"ImagePadding", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"InterpolationOrder", "\[Rule]", "None"}]},
                    {
                    RowBox[{"IntervalMarkers", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"IntervalMarkersStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Joined", "\[Rule]", "False"}]},
                    {
                    RowBox[{"LabelingFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelingSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"MaxPlotPoints", "\[Rule]", "\[Infinity]"}]},
                    {
                    RowBox[{"Mesh", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MeshFunctions", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"#1", "&"}], "}"}]}]},
                    {
                    RowBox[{"MeshShading", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MeshStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"MultiaxisArrangement", "\[Rule]", "None"}]},
                    {
                    RowBox[{
                    "PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}]},
                    {
                    RowBox[{"PlotLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLabels", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLayout", "\[Rule]", "\<\"Overlaid\"\>"}]},
                    {
                    RowBox[{"PlotLegends", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotMarkers", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotRange", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]},
                    {
                    RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}]},
                    {
                    RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Prolog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"RotateLabel", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ScalingFunctions", "\[Rule]", "None"}]},
                    {
                    RowBox[{"TargetUnits", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
                    {
                    RowBox[{"AspectRatio", "\[Rule]", 
                    FractionBox["1", "GoldenRatio"]}]},
                    {
                    RowBox[{"Axes", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Background", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ClippingStyle", "\[Rule]", "None"}]},
                    {
                    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ColorOutput", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "CoordinatesToolOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"DataRange", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}]},
                    {
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Filling", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FillingStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "FormatType", "\[RuleDelayed]", "TraditionalForm"}]},
                    {
                    RowBox[{"Frame", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FrameLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FrameTicks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FrameTicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"GridLines", "\[Rule]", "None"}]},
                    {
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
                    {
                    RowBox[{"ImagePadding", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"InterpolationOrder", "\[Rule]", "None"}]},
                    {
                    RowBox[{"IntervalMarkers", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"IntervalMarkersStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Joined", "\[Rule]", "False"}]},
                    {
                    RowBox[{"LabelingFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelingSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"MaxPlotPoints", "\[Rule]", "\[Infinity]"}]},
                    {
                    RowBox[{"Mesh", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MeshFunctions", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"#1", "&"}], "}"}]}]},
                    {
                    RowBox[{"MeshShading", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MeshStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"MultiaxisArrangement", "\[Rule]", "None"}]},
                    {
                    RowBox[{
                    "PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}]},
                    {
                    RowBox[{"PlotLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLabels", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLayout", "\[Rule]", "\<\"Overlaid\"\>"}]},
                    {
                    RowBox[{"PlotLegends", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotMarkers", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotRange", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]},
                    {
                    RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}]},
                    {
                    RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Prolog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"RotateLabel", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ScalingFunctions", "\[Rule]", "None"}]},
                    {
                    RowBox[{"TargetUnits", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"AccuracyGoal", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Compiled", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EvaluationMonitor", "\[Rule]", "None"}]},
                    {
                    RowBox[{"Gradient", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"MaxIterations", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}]},
                    {
                    RowBox[{"PrecisionGoal", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"StepMonitor", "\[Rule]", "None"}]},
                    {
                    RowBox[{
                    "WorkingPrecision", "\[Rule]", "MachinePrecision"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "149", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"FConstraints", "\[Rule]", "None"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "149", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`F2fFCSFit\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"F2fFCSFit[ fcsdata, \
\\!\\(\\*FormBox[\\({\\*SubscriptBox[\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \
\\\"1\\\"], \\*SubscriptBox[\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \\\"2\\\"] \
... }, {\\*SubscriptBox[\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \\nStyleBox[\\\"x\
\\\", \\\"TI\\\"]], \\*SubscriptBox[\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \
\\nStyleBox[\\\"y\\\", \\\"TI\\\"]], \\*SubscriptBox[\\nStyleBox[\\\"v\\\", \
\\\"TI\\\"], \\nStyleBox[\\\"z\\\", \\\"TI\\\"]]}, \
{\\*SubscriptBox[\\nStyleBox[\\\"k\\\", \\\"TI\\\"], \\\"1\\\"], \
\\*SubscriptBox[\\nStyleBox[\\\"k\\\", \\\"TI\\\"], \\\"2\\\"],  ... }, \
\\*SubscriptBox[\\nStyleBox[\\\"w\\\", \\\"TI\\\"], \\\"0\\\"], \
\\*SubscriptBox[\\nStyleBox[\\\"R\\\", \\\"TI\\\"], \\\"0\\\"], \
\\*\\nStyleBox[\\\"n\\\", \\\"TI\\\"]\\),\\nTraditionalForm]\\),guess] \
\\nfits the four 2fFCS curves in fcsdata with the model for a mixture of \
particles with diffusion coefficients \
\\!\\(\\*FormBox[\\({\\*SubscriptBox[\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \
\\\"1\\\"], \\*SubscriptBox[\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \\\"2\\\"] \
... }\\),\\nTraditionalForm]\\) (given in \
\\!\\(\\*FormBox[\\(\[Mu]\\),\\nTraditionalForm]\\)m\\!\\(\\*FormBox[\
SuperscriptBox[\\(\[Null]\\), \\(2\\)],\\nTraditionalForm]\\)/ms) in a fluid \
with flow velocity \
\\!\\(\\*FormBox[\\({\\*SubscriptBox[\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \
\\nStyleBox[\\\"x\\\", \\\"TI\\\"]], \\*SubscriptBox[\\nStyleBox[\\\"v\\\", \
\\\"TI\\\"], \\nStyleBox[\\\"y\\\", \\\"TI\\\"]], \
\\*SubscriptBox[\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \\nStyleBox[\\\"z\\\", \\\
\"TI\\\"]]}\\),\\nTraditionalForm]\\) in \
\\!\\(\\*FormBox[\\(\[Mu]\\),\\nTraditionalForm]\\)m/ms. \\nThe \
inter\[Hyphen]focus vector is expected to be aligned along the \
x\[Hyphen]axis. \\!\\(\\*FormBox[\\({\\*SubscriptBox[\\nStyleBox[\\\"k\\\", \
\\\"TI\\\"], \\\"1\\\"], \\*SubscriptBox[\\nStyleBox[\\\"k\\\", \\\"TI\\\"], \
\\\"2\\\"],  ... }\\),\\nTraditionalForm]\\) are rates (in units of 1/ms) for \
describing additional correlation components (e.g. triplet blinking). \\nThe \
parameters \\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"w\\\", \\\"TI\\\"], \
\\\"0\\\"],\\nTraditionalForm]\\) and \
\\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"R\\\", \\\"TI\\\"], \\\"0\\\"],\
\\nTraditionalForm]\\) (in units of \
\\!\\(\\*FormBox[\\(\[Mu]\\),\\nTraditionalForm]\\)m) are related but not \
identical to the waist and Rayleigh length of the laser foci. \
\\!\\(\\*FormBox[\\nStyleBox[\\\"n\\\", \\\"TI\\\"],\\nTraditionalForm]\\) is \
the refractive index of the solution. \\nAll parameters must either be given \
as numbers or as symbolic expressions that evaluate to numbers when the fit \
parameters \\!\\(\\*FormBox[\\(\\*SubscriptBox[\\nStyleBox[\\\"p\\\", \
\\\"TI\\\"], \\\"1\\\"], \\*SubscriptBox[\\nStyleBox[\\\"p\\\", \\\"TI\\\"], \
\\\"2\\\"],  ... \\),\\nTraditionalForm]\\) are replaced by numbers. Guess \
values for these parameters are provided in the form \
guess\[LongEqual]\\!\\(\\*FormBox[\\({{\\*SubscriptBox[\\nStyleBox[\\\"p\\\", \
\\\"TI\\\"], \\\"1\\\"], \\*SubscriptBox[\\nStyleBox[\\\"g\\\", \\\"TI\\\"], \
\\\"1\\\"]}, {\\*SubscriptBox[\\nStyleBox[\\\"p\\\", \\\"TI\\\"], \\\"2\\\"], \
\\*SubscriptBox[\\nStyleBox[\\\"g\\\", \\\"TI\\\"], \\\"2\\\"]},  ... \
}\\),\\nTraditionalForm]\\), where \\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\
\\\"g\\\", \\\"TI\\\"], \\nStyleBox[\\\"i\\\", \
\\\"TI\\\"]],\\nTraditionalForm]\\) are initial guess values used for the \
least\[Hyphen]square minimization.\\nThe function returns a list with the \
minimal \\!\\(\\*FormBox[SuperscriptBox[\\(\[Chi]\\), \
\\(2\\)],\\nTraditionalForm]\\) found, the best\[Hyphen]fit parameters, and a \
graph of the fcs data and the fits. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "F2fFCSFit[ fcsdata, \!\(\*FormBox[\({\*SubscriptBox[\nStyleBox[\"D\", \
\"TI\"], \"1\"], \*SubscriptBox[\nStyleBox[\"D\", \"TI\"], \"2\"] ... }, \
{\*SubscriptBox[\nStyleBox[\"v\", \"TI\"], \nStyleBox[\"x\", \"TI\"]], \
\*SubscriptBox[\nStyleBox[\"v\", \"TI\"], \nStyleBox[\"y\", \"TI\"]], \
\*SubscriptBox[\nStyleBox[\"v\", \"TI\"], \nStyleBox[\"z\", \"TI\"]]}, \
{\*SubscriptBox[\nStyleBox[\"k\", \"TI\"], \"1\"], \*SubscriptBox[\nStyleBox[\
\"k\", \"TI\"], \"2\"],  ... }, \*SubscriptBox[\nStyleBox[\"w\", \"TI\"], \"0\
\"], \*SubscriptBox[\nStyleBox[\"R\", \"TI\"], \"0\"], \*\nStyleBox[\"n\", \
\"TI\"]\),\nTraditionalForm]\),guess] \nfits the four 2fFCS curves in fcsdata \
with the model for a mixture of particles with diffusion coefficients \
\!\(\*FormBox[\({\*SubscriptBox[\nStyleBox[\"D\", \"TI\"], \"1\"], \
\*SubscriptBox[\nStyleBox[\"D\", \"TI\"], \"2\"] ... }\),\nTraditionalForm]\) \
(given in \!\(\*FormBox[\(\[Mu]\),\n\
TraditionalForm]\)m\!\(\*FormBox[SuperscriptBox[\(\[Null]\), \(2\)],\n\
TraditionalForm]\)/ms) in a fluid with flow velocity \
\!\(\*FormBox[\({\*SubscriptBox[\nStyleBox[\"v\", \"TI\"], \nStyleBox[\"x\", \
\"TI\"]], \*SubscriptBox[\nStyleBox[\"v\", \"TI\"], \nStyleBox[\"y\", \
\"TI\"]], \*SubscriptBox[\nStyleBox[\"v\", \"TI\"], \nStyleBox[\"z\", \
\"TI\"]]}\),\nTraditionalForm]\) in \!\(\*FormBox[\(\[Mu]\),\n\
TraditionalForm]\)m/ms. \nThe inter\[Hyphen]focus vector is expected to be \
aligned along the x\[Hyphen]axis. \!\(\*FormBox[\({\*SubscriptBox[\nStyleBox[\
\"k\", \"TI\"], \"1\"], \*SubscriptBox[\nStyleBox[\"k\", \"TI\"], \"2\"],  \
... }\),\nTraditionalForm]\) are rates (in units of 1/ms) for describing \
additional correlation components (e.g. triplet blinking). \nThe parameters \
\!\(\*FormBox[SubscriptBox[\nStyleBox[\"w\", \"TI\"], \"0\"],\n\
TraditionalForm]\) and \!\(\*FormBox[SubscriptBox[\nStyleBox[\"R\", \"TI\"], \
\"0\"],\nTraditionalForm]\) (in units of \!\(\*FormBox[\(\[Mu]\),\n\
TraditionalForm]\)m) are related but not identical to the waist and Rayleigh \
length of the laser foci. \!\(\*FormBox[\nStyleBox[\"n\", \"TI\"],\n\
TraditionalForm]\) is the refractive index of the solution. \nAll parameters \
must either be given as numbers or as symbolic expressions that evaluate to \
numbers when the fit parameters \!\(\*FormBox[\(\*SubscriptBox[\nStyleBox[\"p\
\", \"TI\"], \"1\"], \*SubscriptBox[\nStyleBox[\"p\", \"TI\"], \"2\"],  ... \
\),\nTraditionalForm]\) are replaced by numbers. Guess values for these \
parameters are provided in the form \
guess\[LongEqual]\!\(\*FormBox[\({{\*SubscriptBox[\nStyleBox[\"p\", \"TI\"], \
\"1\"], \*SubscriptBox[\nStyleBox[\"g\", \"TI\"], \"1\"]}, {\*SubscriptBox[\n\
StyleBox[\"p\", \"TI\"], \"2\"], \*SubscriptBox[\nStyleBox[\"g\", \"TI\"], \
\"2\"]},  ... }\),\nTraditionalForm]\), where \!\(\*FormBox[SubscriptBox[\n\
StyleBox[\"g\", \"TI\"], \nStyleBox[\"i\", \"TI\"]],\nTraditionalForm]\) are \
initial guess values used for the least\[Hyphen]square minimization.\nThe \
function returns a list with the minimal \
\!\(\*FormBox[SuperscriptBox[\(\[Chi]\), \(2\)],\nTraditionalForm]\) found, \
the best\[Hyphen]fit parameters, and a graph of the fcs data and the fits. ", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`F2fFCSFit, {Fretica`F2fFCSFit[
         Pattern[Fretica`Private`data, {
           Repeated[{
             Repeated[
              PatternTest[
               Blank[], NumberQ]]}, 5]}], 
         Pattern[Fretica`Private`diffs, 
          Blank[List]], 
         Pattern[Fretica`Private`velocities, {
           Blank[], 
           Blank[], 
           Blank[]}], 
         Pattern[Fretica`Private`kTs, 
          Blank[List]], 
         Pattern[Fretica`Private`w0, 
          Blank[]], 
         Pattern[Fretica`Private`R0, 
          Blank[]], 
         Pattern[Fretica`Private`nrefractive, 
          Blank[]], 
         Pattern[Fretica`Private`guess, {
           Repeated[{
             Blank[], 
             PatternTest[
              Blank[], NumberQ]}]}], 
         Pattern[Fretica`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{Fretica`Private`gdata, Fretica`Private`f, Fretica`Private`R, 
          Fretica`Private`objectiveFunction, Fretica`Private`params, 
          Fretica`Private`fitresult, Fretica`Private`output}, 
         Fretica`Private`F2focusFCSInit[{
           OptionValue[Fretica`F2fFCSLambdaex]/Fretica`Private`nrefractive, 
            OptionValue[Fretica`F2fFCSLambdaem]/Fretica`Private`nrefractive, 
            OptionValue[Fretica`F2fFCSfocidistance], 
            OptionValue[Fretica`F2fFCSpinhole], 
            OptionValue[Fretica`F2fFCSmagnification]}]; 
         Fretica`Private`F2focusFCSSetData[Fretica`Private`data]; 
         Fretica`Private`gdata = Flatten[
            Part[Fretica`Private`data, 
             Span[2, All]]]; 
         Fretica`Private`params = Part[Fretica`Private`guess, All, 1]; 
         Fretica`Private`f[
            Pattern[Fretica`Private`var, {
              PatternTest[
               BlankNullSequence[], NumberQ]}]] := Flatten[
            Fretica`Private`F2focusFCSModel[
             Apply[Sequence, 
              ReplaceAll[{
                Abs[Fretica`Private`diffs], 
                Abs[Fretica`Private`kTs], 
                Abs[Fretica`Private`w0], 
                Abs[Fretica`Private`R0], Fretica`Private`velocities}, 
               Map[Apply[Rule, #]& , 
                Transpose[{Fretica`Private`params, Fretica`Private`var}]]]]]]; 
         Fretica`Private`R[{
             PatternTest[
              Pattern[Fretica`Private`vars, 
               BlankNullSequence[]], NumericQ]}] := 
          Fretica`Private`f[{Fretica`Private`vars}] - Fretica`Private`gdata; 
         Fretica`Private`objectiveFunction[{
             PatternTest[
              Pattern[Fretica`Private`params, 
               BlankNullSequence[]], NumericQ]}] := 
          Norm[Fretica`Private`f[{Fretica`Private`params}] - 
            Fretica`Private`gdata, 2]; 
         If[OptionValue[Fretica`FConstraints] =!= None, 
           Fretica`Private`fitresult = FindMinimum[{
              Fretica`Private`objectiveFunction[Fretica`Private`params], 
              OptionValue[Fretica`FConstraints]}, Fretica`Private`guess, 
             Evaluate[
              Apply[Sequence, 
               FilterRules[{Fretica`Private`opts}, 
                Options[FindMinimum]]]], 
             Evaluate[
              Apply[Sequence, 
               FilterRules[
                Options[Fretica`F2fFCSFit], 
                Options[FindMinimum]]]]], 
           Fretica`Private`fitresult = FindMinimum[
              Fretica`Private`objectiveFunction[Fretica`Private`params], 
              Fretica`Private`guess, 
              Evaluate[
               Apply[Sequence, 
                FilterRules[{Fretica`Private`opts}, 
                 Options[FindMinimum]]]], 
              Method -> {
               "LevenbergMarquardt", "Residual" -> 
                Fretica`Private`R[Fretica`Private`params]}, 
              Evaluate[
               Apply[Sequence, 
                FilterRules[
                 Options[Fretica`F2fFCSFit], 
                 Options[FindMinimum]]]]]; TimesBy[
             Part[Fretica`Private`fitresult, 1], 2.]; Null]; 
         Fretica`Private`output = ReplaceAll[
            Fretica`F2fFCSGetModel[Fretica`Private`data, 
             Abs[Fretica`Private`diffs], Fretica`Private`velocities, 
             Abs[Fretica`Private`kTs], 
             Abs[Fretica`Private`w0], 
             Abs[Fretica`Private`R0], Fretica`Private`nrefractive, 
             FilterRules[{Fretica`Private`opts}, 
              Options[Fretica`F2fFCSGetModel]]], 
            Part[Fretica`Private`fitresult, 2]]; {
           Part[Fretica`Private`fitresult, 1], 
           Part[Fretica`Private`fitresult, 2], Fretica`Private`output}], 
       Fretica`F2fFCSFit[
         Pattern[Fretica`Private`data, {
           Repeated[{
             Repeated[{
               PatternTest[
                Blank[], NumberQ], 
               PatternTest[
                Blank[], NumberQ]}]}, 4]}], 
         Pattern[Fretica`Private`diffs, 
          Blank[List]], 
         Pattern[Fretica`Private`velocities, {
           Blank[], 
           Blank[], 
           Blank[]}], 
         Pattern[Fretica`Private`kTs, 
          Blank[List]], 
         Pattern[Fretica`Private`w0, 
          Blank[]], 
         Pattern[Fretica`Private`R0, 
          Blank[]], 
         Pattern[Fretica`Private`nrefractive, 
          Blank[]], 
         Pattern[Fretica`Private`guess, {
           Repeated[{
             Blank[], 
             PatternTest[
              Blank[], NumberQ]}]}], 
         Pattern[Fretica`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{Fretica`Private`dat5}, Fretica`Private`dat5 = Join[{
             Part[Fretica`Private`data, 1, All, 1]}, 
            Part[Fretica`Private`data, All, All, 2]]; 
         Fretica`F2fFCSFit[
          Fretica`Private`dat5, Fretica`Private`diffs, 
           Fretica`Private`velocities, Fretica`Private`kTs, 
           Fretica`Private`w0, Fretica`Private`R0, 
           Fretica`Private`nrefractive, Fretica`Private`guess, 
           Fretica`Private`opts]]}], "SubValues" -> None, "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     Fretica`FConstraints -> None, PrecisionGoal -> 5, AccuracyGoal -> 
      Automatic, Fretica`FOutput -> Fretica`FGraph, Fretica`F2fFCSLambdaex -> 
      0.485, Fretica`F2fFCSLambdaem -> 0.515, Fretica`F2fFCSfocidistance -> 
      0.44, Fretica`F2fFCSpinhole -> 150., Fretica`F2fFCSmagnification -> 60, 
      AlignmentPoint -> Center, AspectRatio -> GoldenRatio^(-1), Axes -> 
      Automatic, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, 
      Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, 
      ClippingStyle -> None, ColorFunction -> Automatic, ColorFunctionScaling -> 
      True, ColorOutput -> Automatic, ContentSelectable -> Automatic, 
      CoordinatesToolOptions -> Automatic, DataRange -> Automatic, 
      DisplayFunction :> $DisplayFunction, Epilog -> {}, Filling -> None, 
      FillingStyle -> Automatic, FormatType :> TraditionalForm, Frame -> 
      Automatic, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> 
      Automatic, FrameTicksStyle -> {}, GridLines -> None, 
      GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, 
      ImageSize -> Automatic, ImageSizeRaw -> Automatic, InterpolationOrder -> 
      None, IntervalMarkers -> Automatic, IntervalMarkersStyle -> Automatic, 
      Joined -> False, LabelingFunction -> Automatic, LabelingSize -> 
      Automatic, LabelStyle -> {}, MaxPlotPoints -> DirectedInfinity[1], Mesh -> 
      None, MeshFunctions -> {#& }, MeshShading -> None, MeshStyle -> 
      Automatic, Method -> Automatic, MultiaxisArrangement -> None, 
      PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, PlotLabels -> 
      None, PlotLayout -> "Overlaid", PlotLegends -> None, PlotMarkers -> 
      None, PlotRange -> Automatic, PlotRangeClipping -> True, 
      PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotStyle -> 
      Automatic, PlotTheme :> $PlotTheme, PreserveImageOptions -> Automatic, 
      Prolog -> {}, RotateLabel -> True, ScalingFunctions -> None, 
      TargetUnits -> Automatic, Ticks -> Automatic, TicksStyle -> {}, 
      AlignmentPoint -> Center, AspectRatio -> GoldenRatio^(-1), Axes -> 
      Automatic, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, 
      Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, 
      ClippingStyle -> None, ColorFunction -> Automatic, ColorFunctionScaling -> 
      True, ColorOutput -> Automatic, ContentSelectable -> Automatic, 
      CoordinatesToolOptions -> Automatic, DataRange -> Automatic, 
      DisplayFunction :> $DisplayFunction, Epilog -> {}, Filling -> None, 
      FillingStyle -> Automatic, FormatType :> TraditionalForm, Frame -> 
      Automatic, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> 
      Automatic, FrameTicksStyle -> {}, GridLines -> None, 
      GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, 
      ImageSize -> Automatic, ImageSizeRaw -> Automatic, InterpolationOrder -> 
      None, IntervalMarkers -> Automatic, IntervalMarkersStyle -> Automatic, 
      Joined -> False, LabelingFunction -> Automatic, LabelingSize -> 
      Automatic, LabelStyle -> {}, MaxPlotPoints -> DirectedInfinity[1], Mesh -> 
      None, MeshFunctions -> {#& }, MeshShading -> None, MeshStyle -> 
      Automatic, Method -> Automatic, MultiaxisArrangement -> None, 
      PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, PlotLabels -> 
      None, PlotLayout -> "Overlaid", PlotLegends -> None, PlotMarkers -> 
      None, PlotRange -> Automatic, PlotRangeClipping -> True, 
      PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotStyle -> 
      Automatic, PlotTheme :> $PlotTheme, PreserveImageOptions -> Automatic, 
      Prolog -> {}, RotateLabel -> True, ScalingFunctions -> None, 
      TargetUnits -> Automatic, Ticks -> Automatic, TicksStyle -> {}, 
      AccuracyGoal -> Automatic, Compiled -> Automatic, EvaluationMonitor -> 
      None, Gradient -> Automatic, MaxIterations -> Automatic, Method -> 
      Automatic, PerformanceGoal :> $PerformanceGoal, PrecisionGoal -> 
      Automatic, StepMonitor -> None, WorkingPrecision -> MachinePrecision}, 
    "Attributes" -> {}, "FullName" -> "Fretica`F2fFCSFit"|>, 
   False]]], "Output",
 CellLabel->"Out[495]=",
 CellID->262126843,ExpressionUUID->"0f3e27d3-6215-4496-ba82-266c4c28d996"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"F2fFCSGetLinearCoefficients[ fcsdata, \
\\!\\(\\*FormBox[\\({\\*SubscriptBox[\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \
\\\"1\\\"], \\*SubscriptBox[\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \\\"2\\\"] \
... }, {\\*SubscriptBox[\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \\nStyleBox[\\\"x\
\\\", \\\"TI\\\"]], \\*SubscriptBox[\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \
\\nStyleBox[\\\"y\\\", \\\"TI\\\"]], \\*SubscriptBox[\\nStyleBox[\\\"v\\\", \
\\\"TI\\\"], \\nStyleBox[\\\"z\\\", \\\"TI\\\"]]}, \
{\\*SubscriptBox[\\nStyleBox[\\\"k\\\", \\\"TI\\\"], \\\"1\\\"], \
\\*SubscriptBox[\\nStyleBox[\\\"k\\\", \\\"TI\\\"], \\\"2\\\"],  ... }, \
\\*SubscriptBox[\\nStyleBox[\\\"w\\\", \\\"TI\\\"], \\\"0\\\"], \
\\*SubscriptBox[\\nStyleBox[\\\"R\\\", \\\"TI\\\"], \\\"0\\\"], \
\\*\\nStyleBox[\\\"n\\\", \\\"TI\\\"]\\),\\nTraditionalForm]\\),guess] \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"F2fFCSGetLinearCoefficients", "[", 
                    RowBox[{
                    RowBox[{"Fretica`Private`data", ":", 
                    RowBox[{"{", 
                    RowBox[{"Repeated", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumberQ"}], ".."}], "}"}], ",", "5"}], 
                    "]"}], "}"}]}], ",", 
                    RowBox[{"Fretica`Private`diffs", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumberQ"}], ".."}], "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Fretica`Private`vx_", "?", "FRealNumberQ"}], ",", 
                    RowBox[{"Fretica`Private`vy_", "?", "FRealNumberQ"}], ",", 
                    RowBox[{"Fretica`Private`vz_", "?", "FRealNumberQ"}]}], 
                    "}"}], ",", 
                    RowBox[{"Fretica`Private`kTs", ":", 
                    RowBox[{"{", 
                    RowBox[{"___", "?", "NumberQ"}], "}"}]}], ",", 
                    "Fretica`Private`w0_", ",", "Fretica`Private`R0_", ",", 
                    RowBox[{"Fretica`Private`nrefractive_", "?", "NumberQ"}], 
                    ",", 
                    RowBox[{"Fretica`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{
                    RowBox[{"Fretica`Private`F2focusFCSInit", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"OptionValue", "[", "F2fFCSLambdaex", "]"}], 
                    "Fretica`Private`nrefractive"], ",", 
                    FractionBox[
                    RowBox[{"OptionValue", "[", "F2fFCSLambdaem", "]"}], 
                    "Fretica`Private`nrefractive"], ",", 
                    RowBox[{"OptionValue", "[", "F2fFCSfocidistance", "]"}], 
                    ",", 
                    RowBox[{"OptionValue", "[", "F2fFCSpinhole", "]"}], ",", 
                    
                    RowBox[{"OptionValue", "[", "F2fFCSmagnification", 
                    "]"}]}], "}"}], "]"}], ";", 
                    
                    RowBox[{"Fretica`Private`F2focusFCSSetData", "[", 
                    "Fretica`Private`data", "]"}], ";", 
                    RowBox[{"Fretica`Private`FP2fFCSLinearCoefficients", "[", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{"Abs", "[", "Fretica`Private`diffs", "]"}], "]"}],
                     ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"Abs", "[", "Fretica`Private`kTs", "]"}], "]"}], 
                    ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"Abs", "[", "Fretica`Private`w0", "]"}], "]"}], 
                    ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"Abs", "[", "Fretica`Private`R0", "]"}], "]"}], 
                    ",", 
                    RowBox[{"N", "[", "Fretica`Private`vx", "]"}], ",", 
                    RowBox[{"N", "[", "Fretica`Private`vy", "]"}], ",", 
                    RowBox[{"N", "[", "Fretica`Private`vz", "]"}]}], 
                    "]"}]}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"F2fFCSGetLinearCoefficients", "[", 
                    RowBox[{
                    RowBox[{"Fretica`Private`data", ":", 
                    RowBox[{"{", 
                    RowBox[{"Repeated", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"_", "?", "NumberQ"}]}], "}"}], ".."}], "}"}], 
                    ",", "4"}], "]"}], "}"}]}], ",", 
                    RowBox[{"Fretica`Private`diffs", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumberQ"}], ".."}], "}"}]}], ",", 
                    RowBox[{"Fretica`Private`velocities", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"_", "?", "NumberQ"}], ",", 
                    RowBox[{"_", "?", "NumberQ"}]}], "}"}]}], ",", 
                    RowBox[{"Fretica`Private`kTs", ":", 
                    RowBox[{"{", 
                    RowBox[{"___", "?", "NumberQ"}], "}"}]}], ",", 
                    "Fretica`Private`w0_", ",", "Fretica`Private`R0_", ",", 
                    RowBox[{"Fretica`Private`nrefractive_", "?", "NumberQ"}], 
                    ",", 
                    RowBox[{"Fretica`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "Fretica`Private`dat5", "}"}], ",", 
                    RowBox[{
                    RowBox[{"Fretica`Private`dat5", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`data", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "All", ",", "1"}], 
                    "\[RightDoubleBracket]"}], "}"}], ",", 
                    RowBox[{"Fretica`Private`data", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "All", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
                    RowBox[{"F2fFCSGetLinearCoefficients", "[", 
                    
                    RowBox[{"Fretica`Private`dat5", ",", 
                    "Fretica`Private`diffs", ",", 
                    "Fretica`Private`velocities", ",", "Fretica`Private`kTs", 
                    ",", "Fretica`Private`w0", ",", "Fretica`Private`R0", ",",
                     "Fretica`Private`nrefractive", ",", 
                    "Fretica`Private`opts"}], "]"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"F2fFCSLambdaex", "\[Rule]", "0.485`"}]},
                    {
                    RowBox[{"F2fFCSLambdaem", "\[Rule]", "0.515`"}]},
                    {
                    RowBox[{"F2fFCSfocidistance", "\[Rule]", "0.44`"}]},
                    {
                    RowBox[{"F2fFCSpinhole", "\[Rule]", "150.`"}]},
                    {
                    RowBox[{"F2fFCSmagnification", "\[Rule]", "60"}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "5", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"F2fFCSLambdaex", "\[Rule]", "0.485`"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "5", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`F2fFCSGetLinearCoefficients\"\
\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"F2fFCSGetLinearCoefficients[ fcsdata, \
\\!\\(\\*FormBox[\\({\\*SubscriptBox[\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \
\\\"1\\\"], \\*SubscriptBox[\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \\\"2\\\"] \
... }, {\\*SubscriptBox[\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \\nStyleBox[\\\"x\
\\\", \\\"TI\\\"]], \\*SubscriptBox[\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \
\\nStyleBox[\\\"y\\\", \\\"TI\\\"]], \\*SubscriptBox[\\nStyleBox[\\\"v\\\", \
\\\"TI\\\"], \\nStyleBox[\\\"z\\\", \\\"TI\\\"]]}, \
{\\*SubscriptBox[\\nStyleBox[\\\"k\\\", \\\"TI\\\"], \\\"1\\\"], \
\\*SubscriptBox[\\nStyleBox[\\\"k\\\", \\\"TI\\\"], \\\"2\\\"],  ... }, \
\\*SubscriptBox[\\nStyleBox[\\\"w\\\", \\\"TI\\\"], \\\"0\\\"], \
\\*SubscriptBox[\\nStyleBox[\\\"R\\\", \\\"TI\\\"], \\\"0\\\"], \
\\*\\nStyleBox[\\\"n\\\", \\\"TI\\\"]\\),\\nTraditionalForm]\\),guess] \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "F2fFCSGetLinearCoefficients[ fcsdata, \!\(\*FormBox[\({\*SubscriptBox[\n\
StyleBox[\"D\", \"TI\"], \"1\"], \*SubscriptBox[\nStyleBox[\"D\", \"TI\"], \
\"2\"] ... }, {\*SubscriptBox[\nStyleBox[\"v\", \"TI\"], \nStyleBox[\"x\", \
\"TI\"]], \*SubscriptBox[\nStyleBox[\"v\", \"TI\"], \nStyleBox[\"y\", \
\"TI\"]], \*SubscriptBox[\nStyleBox[\"v\", \"TI\"], \nStyleBox[\"z\", \
\"TI\"]]}, {\*SubscriptBox[\nStyleBox[\"k\", \"TI\"], \"1\"], \*SubscriptBox[\
\nStyleBox[\"k\", \"TI\"], \"2\"],  ... }, \*SubscriptBox[\nStyleBox[\"w\", \
\"TI\"], \"0\"], \*SubscriptBox[\nStyleBox[\"R\", \"TI\"], \"0\"], \*\n\
StyleBox[\"n\", \"TI\"]\),\nTraditionalForm]\),guess] ", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`F2fFCSGetLinearCoefficients, {
      Fretica`F2fFCSGetLinearCoefficients[
         Pattern[Fretica`Private`data, {
           Repeated[{
             Repeated[
              PatternTest[
               Blank[], NumberQ]]}, 5]}], 
         Pattern[Fretica`Private`diffs, {
           Repeated[
            PatternTest[
             Blank[], NumberQ]]}], {
          PatternTest[
           Pattern[Fretica`Private`vx, 
            Blank[]], Fretica`FRealNumberQ], 
          PatternTest[
           Pattern[Fretica`Private`vy, 
            Blank[]], Fretica`FRealNumberQ], 
          PatternTest[
           Pattern[Fretica`Private`vz, 
            Blank[]], Fretica`FRealNumberQ]}, 
         Pattern[Fretica`Private`kTs, {
           PatternTest[
            BlankNullSequence[], NumberQ]}], 
         Pattern[Fretica`Private`w0, 
          Blank[]], 
         Pattern[Fretica`Private`R0, 
          Blank[]], 
         PatternTest[
          Pattern[Fretica`Private`nrefractive, 
           Blank[]], NumberQ], 
         Pattern[Fretica`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{}, 
         Fretica`Private`F2focusFCSInit[{
           OptionValue[Fretica`F2fFCSLambdaex]/Fretica`Private`nrefractive, 
            OptionValue[Fretica`F2fFCSLambdaem]/Fretica`Private`nrefractive, 
            OptionValue[Fretica`F2fFCSfocidistance], 
            OptionValue[Fretica`F2fFCSpinhole], 
            OptionValue[Fretica`F2fFCSmagnification]}]; 
         Fretica`Private`F2focusFCSSetData[Fretica`Private`data]; 
         Fretica`Private`FP2fFCSLinearCoefficients[
           N[
            Abs[Fretica`Private`diffs]], 
           N[
            Abs[Fretica`Private`kTs]], 
           N[
            Abs[Fretica`Private`w0]], 
           N[
            Abs[Fretica`Private`R0]], 
           N[Fretica`Private`vx], 
           N[Fretica`Private`vy], 
           N[Fretica`Private`vz]]], Fretica`F2fFCSGetLinearCoefficients[
         Pattern[Fretica`Private`data, {
           Repeated[{
             Repeated[{
               PatternTest[
                Blank[], NumberQ], 
               PatternTest[
                Blank[], NumberQ]}]}, 4]}], 
         Pattern[Fretica`Private`diffs, {
           Repeated[
            PatternTest[
             Blank[], NumberQ]]}], 
         Pattern[Fretica`Private`velocities, {
           PatternTest[
            Blank[], NumberQ], 
           PatternTest[
            Blank[], NumberQ], 
           PatternTest[
            Blank[], NumberQ]}], 
         Pattern[Fretica`Private`kTs, {
           PatternTest[
            BlankNullSequence[], NumberQ]}], 
         Pattern[Fretica`Private`w0, 
          Blank[]], 
         Pattern[Fretica`Private`R0, 
          Blank[]], 
         PatternTest[
          Pattern[Fretica`Private`nrefractive, 
           Blank[]], NumberQ], 
         Pattern[Fretica`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{Fretica`Private`dat5}, Fretica`Private`dat5 = Join[{
             Part[Fretica`Private`data, 1, All, 1]}, 
            Part[Fretica`Private`data, All, All, 2]]; 
         Fretica`F2fFCSGetLinearCoefficients[
          Fretica`Private`dat5, Fretica`Private`diffs, 
           Fretica`Private`velocities, Fretica`Private`kTs, 
           Fretica`Private`w0, Fretica`Private`R0, 
           Fretica`Private`nrefractive, Fretica`Private`opts]]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     Fretica`F2fFCSLambdaex -> 0.485, Fretica`F2fFCSLambdaem -> 0.515, 
      Fretica`F2fFCSfocidistance -> 0.44, Fretica`F2fFCSpinhole -> 150., 
      Fretica`F2fFCSmagnification -> 60}, "Attributes" -> {}, "FullName" -> 
    "Fretica`F2fFCSGetLinearCoefficients"|>, False]]], "Output",
 CellLabel->"Out[496]=",
 CellID->527562754,ExpressionUUID->"bbdd2512-069a-400b-8115-20d7ec970d13"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"F2fFCSGlobalFit[ \
\\!\\(\\*FormBox[\\({{\\*SubscriptBox[\\(fcsdata\\), \\(1\\)], \
{\\*SubscriptBox[\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \\nRowBox[{\\\"1\\\", \\\
\",\\\", \\\"1\\\"}]], \\*SubscriptBox[\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \
\\nRowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\"}]] ... }, \
{\\*SubscriptBox[\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \
\\nRowBox[{\\nStyleBox[\\\"x\\\", \\\"TI\\\"], \\\"1\\\"}]], \\*SubscriptBox[\
\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\"1\\\"}]], \\*SubscriptBox[\\nStyleBox[\\\"v\\\", \
\\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"z\\\", \\\"TI\\\"], \\\"1\\\"}]]}, \
{\\*SubscriptBox[\\nStyleBox[\\\"k\\\", \\\"TI\\\"], \\nRowBox[{\\\"1\\\", \\\
\",\\\", \\\"1\\\"}]], \\*SubscriptBox[\\nStyleBox[\\\"k\\\", \\\"TI\\\"], \
\\nRowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\"}]],  ... }, \
\\*SubscriptBox[\\nStyleBox[\\\"w\\\", \\\"TI\\\"], \\nRowBox[{\\\"0\\\", \
\\\",\\\", \\\"1\\\"}]], \\*SubscriptBox[\\nStyleBox[\\\"R\\\", \\\"TI\\\"], \
\\nRowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}]], \\*SubscriptBox[\\nStyleBox[\\\
\"n\\\", \\\"TI\\\"], \\\"1\\\"]}\\),\\nTraditionalForm]\\), \
\\!\\(\\*FormBox[\\({\\*SubscriptBox[\\(fcsdata\\), \\(2\\)], \
{\\*SubscriptBox[\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \\nRowBox[{\\\"2\\\", \\\
\",\\\", \\\"1\\\"}]], \\*SubscriptBox[\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \
\\nRowBox[{\\\"2\\\", \\\",\\\", \\\"2\\\"}]] ... }, \
{\\*SubscriptBox[\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \
\\nRowBox[{\\nStyleBox[\\\"x\\\", \\\"TI\\\"], \\\"2\\\"}]], \\*SubscriptBox[\
\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\"2\\\"}]], \\*SubscriptBox[\\nStyleBox[\\\"v\\\", \
\\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"z\\\", \\\"TI\\\"], \\\"2\\\"}]]}, \
{\\*SubscriptBox[\\nStyleBox[\\\"k\\\", \\\"TI\\\"], \\nRowBox[{\\\"2\\\", \\\
\",\\\", \\\"1\\\"}]], \\*SubscriptBox[\\nStyleBox[\\\"k\\\", \\\"TI\\\"], \
\\nRowBox[{\\\"2\\\", \\\",\\\", \\\"2\\\"}]],  ... }, \
\\*SubscriptBox[\\nStyleBox[\\\"w\\\", \\\"TI\\\"], \\nRowBox[{\\\"0\\\", \
\\\",\\\", \\\"2\\\"}]], \\*SubscriptBox[\\nStyleBox[\\\"R\\\", \\\"TI\\\"], \
\\nRowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}]], \\*SubscriptBox[\\nStyleBox[\\\
\"n\\\", \\\"TI\\\"], \\\"2\\\"]} ... }, guess}\\),\\nTraditionalForm]\\). \
Give shared parameters the same name in each block, and non\[Hyphen]shared \
parameters individual names. For example, if \
\\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \
\\nStyleBox[\\\"x\\\", \\\"TI\\\"]],\\nTraditionalForm]\\) is supposed to be \
the same for all data sets, then replace \\!\\(\\*FormBox[\\(\\*SubscriptBox[\
\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\"1\\\"}]], \\*SubscriptBox[\\nStyleBox[\\\"v\\\", \
\\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"x\\\", \\\"TI\\\"], \\\"2\\\"}]] ... \
\\),\\nTraditionalForm]\\) by \\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"v\
\\\", \\\"TI\\\"], \\nStyleBox[\\\"x\\\", \\\"TI\\\"]],\\nTraditionalForm]\\) \
and include \\!\\(\\*FormBox[\\({\\*SubscriptBox[\\nStyleBox[\\\"v\\\", \
\\\"TI\\\"], \\nStyleBox[\\\"x\\\", \\\"TI\\\"]], \
\\*SubscriptBox[\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \
\\\"guess\\\"]}\\),\\nTraditionalForm]\\) in guess. \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"F2fFCSGlobalFit", "[", 
                    RowBox[{
                    RowBox[{"Fretica`Private`dataset", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Repeated", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ".."}], "}"}], ",", "5"}],
                     "]"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_List", ",", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", "_"}], "}"}], ",", "_List", 
                    ",", "_", ",", "_", ",", "_"}], "}"}]}], "}"}], ".."}], 
                    "}"}]}], ",", 
                    RowBox[{"Fretica`Private`guess", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"_", "?", "NumericQ"}]}], "}"}], ".."}], "}"}]}], 
                    ",", 
                    RowBox[{"Fretica`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`gdata", ",", "Fretica`Private`f",
                     ",", "Fretica`Private`R", ",", 
                    "Fretica`Private`objectiveFunction", ",", 
                    "Fretica`Private`params", ",", 
                    "Fretica`Private`fitresult", ",", 
                    "Fretica`Private`output"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Fretica`Private`gdata", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Fretica`Private`dataset", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1", ",", 
                    RowBox[{"2", ";;", "All"}]}], "\[RightDoubleBracket]"}], 
                    "]"}]}], ";", 
                    RowBox[{"Fretica`Private`params", "=", 
                    RowBox[{"Fretica`Private`guess", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{
                    RowBox[{"Fretica`Private`f", "[", 
                    RowBox[{"Fretica`Private`var", ":", 
                    RowBox[{"{", 
                    RowBox[{"___", "?", "NumericQ"}], "}"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`rules", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Rule", "@@", "#1"}], "&"}], ")"}], "/@", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`params", ",", 
                    "Fretica`Private`var"}], "}"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Fretica`Private`F2focusFCSInit", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"OptionValue", "[", "F2fFCSLambdaex", "]"}], 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]], ",", 
                    FractionBox[
                    RowBox[{"OptionValue", "[", "F2fFCSLambdaem", "]"}], 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}]], ",", 
                    RowBox[{"OptionValue", "[", "F2fFCSfocidistance", "]"}], 
                    ",", 
                    RowBox[{"OptionValue", "[", "F2fFCSpinhole", "]"}], ",", 
                    
                    RowBox[{"OptionValue", "[", "F2fFCSmagnification", 
                    "]"}]}], "}"}], "/.", "\[VeryThinSpace]", 
                    "Fretica`Private`rules"}], "]"}], ";", 
                    RowBox[{"Fretica`Private`F2focusFCSSetData", "[", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}], ";", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Fretica`Private`F2focusFCSModel", "[", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "]"}],
                     ",", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], "]"}],
                     ",", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}], "]"}],
                     ",", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "5"}], "\[RightDoubleBracket]"}], "]"}],
                     ",", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]}], 
                    "}"}], "/.", "\[VeryThinSpace]", 
                    "Fretica`Private`rules"}], ")"}]}], "]"}], "]"}]}], ")"}],
                     "&"}], ")"}], "/@", "Fretica`Private`dataset"}], "]"}]}],
                     "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Fretica`Private`R", "[", 
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`vars___", "?", "NumericQ"}], 
                    "}"}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"Fretica`Private`f", "[", 
                    RowBox[{"{", "Fretica`Private`vars", "}"}], "]"}], "-", 
                    "Fretica`Private`gdata"}]}], ";", 
                    RowBox[{
                    RowBox[{"Fretica`Private`objectiveFunction", "[", 
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`params___", "?", "NumericQ"}], 
                    "}"}], "]"}], ":=", 
                    RowBox[{"Norm", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Fretica`Private`f", "[", 
                    RowBox[{"{", "Fretica`Private`params", "}"}], "]"}], "-", 
                    "Fretica`Private`gdata"}], ",", "2"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"OptionValue", "[", "FConstraints", "]"}], "=!=", 
                    "None"}], ",", 
                    RowBox[{"Fretica`Private`fitresult", "=", 
                    RowBox[{"FindMinimum", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"Fretica`Private`objectiveFunction", "[", 
                    "Fretica`Private`params", "]"}], ",", 
                    RowBox[{"OptionValue", "[", "FConstraints", "]"}]}], 
                    "}"}], ",", "Fretica`Private`guess", ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "Fretica`Private`opts", "}"}], ",", 
                    RowBox[{"Options", "[", "FindMinimum", "]"}]}], "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"Options", "[", "F2fFCSGlobalFit", "]"}], ",", 
                    RowBox[{"Options", "[", "FindMinimum", "]"}]}], "]"}]}], 
                    "]"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Fretica`Private`fitresult", "=", 
                    RowBox[{"FindMinimum", "[", 
                    RowBox[{
                    
                    RowBox[{"Fretica`Private`objectiveFunction", "[", 
                    "Fretica`Private`params", "]"}], ",", 
                    "Fretica`Private`guess", ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "Fretica`Private`opts", "}"}], ",", 
                    RowBox[{"Options", "[", "FindMinimum", "]"}]}], "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"Method", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"LevenbergMarquardt\"", ",", 
                    RowBox[{"\"Residual\"", "\[Rule]", 
                    
                    RowBox[{"Fretica`Private`R", "[", 
                    "Fretica`Private`params", "]"}]}]}], "}"}]}], ",", 
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"Options", "[", "F2fFCSGlobalFit", "]"}], ",", 
                    RowBox[{"Options", "[", "FindMinimum", "]"}]}], "]"}]}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{
                    
                    RowBox[{"Fretica`Private`fitresult", 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    "*=", "2.`"}], ";"}]}], "]"}], ";", 
                    RowBox[{"Fretica`Private`output", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"F2fFCSGetModel", "[", 
                    RowBox[{
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "]"}],
                     ",", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], "]"}],
                     ",", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}], "]"}],
                     ",", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "5"}], "\[RightDoubleBracket]"}], "]"}],
                     ",", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "6"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"{", "Fretica`Private`opts", "}"}], ",", 
                    RowBox[{"Options", "[", "F2fFCSGetModel", "]"}]}], 
                    "]"}]}], "]"}], "&"}], ")"}], "/@", 
                    "Fretica`Private`dataset"}], "/.", "\[VeryThinSpace]", 
                    
                    RowBox[{"Fretica`Private`fitresult", 
                    "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], ";", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"Fretica`Private`fitresult", 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    ",", 
                    
                    RowBox[{"Fretica`Private`fitresult", 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                    ",", "Fretica`Private`output"}], "}"}]}]}], "]"}]}]}, {
                   " "}, {
                    RowBox[{
                    RowBox[{"F2fFCSGlobalFit", "[", 
                    RowBox[{
                    RowBox[{"Fretica`Private`dataset", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Repeated", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"_", "?", "NumericQ"}], ",", 
                    RowBox[{"_", "?", "NumericQ"}]}], "}"}], ".."}], "}"}], 
                    ",", "4"}], "]"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_List", ",", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", "_"}], "}"}], ",", "_List", 
                    ",", "_", ",", "_", ",", "_"}], "}"}]}], "}"}], ".."}], 
                    "}"}]}], ",", 
                    RowBox[{"Fretica`Private`guess", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"_", "?", "NumericQ"}]}], "}"}], ".."}], "}"}]}], 
                    ",", 
                    RowBox[{"Fretica`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "Fretica`Private`dat5", "}"}], ",", 
                    RowBox[{
                    RowBox[{"Fretica`Private`dat5", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1", ",", "All", ",", "1"}], 
                    "\[RightDoubleBracket]"}], "}"}], ",", 
                    RowBox[{"#1", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "All", ",", "All", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    
                    RowBox[{"#1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "}"}], "&"}], ")"}], "/@", 
                    "Fretica`Private`dataset"}]}], ";", 
                    RowBox[{"F2fFCSGlobalFit", "[", 
                    
                    RowBox[{"Fretica`Private`dat5", ",", 
                    "Fretica`Private`guess", ",", "Fretica`Private`opts"}], 
                    "]"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   PaneSelectorBox[{True->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "DownPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    False),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"], False->
                    ButtonBox[
                    PaneSelectorBox[{False->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpener"]]},
                    "RowWithSeparators"], True->
                    TemplateBox[{"\[ThickSpace]", "\"\[ThickSpace]\"", 
                    StyleBox[
                    "\"Options\"", "InformationRowLabel", StripOnInput -> 
                    False], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "RightPointerOpenerHot"]]},
                    "RowWithSeparators"]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Appearance->None,
                    BaseStyle->None,
                    
                    ButtonFunction:>(Part[System`InformationDump`open$$, 3] = 
                    True),
                    Evaluator->Automatic,
                    FrameMargins->0,
                    ImageMargins->0,
                    Method->"Preemptive"]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]]], 
                   PaneSelectorBox[{True->GridBox[{
                    {
                    RowBox[{"FConstraints", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PrecisionGoal", "\[Rule]", "5"}]},
                    {
                    RowBox[{"AccuracyGoal", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FOutput", "\[Rule]", "FGraph"}]},
                    {
                    RowBox[{"F2fFCSLambdaex", "\[Rule]", "0.485`"}]},
                    {
                    RowBox[{"F2fFCSLambdaem", "\[Rule]", "0.515`"}]},
                    {
                    RowBox[{"F2fFCSfocidistance", "\[Rule]", "0.44`"}]},
                    {
                    RowBox[{"F2fFCSpinhole", "\[Rule]", "150.`"}]},
                    {
                    RowBox[{"F2fFCSmagnification", "\[Rule]", "60"}]},
                    {
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
                    {
                    RowBox[{"AspectRatio", "\[Rule]", 
                    FractionBox["1", "GoldenRatio"]}]},
                    {
                    RowBox[{"Axes", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Background", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ClippingStyle", "\[Rule]", "None"}]},
                    {
                    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ColorOutput", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "CoordinatesToolOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"DataRange", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}]},
                    {
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Filling", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FillingStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "FormatType", "\[RuleDelayed]", "TraditionalForm"}]},
                    {
                    RowBox[{"Frame", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FrameLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FrameTicks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FrameTicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"GridLines", "\[Rule]", "None"}]},
                    {
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
                    {
                    RowBox[{"ImagePadding", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"InterpolationOrder", "\[Rule]", "None"}]},
                    {
                    RowBox[{"IntervalMarkers", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"IntervalMarkersStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Joined", "\[Rule]", "False"}]},
                    {
                    RowBox[{"LabelingFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelingSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"MaxPlotPoints", "\[Rule]", "\[Infinity]"}]},
                    {
                    RowBox[{"Mesh", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MeshFunctions", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"#1", "&"}], "}"}]}]},
                    {
                    RowBox[{"MeshShading", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MeshStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"MultiaxisArrangement", "\[Rule]", "None"}]},
                    {
                    RowBox[{
                    "PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}]},
                    {
                    RowBox[{"PlotLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLabels", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLayout", "\[Rule]", "\<\"Overlaid\"\>"}]},
                    {
                    RowBox[{"PlotLegends", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotMarkers", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotRange", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]},
                    {
                    RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}]},
                    {
                    RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Prolog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"RotateLabel", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ScalingFunctions", "\[Rule]", "None"}]},
                    {
                    RowBox[{"TargetUnits", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"AccuracyGoal", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Compiled", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"EvaluationMonitor", "\[Rule]", "None"}]},
                    {
                    RowBox[{"Gradient", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"MaxIterations", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}]},
                    {
                    RowBox[{"PrecisionGoal", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"StepMonitor", "\[Rule]", "None"}]},
                    {
                    RowBox[{
                    "WorkingPrecision", "\[Rule]", "MachinePrecision"}]},
                    {
                    RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
                    {
                    RowBox[{"AspectRatio", "\[Rule]", 
                    FractionBox["1", "GoldenRatio"]}]},
                    {
                    RowBox[{"Axes", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"AxesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Background", "\[Rule]", "None"}]},
                    {
                    RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ClippingStyle", "\[Rule]", "None"}]},
                    {
                    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ColorOutput", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "CoordinatesToolOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"DataRange", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}]},
                    {
                    RowBox[{"Epilog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"Filling", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FillingStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{
                    "FormatType", "\[RuleDelayed]", "TraditionalForm"}]},
                    {
                    RowBox[{"Frame", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FrameLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"FrameStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"FrameTicks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"FrameTicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"GridLines", "\[Rule]", "None"}]},
                    {
                    RowBox[{"GridLinesStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
                    {
                    RowBox[{"ImagePadding", "\[Rule]", "All"}]},
                    {
                    RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"InterpolationOrder", "\[Rule]", "None"}]},
                    {
                    RowBox[{"IntervalMarkers", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"IntervalMarkersStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Joined", "\[Rule]", "False"}]},
                    {
                    RowBox[{"LabelingFunction", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelingSize", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"MaxPlotPoints", "\[Rule]", "\[Infinity]"}]},
                    {
                    RowBox[{"Mesh", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MeshFunctions", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"#1", "&"}], "}"}]}]},
                    {
                    RowBox[{"MeshShading", "\[Rule]", "None"}]},
                    {
                    RowBox[{"MeshStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Method", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"MultiaxisArrangement", "\[Rule]", "None"}]},
                    {
                    RowBox[{
                    "PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}]},
                    {
                    RowBox[{"PlotLabel", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLabels", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotLayout", "\[Rule]", "\<\"Overlaid\"\>"}]},
                    {
                    RowBox[{"PlotLegends", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotMarkers", "\[Rule]", "None"}]},
                    {
                    RowBox[{"PlotRange", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]},
                    {
                    RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotStyle", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"PlotTheme", "\[RuleDelayed]", "$PlotTheme"}]},
                    {
                    RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Prolog", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    RowBox[{"RotateLabel", "\[Rule]", "True"}]},
                    {
                    RowBox[{"ScalingFunctions", "\[Rule]", "None"}]},
                    {
                    RowBox[{"TargetUnits", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
                    {
                    RowBox[{"TicksStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}]},
                    {
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "149", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}], False->
                    RowBox[{
                    RowBox[{"FConstraints", "\[Rule]", "None"}], 
                    "\[ThinSpace]", 
                    StyleBox["\<\"\[Ellipsis]\"\>", "InformationRowOpener",
                    StripOnInput->False], "\[ThinSpace]", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[InvisibleSpace]\"", "149", "\" total)\""},
                    "RowDefault"], "InformationRowOpener",
                    StripOnInput->False]}]}, Dynamic[
                    FEPrivate`Part[System`InformationDump`open$$, 3]],
                    BaselinePosition->Baseline,
                    ImageSize->Automatic]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`F2fFCSGlobalFit\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"F2fFCSGlobalFit[ \
\\!\\(\\*FormBox[\\({{\\*SubscriptBox[\\(fcsdata\\), \\(1\\)], \
{\\*SubscriptBox[\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \\nRowBox[{\\\"1\\\", \\\
\",\\\", \\\"1\\\"}]], \\*SubscriptBox[\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \
\\nRowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\"}]] ... }, \
{\\*SubscriptBox[\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \
\\nRowBox[{\\nStyleBox[\\\"x\\\", \\\"TI\\\"], \\\"1\\\"}]], \\*SubscriptBox[\
\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\"1\\\"}]], \\*SubscriptBox[\\nStyleBox[\\\"v\\\", \
\\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"z\\\", \\\"TI\\\"], \\\"1\\\"}]]}, \
{\\*SubscriptBox[\\nStyleBox[\\\"k\\\", \\\"TI\\\"], \\nRowBox[{\\\"1\\\", \\\
\",\\\", \\\"1\\\"}]], \\*SubscriptBox[\\nStyleBox[\\\"k\\\", \\\"TI\\\"], \
\\nRowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\"}]],  ... }, \
\\*SubscriptBox[\\nStyleBox[\\\"w\\\", \\\"TI\\\"], \\nRowBox[{\\\"0\\\", \
\\\",\\\", \\\"1\\\"}]], \\*SubscriptBox[\\nStyleBox[\\\"R\\\", \\\"TI\\\"], \
\\nRowBox[{\\\"0\\\", \\\",\\\", \\\"1\\\"}]], \\*SubscriptBox[\\nStyleBox[\\\
\"n\\\", \\\"TI\\\"], \\\"1\\\"]}\\),\\nTraditionalForm]\\), \
\\!\\(\\*FormBox[\\({\\*SubscriptBox[\\(fcsdata\\), \\(2\\)], \
{\\*SubscriptBox[\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \\nRowBox[{\\\"2\\\", \\\
\",\\\", \\\"1\\\"}]], \\*SubscriptBox[\\nStyleBox[\\\"D\\\", \\\"TI\\\"], \
\\nRowBox[{\\\"2\\\", \\\",\\\", \\\"2\\\"}]] ... }, \
{\\*SubscriptBox[\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \
\\nRowBox[{\\nStyleBox[\\\"x\\\", \\\"TI\\\"], \\\"2\\\"}]], \\*SubscriptBox[\
\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"y\\\", \
\\\"TI\\\"], \\\"2\\\"}]], \\*SubscriptBox[\\nStyleBox[\\\"v\\\", \
\\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"z\\\", \\\"TI\\\"], \\\"2\\\"}]]}, \
{\\*SubscriptBox[\\nStyleBox[\\\"k\\\", \\\"TI\\\"], \\nRowBox[{\\\"2\\\", \\\
\",\\\", \\\"1\\\"}]], \\*SubscriptBox[\\nStyleBox[\\\"k\\\", \\\"TI\\\"], \
\\nRowBox[{\\\"2\\\", \\\",\\\", \\\"2\\\"}]],  ... }, \
\\*SubscriptBox[\\nStyleBox[\\\"w\\\", \\\"TI\\\"], \\nRowBox[{\\\"0\\\", \
\\\",\\\", \\\"2\\\"}]], \\*SubscriptBox[\\nStyleBox[\\\"R\\\", \\\"TI\\\"], \
\\nRowBox[{\\\"0\\\", \\\",\\\", \\\"2\\\"}]], \\*SubscriptBox[\\nStyleBox[\\\
\"n\\\", \\\"TI\\\"], \\\"2\\\"]} ... }, guess}\\),\\nTraditionalForm]\\). \
Give shared parameters the same name in each block, and non\[Hyphen]shared \
parameters individual names. For example, if \
\\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \
\\nStyleBox[\\\"x\\\", \\\"TI\\\"]],\\nTraditionalForm]\\) is supposed to be \
the same for all data sets, then replace \\!\\(\\*FormBox[\\(\\*SubscriptBox[\
\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\"1\\\"}]], \\*SubscriptBox[\\nStyleBox[\\\"v\\\", \
\\\"TI\\\"], \\nRowBox[{\\nStyleBox[\\\"x\\\", \\\"TI\\\"], \\\"2\\\"}]] ... \
\\),\\nTraditionalForm]\\) by \\!\\(\\*FormBox[SubscriptBox[\\nStyleBox[\\\"v\
\\\", \\\"TI\\\"], \\nStyleBox[\\\"x\\\", \\\"TI\\\"]],\\nTraditionalForm]\\) \
and include \\!\\(\\*FormBox[\\({\\*SubscriptBox[\\nStyleBox[\\\"v\\\", \
\\\"TI\\\"], \\nStyleBox[\\\"x\\\", \\\"TI\\\"]], \
\\*SubscriptBox[\\nStyleBox[\\\"v\\\", \\\"TI\\\"], \
\\\"guess\\\"]}\\),\\nTraditionalForm]\\) in guess. \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "F2fFCSGlobalFit[ \!\(\*FormBox[\({{\*SubscriptBox[\(fcsdata\), \(1\)], {\
\*SubscriptBox[\nStyleBox[\"D\", \"TI\"], \nRowBox[{\"1\", \",\", \"1\"}]], \
\*SubscriptBox[\nStyleBox[\"D\", \"TI\"], \nRowBox[{\"1\", \",\", \"2\"}]] \
... }, {\*SubscriptBox[\nStyleBox[\"v\", \"TI\"], \nRowBox[{\nStyleBox[\"x\", \
\"TI\"], \"1\"}]], \*SubscriptBox[\nStyleBox[\"v\", \"TI\"], \nRowBox[{\n\
StyleBox[\"y\", \"TI\"], \"1\"}]], \*SubscriptBox[\nStyleBox[\"v\", \"TI\"], \
\nRowBox[{\nStyleBox[\"z\", \"TI\"], \"1\"}]]}, {\*SubscriptBox[\n\
StyleBox[\"k\", \"TI\"], \nRowBox[{\"1\", \",\", \"1\"}]], \*SubscriptBox[\n\
StyleBox[\"k\", \"TI\"], \nRowBox[{\"1\", \",\", \"2\"}]],  ... }, \
\*SubscriptBox[\nStyleBox[\"w\", \"TI\"], \nRowBox[{\"0\", \",\", \"1\"}]], \
\*SubscriptBox[\nStyleBox[\"R\", \"TI\"], \nRowBox[{\"0\", \",\", \"1\"}]], \
\*SubscriptBox[\nStyleBox[\"n\", \"TI\"], \"1\"]}\),\nTraditionalForm]\), \
\!\(\*FormBox[\({\*SubscriptBox[\(fcsdata\), \(2\)], {\*SubscriptBox[\n\
StyleBox[\"D\", \"TI\"], \nRowBox[{\"2\", \",\", \"1\"}]], \*SubscriptBox[\n\
StyleBox[\"D\", \"TI\"], \nRowBox[{\"2\", \",\", \"2\"}]] ... }, \
{\*SubscriptBox[\nStyleBox[\"v\", \"TI\"], \nRowBox[{\nStyleBox[\"x\", \
\"TI\"], \"2\"}]], \*SubscriptBox[\nStyleBox[\"v\", \"TI\"], \nRowBox[{\n\
StyleBox[\"y\", \"TI\"], \"2\"}]], \*SubscriptBox[\nStyleBox[\"v\", \"TI\"], \
\nRowBox[{\nStyleBox[\"z\", \"TI\"], \"2\"}]]}, {\*SubscriptBox[\n\
StyleBox[\"k\", \"TI\"], \nRowBox[{\"2\", \",\", \"1\"}]], \*SubscriptBox[\n\
StyleBox[\"k\", \"TI\"], \nRowBox[{\"2\", \",\", \"2\"}]],  ... }, \
\*SubscriptBox[\nStyleBox[\"w\", \"TI\"], \nRowBox[{\"0\", \",\", \"2\"}]], \
\*SubscriptBox[\nStyleBox[\"R\", \"TI\"], \nRowBox[{\"0\", \",\", \"2\"}]], \
\*SubscriptBox[\nStyleBox[\"n\", \"TI\"], \"2\"]} ... }, guess}\),\n\
TraditionalForm]\). Give shared parameters the same name in each block, and \
non\[Hyphen]shared parameters individual names. For example, if \
\!\(\*FormBox[SubscriptBox[\nStyleBox[\"v\", \"TI\"], \nStyleBox[\"x\", \
\"TI\"]],\nTraditionalForm]\) is supposed to be the same for all data sets, \
then replace \!\(\*FormBox[\(\*SubscriptBox[\nStyleBox[\"v\", \"TI\"], \n\
RowBox[{\nStyleBox[\"x\", \"TI\"], \"1\"}]], \*SubscriptBox[\nStyleBox[\"v\", \
\"TI\"], \nRowBox[{\nStyleBox[\"x\", \"TI\"], \"2\"}]] ... \),\n\
TraditionalForm]\) by \!\(\*FormBox[SubscriptBox[\nStyleBox[\"v\", \"TI\"], \n\
StyleBox[\"x\", \"TI\"]],\nTraditionalForm]\) and include \
\!\(\*FormBox[\({\*SubscriptBox[\nStyleBox[\"v\", \"TI\"], \nStyleBox[\"x\", \
\"TI\"]], \*SubscriptBox[\nStyleBox[\"v\", \"TI\"], \"guess\"]}\),\n\
TraditionalForm]\) in guess. ", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`F2fFCSGlobalFit, {Fretica`F2fFCSGlobalFit[
         Pattern[Fretica`Private`dataset, {
           Repeated[{{
              Repeated[{
                Repeated[
                 PatternTest[
                  Blank[], NumericQ]]}, 5]}, {
              Blank[List], {
               Blank[], 
               Blank[], 
               Blank[]}, 
              Blank[List], 
              Blank[], 
              Blank[], 
              Blank[]}}]}], 
         Pattern[Fretica`Private`guess, {
           Repeated[{
             Blank[], 
             PatternTest[
              Blank[], NumericQ]}]}], 
         Pattern[Fretica`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{Fretica`Private`gdata, Fretica`Private`f, Fretica`Private`R, 
          Fretica`Private`objectiveFunction, Fretica`Private`params, 
          Fretica`Private`fitresult, Fretica`Private`output}, 
         Fretica`Private`gdata = Flatten[
            Part[Fretica`Private`dataset, All, 1, 
             Span[2, All]]]; 
         Fretica`Private`params = Part[Fretica`Private`guess, All, 1]; 
         Fretica`Private`f[
            Pattern[Fretica`Private`var, {
              PatternTest[
               BlankNullSequence[], NumericQ]}]] := 
          Module[{Fretica`Private`rules = Map[Apply[Rule, #]& , 
               Transpose[{Fretica`Private`params, Fretica`Private`var}]]}, 
            Flatten[
             Map[(Fretica`Private`F2focusFCSInit[
                
                ReplaceAll[{
                 OptionValue[Fretica`F2fFCSLambdaex]/Part[#, 2, -1], 
                  OptionValue[Fretica`F2fFCSLambdaem]/Part[#, 2, -1], 
                  OptionValue[Fretica`F2fFCSfocidistance], 
                  OptionValue[Fretica`F2fFCSpinhole], 
                  OptionValue[Fretica`F2fFCSmagnification]}, 
                 Fretica`Private`rules]]; Fretica`Private`F2focusFCSSetData[
                Part[#, 1]]; Flatten[
                Fretica`Private`F2focusFCSModel[
                 Apply[Sequence, 
                  ReplaceAll[{
                    Abs[
                    Part[#, 2, 1]], 
                    Abs[
                    Part[#, 2, 3]], 
                    Abs[
                    Part[#, 2, 4]], 
                    Abs[
                    Part[#, 2, 5]], 
                    Part[#, 2, 2]}, Fretica`Private`rules]]]])& , 
              Fretica`Private`dataset]]]; Fretica`Private`R[{
             PatternTest[
              Pattern[Fretica`Private`vars, 
               BlankNullSequence[]], NumericQ]}] := 
          Fretica`Private`f[{Fretica`Private`vars}] - Fretica`Private`gdata; 
         Fretica`Private`objectiveFunction[{
             PatternTest[
              Pattern[Fretica`Private`params, 
               BlankNullSequence[]], NumericQ]}] := 
          Norm[Fretica`Private`f[{Fretica`Private`params}] - 
            Fretica`Private`gdata, 2]; 
         If[OptionValue[Fretica`FConstraints] =!= None, 
           Fretica`Private`fitresult = FindMinimum[{
              Fretica`Private`objectiveFunction[Fretica`Private`params], 
              OptionValue[Fretica`FConstraints]}, Fretica`Private`guess, 
             Evaluate[
              Apply[Sequence, 
               FilterRules[{Fretica`Private`opts}, 
                Options[FindMinimum]]]], 
             Evaluate[
              Apply[Sequence, 
               FilterRules[
                Options[Fretica`F2fFCSGlobalFit], 
                Options[FindMinimum]]]]], 
           Fretica`Private`fitresult = FindMinimum[
              Fretica`Private`objectiveFunction[Fretica`Private`params], 
              Fretica`Private`guess, 
              Evaluate[
               Apply[Sequence, 
                FilterRules[{Fretica`Private`opts}, 
                 Options[FindMinimum]]]], 
              Method -> {
               "LevenbergMarquardt", "Residual" -> 
                Fretica`Private`R[Fretica`Private`params]}, 
              Evaluate[
               Apply[Sequence, 
                FilterRules[
                 Options[Fretica`F2fFCSGlobalFit], 
                 Options[FindMinimum]]]]]; TimesBy[
             Part[Fretica`Private`fitresult, 1], 2.]; Null]; 
         Fretica`Private`output = ReplaceAll[
            Map[Fretica`F2fFCSGetModel[
              Part[#, 1], 
              Abs[
               Part[#, 2, 1]], 
              Part[#, 2, 2], 
              Abs[
               Part[#, 2, 3]], 
              Abs[
               Part[#, 2, 4]], 
              Abs[
               Part[#, 2, 5]], 
              Part[#, 2, 6], 
              FilterRules[{Fretica`Private`opts}, 
               Options[Fretica`F2fFCSGetModel]]]& , Fretica`Private`dataset], 
            Part[Fretica`Private`fitresult, 2]]; {
           Part[Fretica`Private`fitresult, 1], 
           Part[Fretica`Private`fitresult, 2], Fretica`Private`output}], 
       Fretica`F2fFCSGlobalFit[
         Pattern[Fretica`Private`dataset, {
           Repeated[{{
              Repeated[{
                Repeated[{
                  PatternTest[
                   Blank[], NumericQ], 
                  PatternTest[
                   Blank[], NumericQ]}]}, 4]}, {
              Blank[List], {
               Blank[], 
               Blank[], 
               Blank[]}, 
              Blank[List], 
              Blank[], 
              Blank[], 
              Blank[]}}]}], 
         Pattern[Fretica`Private`guess, {
           Repeated[{
             Blank[], 
             PatternTest[
              Blank[], NumericQ]}]}], 
         Pattern[Fretica`Private`opts, 
          OptionsPattern[]]] :> 
       Module[{Fretica`Private`dat5}, Fretica`Private`dat5 = Map[{
             Join[{
               Part[#, 1, 1, All, 1]}, 
              Part[#, 1, All, All, 2]], 
             Part[#, 2]}& , Fretica`Private`dataset]; 
         Fretica`F2fFCSGlobalFit[
          Fretica`Private`dat5, Fretica`Private`guess, 
           Fretica`Private`opts]]}], "SubValues" -> None, "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     Fretica`FConstraints -> None, PrecisionGoal -> 5, AccuracyGoal -> 
      Automatic, Fretica`FOutput -> Fretica`FGraph, Fretica`F2fFCSLambdaex -> 
      0.485, Fretica`F2fFCSLambdaem -> 0.515, Fretica`F2fFCSfocidistance -> 
      0.44, Fretica`F2fFCSpinhole -> 150., Fretica`F2fFCSmagnification -> 60, 
      AlignmentPoint -> Center, AspectRatio -> GoldenRatio^(-1), Axes -> 
      Automatic, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, 
      Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, 
      ClippingStyle -> None, ColorFunction -> Automatic, ColorFunctionScaling -> 
      True, ColorOutput -> Automatic, ContentSelectable -> Automatic, 
      CoordinatesToolOptions -> Automatic, DataRange -> Automatic, 
      DisplayFunction :> $DisplayFunction, Epilog -> {}, Filling -> None, 
      FillingStyle -> Automatic, FormatType :> TraditionalForm, Frame -> 
      Automatic, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> 
      Automatic, FrameTicksStyle -> {}, GridLines -> None, 
      GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, 
      ImageSize -> Automatic, ImageSizeRaw -> Automatic, InterpolationOrder -> 
      None, IntervalMarkers -> Automatic, IntervalMarkersStyle -> Automatic, 
      Joined -> False, LabelingFunction -> Automatic, LabelingSize -> 
      Automatic, LabelStyle -> {}, MaxPlotPoints -> DirectedInfinity[1], Mesh -> 
      None, MeshFunctions -> {#& }, MeshShading -> None, MeshStyle -> 
      Automatic, Method -> Automatic, MultiaxisArrangement -> None, 
      PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, PlotLabels -> 
      None, PlotLayout -> "Overlaid", PlotLegends -> None, PlotMarkers -> 
      None, PlotRange -> Automatic, PlotRangeClipping -> True, 
      PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotStyle -> 
      Automatic, PlotTheme :> $PlotTheme, PreserveImageOptions -> Automatic, 
      Prolog -> {}, RotateLabel -> True, ScalingFunctions -> None, 
      TargetUnits -> Automatic, Ticks -> Automatic, TicksStyle -> {}, 
      AccuracyGoal -> Automatic, Compiled -> Automatic, EvaluationMonitor -> 
      None, Gradient -> Automatic, MaxIterations -> Automatic, Method -> 
      Automatic, PerformanceGoal :> $PerformanceGoal, PrecisionGoal -> 
      Automatic, StepMonitor -> None, WorkingPrecision -> MachinePrecision, 
      AlignmentPoint -> Center, AspectRatio -> GoldenRatio^(-1), Axes -> 
      Automatic, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, 
      Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, 
      ClippingStyle -> None, ColorFunction -> Automatic, ColorFunctionScaling -> 
      True, ColorOutput -> Automatic, ContentSelectable -> Automatic, 
      CoordinatesToolOptions -> Automatic, DataRange -> Automatic, 
      DisplayFunction :> $DisplayFunction, Epilog -> {}, Filling -> None, 
      FillingStyle -> Automatic, FormatType :> TraditionalForm, Frame -> 
      Automatic, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> 
      Automatic, FrameTicksStyle -> {}, GridLines -> None, 
      GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, 
      ImageSize -> Automatic, ImageSizeRaw -> Automatic, InterpolationOrder -> 
      None, IntervalMarkers -> Automatic, IntervalMarkersStyle -> Automatic, 
      Joined -> False, LabelingFunction -> Automatic, LabelingSize -> 
      Automatic, LabelStyle -> {}, MaxPlotPoints -> DirectedInfinity[1], Mesh -> 
      None, MeshFunctions -> {#& }, MeshShading -> None, MeshStyle -> 
      Automatic, Method -> Automatic, MultiaxisArrangement -> None, 
      PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, PlotLabels -> 
      None, PlotLayout -> "Overlaid", PlotLegends -> None, PlotMarkers -> 
      None, PlotRange -> Automatic, PlotRangeClipping -> True, 
      PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotStyle -> 
      Automatic, PlotTheme :> $PlotTheme, PreserveImageOptions -> Automatic, 
      Prolog -> {}, RotateLabel -> True, ScalingFunctions -> None, 
      TargetUnits -> Automatic, Ticks -> Automatic, TicksStyle -> {}}, 
    "Attributes" -> {}, "FullName" -> "Fretica`F2fFCSGlobalFit"|>, 
   False]]], "Output",
 CellLabel->"Out[497]=",
 CellID->491931638,ExpressionUUID->"c69cec6c-87e7-4cc9-83ad-3a54375ad0b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"F2fFCSSettings", "[", 
  RowBox[{"{", 
   RowBox[{"0.485", ",", "0.515", ",", "0.440", ",", "150", ",", "60"}], 
   "}"}], "]"}]], "Input",
 CellLabel->"In[499]:=",
 CellID->18270623,ExpressionUUID->"2f4589c7-edd8-48b9-864b-8fd077c3dfdd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"F2fFCSLambdaex", "\[Rule]", "0.485`"}], ",", 
   RowBox[{"F2fFCSLambdaem", "\[Rule]", "0.515`"}], ",", 
   RowBox[{"F2fFCSfocidistance", "\[Rule]", "0.44`"}], ",", 
   RowBox[{"F2fFCSpinhole", "\[Rule]", "150"}], ",", 
   RowBox[{"F2fFCSmagnification", "\[Rule]", "60"}]}], "}"}]], "Output",
 CellLabel->"Out[499]=",
 CellID->1016919625,ExpressionUUID->"d61b359b-36b8-43ee-8803-d6cd42b438e7"]
}, Open  ]],

Cell["Units are  micrometer and milliseconds!", "TechNoteText",
 CellID->159627620,ExpressionUUID->"0647a658-feb4-40f8-92d3-afb170c196a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FOpenTTTR", "[", 
  RowBox[{"$FreticaExamples", "<>", "\"\<\\\\DualfocusFCS in mixer.ht3\>\""}],
   "]"}]], "Input",
 CellLabel->"In[500]:=",
 CellID->139809173,ExpressionUUID->"bfa57ff4-62b7-4076-86ca-5ba0acf35447"],

Cell[BoxData["1"], "Output",
 CellContext->"Notebook$$24$657209`",
 CellLabel->"Out[500]=",
 CellID->1513915,ExpressionUUID->"904f40fe-0beb-4219-ad6c-c7dd7e6e67e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FPIEChannelSelector", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "4"}], "}"}], "]"}]], "Input",
 CellLabel->"In[501]:=",
 CellID->12873871,ExpressionUUID->"a5f7430b-d6d9-42d8-af91-e3fd31331489"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Fretica`Private`t1fret$$ = 1, Fretica`Private`t1pie$$ = 
    1, Fretica`Private`t2fret$$ = 1, Fretica`Private`t2pie$$ = 1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[Fretica`Private`t1fret$$], 1, "FRET ch1"}, 1, 3127, 1}, {{
       Hold[Fretica`Private`t2fret$$], 1, "FRET ch2"}, 1, 3127, 1}, {{
       Hold[Fretica`Private`t1pie$$], 1, "PIE ch1"}, 1, 3127, 1}, {{
       Hold[Fretica`Private`t2pie$$], 1, "PIE ch2"}, 1, 3127, 1}}, 
    Typeset`size$$ = {600., {71., 75.27421875000002}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {
       Fretica`Private`t1fret$$ = 1, Fretica`Private`t1pie$$ = 1, 
        Fretica`Private`t2fret$$ = 1, Fretica`Private`t2pie$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> (
       Fretica`FSetChannelConstraints[{
         Fretica`Private`t1fret$$, Fretica`Private`t2fret$$}]; 
       Fretica`FSetPIEChannelConstraints[{
         Fretica`Private`t1pie$$, Fretica`Private`t2pie$$}]; 
       Fretica`Private`FPIEChannelSelectorFirst = False; 
       Show[Fretica`Private`lp$137224, 
         Graphics[{{Green, 
            
            Line[{{Fretica`Private`t1fret$$, 0}, {
              Fretica`Private`t1fret$$, Fretica`Private`maxy$137224}}], 
            
            Line[{{Fretica`Private`t2fret$$, 0}, {
              Fretica`Private`t2fret$$, Fretica`Private`maxy$137224}}], {
             Opacity[0.1], Green, 
             
             Rectangle[{Fretica`Private`t1fret$$, 0}, {
              Fretica`Private`t2fret$$, Fretica`Private`maxy$137224}]}}, {Red, 
            
            Line[{{Fretica`Private`t1pie$$, 0}, {
              Fretica`Private`t1pie$$, Fretica`Private`maxy$137224}}], 
            
            Line[{{Fretica`Private`t2pie$$, 0}, {
              Fretica`Private`t2pie$$, Fretica`Private`maxy$137224}}], {
             Opacity[0.1], Red, 
             
             Rectangle[{Fretica`Private`t1pie$$, 0}, {
              Fretica`Private`t2pie$$, Fretica`Private`maxy$137224}]}}}], 
         Frame -> True, 
         PlotRange -> {{Fretica`Private`c1$137224, Fretica`Private`c2$137224},
            All}, AspectRatio -> 0.2, ImageSize -> 600, Axes -> False, 
         FrameLabel -> {
          "channel number", "\!\(\*SuperscriptBox[\(10\), \(x\)]\)"}]), 
      "Specifications" :> {{{Fretica`Private`t1fret$$, 1, "FRET ch1"}, 1, 
         3127, 1}, {{Fretica`Private`t2fret$$, 1, "FRET ch2"}, 1, 3127, 1}, {{
         Fretica`Private`t1pie$$, 1, "PIE ch1"}, 1, 3127, 1}, {{
         Fretica`Private`t2pie$$, 1, "PIE ch2"}, 1, 3127, 1}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{648., {147.8544921875, 153.1455078125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellContext->"Notebook$$24$657209`",
 CellLabel->"Out[501]=",
 CellID->372454391,ExpressionUUID->"04b976a8-91bb-461f-82bf-f2d256a7db08"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"chrangefocus1", "=", 
  RowBox[{
   RowBox[{"FGetChannelConstraints", "[", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"chrangefocus2", "=", 
  RowBox[{
   RowBox[{"FGetPIEChannelConstraints", "[", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->431958898,ExpressionUUID->"d4926a90-bd12-47c7-89ed-c0b2cac2a1e3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "32767"}], "}"}]], "Output",
 CellContext->"Notebook$$24$657209`",
 CellLabel->"Out[4]=",
 CellID->455811675,ExpressionUUID->"ac9f20a8-0b0c-4518-a540-61cda5e89415"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "32767"}], "}"}]], "Output",
 CellContext->"Notebook$$24$657209`",
 CellLabel->"Out[5]=",
 CellID->236593230,ExpressionUUID->"aeeb46c7-b2a9-43ef-bfd8-b3386689f73b"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"chrangefocus1", "=", 
   RowBox[{"{", 
    RowBox[{"49", ",", "1594"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chrangefocus2", "=", 
   RowBox[{"{", 
    RowBox[{"1655", ",", "3127"}], "}"}]}], ";"}]}], "Input",
 CellLabel->"In[502]:=",
 CellID->261711329,ExpressionUUID->"d47985e7-5f93-4049-9145-99afb664fd3f"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"detector1", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"detector2", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fcsdat", "=", 
     RowBox[{"F2fFCSFromTTTR", "[", 
      RowBox[{
       RowBox[{"-", "7"}], ",", "0.", ",", "0.03", ",", "detector1", ",", 
       "detector2", ",", "chrangefocus1", ",", "chrangefocus2"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellLabel->"In[504]:=",
 CellID->504061895,ExpressionUUID->"04e428ab-d4aa-4010-91dc-8db35b4b0f2b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "A", " ", "fit", " ", "with", " ", "one", " ", "diffusive", " ", 
   "species"}], ",", " ", 
  RowBox[{
  "one", " ", "triplet", " ", "time", " ", "and", " ", "flow", " ", "in", " ",
    "x", " ", 
   RowBox[{"direction", ":"}]}]}]], "TechNoteText",
 CellID->258606930,ExpressionUUID->"0e1a6eb7-cd3e-4fcf-bdb3-d56649bce9b4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nrefractive", "=", "1.33"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fitresult", "=", 
  RowBox[{"F2fFCSFit", "[", 
   RowBox[{"fcsdat", ",", 
    RowBox[{"{", "diff", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"vx", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", "/", "\[Tau]T"}], "}"}], ",", "w0", ",", "R0", ",", 
    "nrefractive", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"diff", ",", "0.4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"vx", ",", "1."}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]T", ",", ".001"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"w0", ",", ".300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"R0", ",", ".150"}], "}"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fitresult", "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}]}], "Input",
 CellLabel->"In[507]:=",
 CellID->7561618,ExpressionUUID->"b7eb9799-aee8-494e-adae-628e7167ff6d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
H/ji6c9fHRNVOFl579nHH+qvr0Wu/ys3fchvnHDNPRf/9MxKjtTOIoIJAAAA
ADANut2u/V4G7WigqtXqkIMkOOzGD4mJMXRsBPPHclDiKApT0r9eIganb/3E
iY+8MxBSeOUvf+/MI1+OWeET333y2frPSzDhujt/VeMJDz1ZHfW+TNyUnFMA
AAAAQKvVMrWzxcVFnaJtA2zV6ozVVaewyrl++pXXv9E6dc2HUlspfPzy80ef
DK9kbX3jgQO/u5MbJ0zhmQUAAACAHcXubqADIyQGEwy/FcE0m+Yq58aZ1de/
0TpZeW9CSOHdF5++5eMb50IDKn79wSUNJnzub99onPDA4Y+NbRcmaJrPLAAA
AADsBPZwBO12WyZqMGFhYcHMoO93mK3GCTNR5Tx/7Jnk4Rn/z38PNFFYff3c
Ywf+swQTHm68yW6ccObcq+NM/0TMxJkFAAAAgHnV7XY1klCr1XS6BhPMH+af
7XZbZytw5ASNUYxo2Rmqcq699I8JfR/effFrX709bZH77vjkZVf9c/uEa+98
Y1TJb37/wDhTPhEjOrNHjx49dOjQysqO6CoCAAAAALlplMDUze3pTjChb1Xe
i+rpUKvVcg+mF7nszA3Wd/bJR05ceYkTUnj1wIcTX/Tw496J711/kQQTHrj1
FzWYcO3SW8+vh7pIzLTAOT18+PChQ4fyrdYsu2fPnksvvbRSqRw9enS4NAIA
AADAnNOggd0soZ8UTND6u07JrdfrVatVeyiGES07Q2EEtXHu7OlbP+GPyrhx
ZtWf+b6bF3TkhGvu+jWNJzz5/F3jT/k4JZ7ZgwcP7tu378ILL6xUKpnWdvjw
YbOU+X9BqQMAAACAOecHDdKmp82ZSa/Xa7VapVJp73YjWnYWgwni7OFDK/ve
um0IhY+8c/2k2/z+qaee0ndEfvn2X9Jgwk3tt08k2WMTOLMrKyv79u3bv39/
/NrM/EtLS0WkCwAAAAB2hPgQQSHBBPslEYuLi5mCCTmWnd1ggrF2/LkTH37H
tnjCh9/hxxMe+Nwf+O+INJ/nXpql925kNfDMXnjhhfFDH+zZs2foFAEAAADA
DtJsNqVKPvA1Ddq5oNVq5d6cHZGwX0k5omVzdKOYKhtnVk9+/PJwPOGxRx/Q
YMKXvvhmDSbc/a33TSrZIxV5Ti+99NL48RN27do1dLoAAAAAYAfpdDpSNSuV
SoHXNJivtBJnFsm9uWazWavVut2u+TtrMCHHsrMbRlAbZ1ZPffKKQDzh3Pn1
b13/2/paB7txwsqpIxNM+UgNPLOVSoVgAgAAAACMjr6mwRmD0VYul2Ue56UP
w8gaTMix7BwEE35mfe3Va690xk+wx2P85n03auOEm770qxpMePCJbOMQzhCC
CQAAAAAwWa1WSyvm5XLZefNju922BygYpo+Dg2BCBl484WTlvfq+yNXXz3Wu
/w0JJnyj8Sb7HZHnzie8A2IOEEwAAAAAgInThgdhA8dVyGQ8wQTbEImdvI1z
Z53xE05//mr99qEv/XXiMIxPPNecYJqLlelsEkxApKNHj5rccvDgwcRvTS4y
35p5YlZ1+PDhAwcOVLakLRU5GwAAADD9er2ejq8YiCQEBlXIgZYJWfnjMf70
S//cM+WVEy9/7/qLJJhw7+3/XoMJN99/yWTTPCIEE1AUk09MBkh8o4ep5u/a
dMEFF4RXsrKyYtawazs/B0bOBgAAAMyWVqul4yfYFhcX2+124ZsjmJDDxuqr
zvsiX//63fLVg7fv18YJn7nrjcYJz7748GTTPArjDybIE2p5hB3/0sk0ppZq
1iMrPHz4cGA2eYRt/h94fm3SE7M2+4F4+ODonOHtypyywkLWVhRpbGA2FzNz
IcEECRGY2fbt2xdochA524gUmIfN4ktLS7q2gbtg8oBm0bRGIP3NA66rTctU
OoP5w/+2EmRn+5h5diY5woHTNJCe60T+mu2iyWw9LXNqBjYzBwq6+L3Q4quQ
Uj033a/4IzbqlIz5MhczW+TZt4umtDlz/PbtrOJ8lZbbE8+avbMxJeeojf/q
7Jjmq5K9wsTLjT9bOHPG7KydQwKF4TD8Aie8oclmkmILJWHWo/s+zGyRZZeu
zT7yzpHMVChFHhPJloGsO1Ldbrfdbjc2mTq7vD1hFAgm5LN2/LmffOBtb8QT
3n3xuR88ZqYfP378mRve7L8j8q5H/njSSS7eOIMJpojYvXu3/SjZVAaHubsz
aXOeTZs6plMgmH+a+qYz2/79+xPXZtITXpsptS688EJnbWaKX/qZBS+99NKB
25XwhX1YEvc08UF84l4UyJScZtdM8gaW7SIQTOjHdXMwuym7Ft5i5GyjUGwe
9jNw4LTK6XDyZ2IK/awycFV+HvYTZrNvCWLm2VEkBKdHOO0XEcM/lWkZwGzU
n9nPnObUO6XcrqSCLn4v/Pw2ZKk+jMQfVNoRG5GJXOYiZ4s/+6ayEzNn2nEO
/PYDOSottztzmjSYQtKfbdQXxDSR1/rRmfKrkp/rEm+ZIrOcWdDZYuLOxhSG
w0s8VokbmmwmKbxQUvbdde7Z/J9zYqHUT7mfd2oo/hkRTqEUmZGEPJ0xZ9Bs
ffBBmVnjHDNhiGROo/PHnrEbJ6zse+vaP/3sLZAP3/YniSMnvHzyB5NOcmHG
PGaCKQTkl2v+b4oOs1ot3PKF+8ylRxY3P3CzNvMblyuRWa29UdmK+Uo2qpcY
p2DRAkqedOs/nSuj1JfNOiWYqRs1O+UkTy4c+uhcryP25cO+emrCEg+d7IUe
Ot3uSOtrJkmZgufhYEKBaxh+Q/kUnofNLtiNK3Rt/hVNb1rMpnV+fza9bTP/
l9+F/yzALKVZznxldkQXsS/faeF9OQJ2YxX9QcU8CJh7WnSY4ykndJiMmvas
VooLc4p1TqeIsLOTfd8uGUnzhpZLzj1S5F6YNWsBaGcP/wZvPJwHhX7OHHWU
YyKXufjZIs++Saq9NnuFdpbrZ//tSwJkVWnBBLuxWeJZk6qHXXLqjkQ2oitW
zLV+dKb8qmSKCJlH7ppMCiW1ZhP23UVkltMCR+/B9Gj7NUo9ILpRo9j2AHIE
5EpasS6mfnommEkKzyFK7sR0l/PNJtcaPTJ6svzywX6Wp8e84j2iiimU4jOS
w8w//mdYYxMICDQaDZleLpezLmubvzCCOvv4Q3Y84ScfeNv6iZdePH7s6Ofe
JMGERvOXNZjwwOGPTTq9BRtbMEFKXfNLtCsscgvk18QHMiuRosC+cmmZaU80
ZY6zUSk0nI1WNpsl2KWE3p7ZJZX52ylJNCX2UdLC055Zr6q6QrmAmhSar2SR
xAMoKXH2Qtc2ukbFA7sk9Lc3q5Z0OpeA8G2hY8qDCcXm4f7mjjinT29OnNkk
O4Uv/ZoVK8EQk6zNPhGalwZWtaS7ihN2CN9IFCLQ0l7qj/qVZDP/QMkaxlDX
kJqOuS+Shp0jyqhS0GmZI+fUTHSyk9TO7PxgzrVz65VY8kTuhWQ5uyqqhfA0
PMEZQ850TOQyF381jDz7km2cH0vinJmOsJQzUqNJzFGy3YH3G7JR50Jc7G9N
ipG0byXEJ0cy8lo/OlN+VdIAkT1R7sHsiZFZzl+wb90g2RP9VPmF4fDkyNjr
TCwAJ5tJCs8hQvdUb5VzzCYHwTkyuohzEjWEHr7pjSmU4jOSI1OFaOYQTBjS
a1+93Y4nvPKXv7dxZvXhW9/vN0645p6Lf3pmYh1CR2FswQS/xt232qtn/Xkm
1lv7W/fATutfp+RJq7b78cbItPm3QFJS+ZctCQjb053qQOIBlPX7F0eJ6I7u
WVu4QE7seeGflPC3QkMNskf6lNOJP0TONjrF5uFEiXESyTYD1y+ZP+Zmyc/q
kTdacuSd2TJVKPKR1hSJ0S35reldqJQMzmMvvW0bQ5/Ho5vk7xEFE+Ro2KvV
FlPOnJIlBoZQ/DMYvxd+XhrFXgfGjgjs3RhypmMil7n4q2Ei/yglXnFkL5zf
YKYjrOVYWg7JFEzwe3Ds8hpO5BbeL9kR+YHEX+tHZJqvSlpVTDxZ9hGOzHKJ
p76/FVwN18r9iv/wEtfpZ+/JZpIR5RC93wjcuw6cTY6V3zxDrnF2ZV8fvQ1M
WEyhlDsjEUwgmBB2+tZP2PGEU9d86MV/elYbJ9jxhIeeLPK1nhM3nmCCPpKw
J5rVasOnrMWpFM7Og5jI3lvhos8WU9gm7prsl9OkQZuWJZaHA4MJfjJGcXG0
BQ6R338krXGa3vPLXiTu+64gXSRytqxMtolpt1Z4Hk7kZ2xpDBCOlgs5/vla
qsQEExKbJfTHVWWT45x4t+nstZ/TJK/mblAamUN8IwomOM0S+tazaWlLIBM1
AhPOElIVDTQkyLoXo9jrQ1tMBjBn85AlcGqKypmTKiIiL3PDXA0Tz35lqzOC
5jEt8HMHEu1aw5DBBJnNpEevsNpouaj7fNlEWp3C3usc1/oY83FVSsxd+oTa
Pl+RWS4tvw3MOfqwexTdHJyD7AfxRpFJJptD7PB14N514GxpN7F+/EoKtJjH
ATGFUu6MNN/BhDGY1zET3rC+9uq1V9rxhNO3fPzBO66e48YJ4xwzwQ8q6gUl
332+ExXXklnL58D9szb6Cm9Ciz5/VfqYTC6yTi8qreDYq9L+WWmbDhTIshX/
mYuUrqNr7R8okBMbzoV7HwSqGJNtmSDj8MSMaV9sHhYyzJ0djakkDXFgJoZH
2Ja7O0leprH6+1ZVNHylTmyW0Pe6KI5o3GxteG9PlIPj/DR0d+SZdeTvPSAy
h/hGUa32myUIrU9JvwMdQiE8CL/MFm44mnUv5H5sRH2BTd6OX3PMXWWMSRUR
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
    "], {{0, 92.50475371651042}, {695.5357428090053, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{143.9926, 143.9926},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{695.5357428090053, 92.50475371651042},
  PlotRange->{{0, 695.5357428090053}, {0, 92.50475371651042}}]], "Output",
 CellContext->"Notebook$$24$657209`",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[508]=",
 CellID->354417110,ExpressionUUID->"bf5fe3f9-ba74-4981-b1ac-d18599363bc6"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnft3VFXa53tmfpkf51+YtVx2O67X6Vbs1m57fNtuu+2rPbw6Y7e97BEl
ihoUMahtbAWJiEQgJNySwgDhFoqbCYRLcZUUGG4FhECSIoSEEBIq5F65ViXz
kE3v7JxzqnLqevap/f2so6tS5/bsIvU5T56z9z7/fdrbU9P+8/e+973Z/5X+
N/Xl93/x7rsvf/gf/41+eH7m7BmvzZz+6m9nvjf9tenvPjbtv9CbT/+n733v
Ov139/UoAAAAAAAAAOhIAwAAW2G1NZNHqFZP+iFIu0GD4z5aLA8DG9h0A0nC
wAb6DST0c9EYpaWlUezr8/mK/kWobUI1VrZ/GvMbwM/YIJYNJAkDG4TaQB4/
O51Odr3IysqKYneHwzHpFSdqP8uALYIctUmcCDKO2CJOmwYpSdiUM3O7RuFn
t9sdqnYhIq2fNWmwIZYHaRJbxIkg44gt4rRpkJaH7fP5srOzRbtG6mc6QkZG
Rix+Tj4aIZvxMwBANaxVVlFRUXp6etpEIvWzWNmwqZ/D8NLcPbTE/bAAAPmx
VlmkYmbUzMxMrtmI/KypbNjFz6HQ2xh+BkBZLPcz5c+sxwX9P1I/88oGHSSW
+4PyEJGNAQCpjbXKouyXHMteR+HnvLw8tovT6eS7y+lnTWZr3sN8R3EXze6w
OgApiTwpZaR+drlc4vbR+Tk42NXf/N1Aq2e4p0mzjAQGRkNUDMKXEczsAj8D
ACbFpn6mrJvdWKT/e73eUdN+1pSpa84dYAKcdKlf8z+qv36cFu/an7J3Lm+a
Wlv8HC01Jel1e96+VvZO8/EFze6v2Nre2u3+a3vZayb80WAgjh+XBlSeAUgN
TN5NSzIR+Zl3yXM6nZrdI8qfzfvZ/MKy2VBr69b/7NqGf6/f/n+bytJuH8lg
GzOZD7ScvqtxAfPWFbdE5z0AUgM7+tnj8bAt2b1FBu8KQoQa5S2Dn81sfH3D
T2/unHrbNYP96K8rHfRdDA52mfwk4WcAUgM7+tmwT50e/Y4Gfr548tjyZ06s
eOrCqh9rlmuO+xPk5KiXpo2Pt5Q813Z0dqdnOeXbQ+01oT4iOBmAFEBxPzP6
BwO+jj6+NNzqulLfxpdTVbe+PX+j/GztiVNnaNl9sJyW/ftK9pRs3ebctMNZ
tG19NvNz8ar3tq6YRcvOZX+lZW/uVJK/e8WvyPYXV0+JwvZhtM9WNRY+eGvn
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
0rStaeu6eqq20IyT83Y/UVLx7rmrG293VlOObf4UlI2TqHN2/URzQFI3rUpc
0wAwj0k/83fYXHZ5eXlZY7hcrnhFEoufRTlnZmaG2kxzZYk61Nj9HMq6Jv2c
ksUNSlwpVT50/vNJ7/TlfPNo8fFpJ6+sam6/GJGT9fi6bi1e/0LOznt9ofnx
qxpK4tUuACLCvKa495IQVdR+1sjZsLLBkKe+wa0bqWnZjinj56Fhf32ru7xq
2aajf5s0Vc7f+/T+c5+QOfsGO+IYw8Z9l487HmMd7cTTUU4ex7MAEAVmlJWc
eZ6j87NYIQ81LIUThZ8TbcLo/BzpWQz3MnOoRFRXegfarjYf+fbSki3H/k6Z
6qRa3nDkL+7LKxJXc2i541+9eE79mvt2b35Qc2ooGliLPCllFH4W5Wymm5++
scN1le1z/tT+0fOdC183XJg/e9bMDbX4d6z078q/t5Su6S8vFZeBE2VD1WfY
EvA10xJsb434owmNRu/8RzO9+MK7V9RUjEF29DbW3nSxQ60qe8pkVXnnibcu
1Dt7+lpiPLsZlm8pr8n/twbHfSeKfpC7E4oGsqBXVpj6QEKJ1M+8rJGenm4y
w9c3lrTJ78rFsohlB/NL24wn2dWB/di1eCYJv3fzYmb7/iPbyfCDlSeG6y+T
2Ef8Bv0KTPo5CsKYOdSq4Eigy3/zhu9MVUNJRU1B2ekPzVQtNKky5dV0hBir
ypFS09C+aWkaH+6du2uKGNWVxj3JDAYAjl5ZGRkZpMooemWQMEmtUc8vGsbP
dEzN1HYUHu/qnJmZWaTDMAx9Y29WbIqLn5Oz3H7lx7dm/aLpg2ca5v65Ief/
Nea/dX3j+3XffOb9dlm1Z21dTQmZjS1MLKx3GV+iK2jw3ZvbL4oHP1VbePLK
qv3nPtl9as6WY3+PbvgeWw5fWFjdtC++VeVIyV5Typ/ufW7tD/JKfyrejkSP
DmAJemXxigF5ctKHDLI5RcXHYCXCz/pVdMa0sJgcP2gvP/NFk67zH1umP3r1
bW1Fd9WWKLWZuMVZPr28atnV5iPydDY+VXWrLPc5nkJXlr2Yt/uJ8c+w7CnW
jxqAZKJXFgmWUmiN7vhjYRmsf51mMz4SMDoi8nP4pyKa9/ONW9/lb3qksOjh
TWsmX7YUPPJNrnY5tHAKX4588UjFJ1PEhfnzUsY9Z15/a0rjG4nyM3+Hv9Z4
+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
KIUWhxNWN+1LXBhAKZRSlniX0+pYQKyQjfkja/nSs37ByEBCnjzl7x9yLpvO
/XxV6GhHHDr/OffzhiN/SUQAQCkUNJVSjVWBYHur/tlbHfNeSlCtw1ni4iVo
/uhYRkdvo1iFrm+1zaToQGaUUpZSjVWH/kPFmor0nZlPJ2KwYbOvR+xod61k
wq/T7lNzuJ+3u2fE/exAQZRSllKNVYrhhhrtzKWvPtZ3YFPcT7RhQyF/LqGm
o93tzmoxhaYf4352oBpKKUupxqrGyIC/e9VH2nlKC/4Z38cdXqrznVr58/FJ
oY9/Lq4V/Vx2+sM4nheoiVLKUqqxatK3Z62+61187xhuWD1v/C7h1xM62l1t
PsL9nPPNoz19LXE8L1AQpZSlVGOVRT+Gpf2j5+M4zPD4uTqxo92dyglVlELX
s1zR5VXL4nVSoCZKKUupxqpMoLmenDzhjuGsZ+L1QJah4eD25W9wP9du/I24
9vy1LdzPq8qewnBvEAtKKUupxirOiL+7c8H0CQNYZjw5VBufZ/3sPewWZ7Tz
N5XzVSRksQpd1VASlzMCNVFKWUo1FowGA90F/9R06hg4fTD2A/v7h/YvH+9o
593+N3FtedUyjFUBcUEpZSnVWMDo3bw4EYreubN4fMZRx31D7TXjZxxoE4d7
3/Cdif10QE2UUhbGd6uJfob/2BV9o7X7xIqnxicd3feeuLbs9IfczyUV78Z4
LqAgEpqKzTId3TMNzewrVWNBMuk/VBx3RRevXzruZ8cDwf52vqq5/aJYhe7y
34zxXEBN5FGW0+lk14usrKwE7StPY0HyISGTluOo6PPVzRdXT+GKbv4uV1y7
6ejfuJ+/vbQkttiBokiiLM1DwxO0rySNBVZxV9FxzaI353883tGu8CejwfGZ
nyuv7xQfTTg0nJBZ9UBqY7my9M+iNe/nSPe1vLHAcuKr6PKzV8SxKu1VW/kq
TUc7PFcFRIG1yioqKkpPT9c8f9akn6PYF34Go3EtdASCIzuWv8b9XF30a3Gt
6Od1B6fGI3agFtYqi3TKvJqZmelwOCLycxT7ws+Aoc+ih6qj7AXnOnZCHKvS
c/0oX9U70JbzzaOYFBpEjeV+phyYMuHRsXw4Uj9Hui/8DDiaLLptxpOB5voo
jjM2VuV57ucrm/9DXCt2tNv13dvxCR0og7XKcrvdPp+PvY7Uz1HsCz8Dkf4j
2zVzdESn6JKSneJYlUHfRb5K7GhHuTQ62oGIkEdZkfo5in3laSyQhL4DmybM
dPfB1GBnW6QHabnjP77iN+MdOXa9Kq4Vq9CY0Q5EhDzKSo6fRWIIFqQOmgHg
7R89H4Wid27JF8aq3D/c08RXaTraYUY7EB45NYX8GVhFz4ZFE6b0XzA90qeu
NNzqEp+rUrv3I76KhLyq7Cmu6Av1zniHD1IWeZQFPwPLCAa0D8Za8YE42MQM
Ozd8xZ/ufc3xQHCwi68SZ7RDRztgHnmUBT8DC6GEWTNfdM/a+REdobbeJw73
bjj2JV/V09ciVqHR0Q6YRB5lwc/AWkYG/Josum/P2oiOsKPw0/ESx5ofiY8m
REc7EAXyKCuMY91ud/jp6eBnEBeCnW0aRQ9U7De/+5W65qrVD4+n0CdX8lWa
Ge06ehsTED5INeRRVhjHTqpf+BnEi0Bz/Z2ZT08YWhjJU7G+cbwnpNBTxBRa
9PPRyuwExA5SDXmUBT8DSSAhTxi3MvNp8+NWzl7yshmT7t0rFFJozGgHIkUe
ZYUpYkxa35h0A4Y8jQWSo6lyRDRupbQg3TCFHg4Okpa5os9d3Ziw8EGKoJSy
lGosiJHebXnaTtEDpjLecxer6goeGK9CV3zNV4kd7QpdzwZHIuvCB1RDKWUp
1VgQOz1r5kbRKToQHNmd/wb3c9XXT/C9egfaxCr01eYjiW0AsDlKKUvCUZNA
anTjVno3LzaznyaFbvyugK/af+4T7uft7hkJCx3YGwVNpVRjQVzQPvt72qP9
h4rN7Cim0GIVuqWjSkyhb3dWJzJ8YG+UUpZSjQXxItDaqJnMf7DyxKR7aavQ
QkcOZ/l07ue9ZzMTGTuwN0opS6nGgjgyXFfZNuPJSCfz373mHe7nGiGFvtp8
RJwUuqevJbHRA9uilLKUaiyIL5pHYt2Z/ftJe9xVe+vFp8d6j+XwVesPP4+x
KmBSlFKWUo0FccdfukZUdMe8lybtcbfn69njfnY8xCe1q2oo4X7O2/3EwFB3
4sMH9kMpZSnVWJAINPcKu3LfC799TV2DmEJf3vspe384OCjeJTxVW5jw0IEN
UUpZSjUWJIRgoDP7TVHR/h0rw++xf/0H3M/XHA/0t19j75OTuZ/z9z6N56oA
PUopS6nGggShn4Z04ERZmO1v3Gz1rH6cK/rCtjfY+wND3Xm7n8BwbxAGpZSl
VGNB4gi2t96Z9Yz5HncHd+SKTydsb7rA3j9amY0UGoRBKWUp1ViQUIYbasQU
um3Gk/ROqI27e/rOrP5f4yn0+j+z93sH2nJLHuOKPn9tS7LCB/ZAKWVhfDeI
I4Pnjk7ocTfrGcqrQ218bN/G8bEqjvuaLuxk74spNGZMAhwFTaVUY0ES0E5D
+tHzwZ4Owy0DwZHj+X8e78jheIwNV+npa8n55lGu6KqGkuS2AEiNUspSqrEg
OfRuXmxyGtJLF89dc9zPFX1xz72+duKMSUihgYhSylKqsSBpGHSKDjEN6f6v
3xJvFHbcujs5EqXQYhUaHTkARyllKdVYkDx0naK7C/5puGFz84QHyJ5fP5W9
f/jCQnTkAHqUUpZSjQXJZGTA3zHvJTMzRR8pyRdvFHpPrBvVdeRACg0YSilL
qcaCJBNsb9UUOvyla/SbDQ0HT+b/fnxq6IKHSO30vvvyCvHpsX2DxvcZgVIo
pSylGguST6C5fsK4lWmP9h3YpN+s+kplbcGDXNFnNk4bHRtOKD499vCFhUkP
H0iHUspSqrHAEobrL2uyaENFH9r6OZPzS3P30FJbsXV04owcOd882tHbmPTw
gVwopSylGgusYqjWI07m73v1sYHTBzXb9PcPVuT/mqfQ1QU/7LlzYzg4WOh6
lit654m3LIkfyINSysL4QZAc9IruLy/VbFN96eyEB2A57qM3a2+6xHlH61vd
VoQPrEdBUynVWGAtpOhJCx3Hts4T/Xx2790uH8XHp4nDVYaGJ3kEAEhhlFKW
Uo0FlnP3kVivPhZG0UODQ98V/EFUdF3lkTs99eKIb9woVBmllKVUY4EMaJ5a
eFfRe9aKG9y47vUKfTkuFTzaeedmedUy8UZhc/tFq+IH1qKUspRqLJAEfRbd
s3a+OAD8onuHmELT0tt9e82BP3BF02s8oFBNlFKWUo0F8qC9XTjt0a6cWeI0
Sse3fiz6+eS6v9/wnRFvFO49m2lh/MAqlFKWUo0FUqG/Xdjx6Yt8vuhAcOTE
189rsmhxUg5aqpv2WdsEkHyUUpZSjQWyoR9dSD8O119ma7s7O84XPCH6+aW5
e9YdnMr9nLf7ibauq9Y2ASQZpZSlVGOBhFDCrJlGyffqY7xTx81rlZfzH9Fk
0bSI3e0wL4dSKKUspRoL5GRkwN+VM0tT6+he9dGI/+4dwGs152vyHwrlZ7Zg
An91UEpZSjUWyIx/V75G0bQM11XSKu+Fw7zH3Utz9+gVvfvUHChaEZRSFsZ3
A3kYqNiv6dTBZo2mBLvm3AGxUzSfRgmKVgcJTVU0RmmpdqaCMPh8Ptqe7ehy
ucJvLFVjAQi0NnZ8+qI+kSZ1382iHQ+GqUXTgqHfKY88ynI6nex6kZWVZXIX
MnN6erqYFWdkZHg8nlDby9NYAO4RDGieMMuX5vJtVwoMbhdqLG11A0ACkURZ
ZFruWJN+drvdaUaQsSmpNtxFksYCoGGw8kT7nD8ZWpoWscphaGmrwweJwnJl
kUuzs7NFwZr0M6XKXMgOhyMvL48fgV4b7mJ5YwEIxcjQYG9xjmYkOF9uLP4B
c3LN1/d/ve2HSKQVwVplFRUVaQoUJv3s8Xj49rygwSskdEzDveBnIDmBpqud
C18PlUizpW7NfVuLHyIhw9Ipj7XKIhUzo2ZmZlIObN7PXMW0I3+TUnG9tEXg
Z2ALBs8dbf/o+fCW1lc/NN2koesUwHI/U65LWfToWC5t3s+8mqHZmPvZsBMI
/AxsQzDQX17auWC6SUszURsqmi2+jj6rmwQixlplud1ufi8vIj/zxJu5fdL3
GfAzsB1D1We6V3zQ9trPzIvacAnl7V2rf1+89k9b1k1Yitf9advGZ7EkeTl2
KEfzry+PsuBnAEIR7GzrO7CpM/vNUDcQ47VMSLl17+uLKrToj2CY2+vfZINu
Etocey1nvviN5t9dHmUlx88icQsdgGQR7OnoLy/tWTNXMxUelhRYmJ/l1BTy
ZwAiItDaOFCxv7c4h/Jqy3Wtz7cN38cSZkmZ/HnS+4OGY73laSwAcWdkwB9o
rh+qqqAE278rv3dbHqXZXTmzOhe+3r7g1dufPHf73V+1zPpFyzv/3vz2z+8u
M5+4OfNnTTN/evsV69WEhZarq9/Q/JvKo6yI/Mw3Rv86AECqIo+yIvKzOLgb
41MAACmJPMoK42eysX5qO4zvBgCkNvIoK4yfDVe5XK40IzA/EgAgNZBHWZH6
eRTziwIAUhp5lGVYxJh0FaXKlEhjfn4AQOqhlLKUaiwAwO4opSylGgsAsDtK
KUusVFsdCwAAhERBUynVWACA3VFKWUo1FgBgd5RSllKNBQDYHaWUpVRjAQB2
RyllKdVYAIDdUUpZSjUWAGB3lFKWUo0FANgdpZSlVGMBAHZHKWWFaqwtPgRb
BDlqkzgRZByxRZw2DdIWYccL+DkJ2CJOBBlHbBGnTYO0RdjxItT47kk/BFts
IEkY2MBGG0gSBjbQb4Dx3ZO+b68NJAkDG9hoA0nCwAahNoCfw7xvrw0kCQMb
2GgDScLABqE2UM3PAABgI6y2JgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAApiM/nS09PZ0N43G631eFMwOPxZGdns/Do//RatghHxz7AoqKizMxM
9hlmZGTk5eV5vV6r4woJRSjDiC32ufFg6AMsLS21NqTwSPK5GULfC/5NIbKy
siT8MG3xdZYN+pT4EEupPi76BTMcByrVLx79yvEvhQi9Sausjs4AunbIMKKW
5MyvaCIUnoVRhUGSz80QMTZpP0xbfJ1lw+VyiZ+VPH4Ws3o98mSnPKcyVDS1
wuoAx6FgxGuxtZ5xOByhPjf6nbQwMD1SfW56QnmPQX+hWB3gXezydZYK/Ycm
j5+dTie3HIuK/s/jpLVWB3gX8epGwvGNIZpHktyAoqJI9F8QC+PhMVCORz/S
N5Sn0/TCqsA0yPa5GSIW1vg3hacN9MLqAO9ii6+zbGiyAqn8TN+LrKws+u0S
EwD+qyhJVsBVrFEK/3ZIEieFwf+JxaqCVfHw6xp9W/mbHo+HBybJ3x2yfW56
xCud+HeHmFRbGB7HFl9nqeDfEfEXTx4/6+GX4DRp/iAiP7PfOnohvi/bLx73
DL0Q8xbL46FPT3xftt9D2T43PXRRyxpDc1ET/7KzMLwwSPh1lgde2aD/i/+U
knwvNIhpTJo0RYNQ0C8bD1WSW4T0XeBdSmTwDPNJmu4Glmx/d8j2uZmH3zGk
v5GtjkWLvb7OlsC/ICRn8RdPfj+zcqXVEYVE7JagSQ4lQQbP8F8/jYdDvS8D
MnxuJhGLGxJ+o230dbYE/pcFu7bK72f+tWVQliXnH0SaPmOSJM8aZPAM/Jw4
RDlLmDyP2ufrHEeoge6w8E+AXvDKBrtyJdPP4YMMdXYWvHiLP6GpKXk1fJCG
V3yNnBP9V5v5f3ENMngGfk4Qopzpt1HO1DTJX2cZ0JR09PBfeLGywd5Jpp/D
Bznpb754iz9x11zN9V2P/lMS5cxK+gmKjWP+X1yDDJ6ZtP4sYYcrGT638Ggy
ZznlLJKcr7MMmP+2ht+MkThLT3pqviV9c+lbrHddEoKM1M/iEEKydHLKGrb2
s136b4jI8LmFQRxCKOFfHxZ+nWWAWlcUFt788F/qRH9W4YMUf694KiWmWGJX
k8RpkPKQ8EGK13oxc05m0mL+X1y/o+We4Zme5P2fRWT43EIhfp6yjb5kWPh1
thfW+tk8Yj7A/toVC1aSjIoaFZJtu9TQZPCM2AVR5vGDIjJ8boYksz4ZNXb5
OkuInP++/D6mIZIkCeGnPkiT8i9NSTwTakofef5xNUjyuekJMwOMPNHa4uss
J3L6eXTszx/Df1N5pGc4A5ucoXIk8Yzt5q+T5HPToJnfzBCrY7yH/F9nOZHW
z6Njl136wko7YeykXw0Jf/fk8Yxm3mzJ53+W53MTmfQ2sVTRSv51BgAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANSkqKkobIysrKzlndDqddFKP
xxPRXm63m/aifRMUlR6KkM7ocrmSdkYAABBJsp9Jd3Su9PT0SHfMy8ujHbOz
sxMRlSFer5d9MpFeSgAAIC4k2c8ZGRl0LofDEemOmZmZtGMy82eCLgfJ/MsC
AABEkunn0tJSdi5KTSPa0efzWZLKsmyfcLvdyTwvAACMhvUzSYkSyPT0dL4B
CdbwIKRNlmoSlOiymm3av+ByYzkwpdCRBqmpiohHplXssKz6wcxPPqd2scjp
dPRac0DaLC8vjyXzfF/DUjNbSxtHGjMAAMRIKD+zeq8e2ozsJ27Js2IR8U3m
Z3I4+1Ff3Ah1LoKdiwXJI+RruZk55GRyr/598aQUCb/ohNmMwa87mlYDAECi
MfQzaSqUMNMm3qQjGYZyHYf52el0sh/1aapepwyeaVNs9CNPg8OfTsyKRbhg
uXJ5NZvHlqYrZfDPBx05AABJRu9n3m8hbSxBZSVfepNrTZSYaHI6FHOgqDu+
MXNsmlHxuWgMnkWzigTByymak4oHZ46l84paprDZWXjrDHcXq9m8dZpSBu3F
3o/iniYAAMSC3s/8HUqMNX/UcwfyFJqnvhqt6cXI0+xQkfCSiKZczA3J3+FH
FnN+8YxcvPzGouhnMeGn+MnwYW478qsVenEAAJKM3s880dV3NuYb88oDF53m
1iGXKhcj92GoSHj+rKkksGxc1CM/smhy0c/i7no/G5a7Sdr0vmHHkkkjBwCA
RBDGz/puD3oH6u3HCOXnMFkoT8U1STurPIjlhRj9TMcXazUa9H1UDA8LAACJ
Jsn5cyg/80KEPk1l5QgxqY7RzwyPx0PO199M1I9thJ8BAJaQtPpzeD9zn2uO
w3vliZHExc8cr9dLFxd+VdJvGerCAQAACSXu/TcIw/4b4bNQHoZmBDe7aahx
Yyx+5kMCNc4XE36xCs0Te9wfBAAkmaT1f+YJavgw6OCUQvMOFexeniapjsXP
o0LOL4435DcNNR5G/zoAgFVEOn6QnGZm/KBoeOZA/o5hnUFzEL4Nq6hoitsx
+tlwgCGDTqfpwhFmWA0AACSUuMy/wbbkm1H2K5YL+Dbsx1Bz0PEZM+j/LH/m
tQWNM2P0MzsyhSHWnMnYfHyNCL9OYXw3ACA10Pt59F/JsPlCLinRPUZiYjQF
izmZ804DAEBcELNWns2KBQRxtjq+sV1yUd57BMUNAIDtMCw+i4glCNIyq2CE
qpPIBquZRzEhKgAAyECoe22sqKtJlVkKbZe+xPqhMQAAYC/Y+A6xox396HQ6
9XUMNraa1kb6CJXk43a7KU7MzA8AAAAAAAAAAAAAAAAAgEn5/83D7kI=
    "], {{0, 162.5083511235994}, {240.01233396716216`, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{143.9926, 143.9926},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240.01233396716216`, 162.5083511235994},
  PlotRange->{{0, 240.01233396716216`}, {0, 162.5083511235994}}]], "Output",
 CellContext->"Notebook$$24$657209`",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[509]=",
 CellID->639337057,ExpressionUUID->"73867084-1fdc-4349-8f4c-9516391b4c39"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Results", " ", "are", " ", "in", " ", "units", " ", "of", " ", 
   FractionBox[
    SuperscriptBox["\[Mu]m", "2"], "ms"]}], ",", 
  FractionBox["\[Mu]m", "ms"], ",", "ms", ",", " ", "\[Mu]m", " ", ",", 
  RowBox[{"and", "  ", "\[Mu]m"}], ",", " ", 
  RowBox[{"respectively", "."}]}]], "TechNoteText",
 CellID->8262017,ExpressionUUID->"0f829bd4-1b29-4acb-a999-b49ce4525b56"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"F2fFCSGetModel", "[", 
   RowBox[{"fcsdat", ",", 
    RowBox[{"{", "diff", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"vx", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", "/", "\[Tau]T"}], "}"}], ",", "w0", ",", "R0", ",", 
    "1.33"}], "]"}], "/.", 
  RowBox[{"fitresult", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellLabel->"In[510]:=",
 CellID->941399938,ExpressionUUID->"c7add41a-73c2-4f69-83f6-87c47f68f305"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnft3VFXa53tmfpkf51+YtVx2O67X6Vbs1m57fNtuu+2rPbw6Y7e97BEl
ihoUMahtbAWJiEQgJNySwgDhFoqbCYRLcZUUGG4FhECSIoSEEBIq5F65ViXz
kE3v7JxzqnLqevap/f2so6tS5/bsIvU5T56z9z7/fdrbU9P+8/e+973Z/5X+
N/Xl93/x7rsvf/gf/41+eH7m7BmvzZz+6m9nvjf9tenvPjbtv9CbT/+n733v
Ov139/UoAAAAAAAAAOhIAwAAW2G1NZNHqFZP+iFIu0GD4z5aLA8DG9h0A0nC
wAb6DST0c9EYpaWlUezr8/mK/kWobUI1VrZ/GvMbwM/YIJYNJAkDG4TaQB4/
O51Odr3IysqKYneHwzHpFSdqP8uALYIctUmcCDKO2CJOmwYpSdiUM3O7RuFn
t9sdqnYhIq2fNWmwIZYHaRJbxIkg44gt4rRpkJaH7fP5srOzRbtG6mc6QkZG
Rix+Tj4aIZvxMwBANaxVVlFRUXp6etpEIvWzWNmwqZ/D8NLcPbTE/bAAAPmx
VlmkYmbUzMxMrtmI/KypbNjFz6HQ2xh+BkBZLPcz5c+sxwX9P1I/88oGHSSW
+4PyEJGNAQCpjbXKouyXHMteR+HnvLw8tovT6eS7y+lnTWZr3sN8R3EXze6w
OgApiTwpZaR+drlc4vbR+Tk42NXf/N1Aq2e4p0mzjAQGRkNUDMKXEczsAj8D
ACbFpn6mrJvdWKT/e73eUdN+1pSpa84dYAKcdKlf8z+qv36cFu/an7J3Lm+a
Wlv8HC01Jel1e96+VvZO8/EFze6v2Nre2u3+a3vZayb80WAgjh+XBlSeAUgN
TN5NSzIR+Zl3yXM6nZrdI8qfzfvZ/MKy2VBr69b/7NqGf6/f/n+bytJuH8lg
GzOZD7ScvqtxAfPWFbdE5z0AUgM7+tnj8bAt2b1FBu8KQoQa5S2Dn81sfH3D
T2/unHrbNYP96K8rHfRdDA52mfwk4WcAUgM7+tmwT50e/Y4Gfr548tjyZ06s
eOrCqh9rlmuO+xPk5KiXpo2Pt5Q813Z0dqdnOeXbQ+01oT4iOBmAFEBxPzP6
BwO+jj6+NNzqulLfxpdTVbe+PX+j/GztiVNnaNl9sJyW/ftK9pRs3ebctMNZ
tG19NvNz8ar3tq6YRcvOZX+lZW/uVJK/e8WvyPYXV0+JwvZhtM9WNRY+eGvn
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
0rStaeu6eqq20IyT83Y/UVLx7rmrG293VlOObf4UlI2TqHN2/URzQFI3rUpc
0wAwj0k/83fYXHZ5eXlZY7hcrnhFEoufRTlnZmaG2kxzZYk61Nj9HMq6Jv2c
ksUNSlwpVT50/vNJ7/TlfPNo8fFpJ6+sam6/GJGT9fi6bi1e/0LOznt9ofnx
qxpK4tUuACLCvKa495IQVdR+1sjZsLLBkKe+wa0bqWnZjinj56Fhf32ru7xq
2aajf5s0Vc7f+/T+c5+QOfsGO+IYw8Z9l487HmMd7cTTUU4ex7MAEAVmlJWc
eZ6j87NYIQ81LIUThZ8TbcLo/BzpWQz3MnOoRFRXegfarjYf+fbSki3H/k6Z
6qRa3nDkL+7LKxJXc2i541+9eE79mvt2b35Qc2ooGliLPCllFH4W5Wymm5++
scN1le1z/tT+0fOdC183XJg/e9bMDbX4d6z078q/t5Su6S8vFZeBE2VD1WfY
EvA10xJsb434owmNRu/8RzO9+MK7V9RUjEF29DbW3nSxQ60qe8pkVXnnibcu
1Dt7+lpiPLsZlm8pr8n/twbHfSeKfpC7E4oGsqBXVpj6QEKJ1M+8rJGenm4y
w9c3lrTJ78rFsohlB/NL24wn2dWB/di1eCYJv3fzYmb7/iPbyfCDlSeG6y+T
2Ef8Bv0KTPo5CsKYOdSq4Eigy3/zhu9MVUNJRU1B2ekPzVQtNKky5dV0hBir
ypFS09C+aWkaH+6du2uKGNWVxj3JDAYAjl5ZGRkZpMooemWQMEmtUc8vGsbP
dEzN1HYUHu/qnJmZWaTDMAx9Y29WbIqLn5Oz3H7lx7dm/aLpg2ca5v65Ief/
Nea/dX3j+3XffOb9dlm1Z21dTQmZjS1MLKx3GV+iK2jw3ZvbL4oHP1VbePLK
qv3nPtl9as6WY3+PbvgeWw5fWFjdtC++VeVIyV5Typ/ufW7tD/JKfyrejkSP
DmAJemXxigF5ctKHDLI5RcXHYCXCz/pVdMa0sJgcP2gvP/NFk67zH1umP3r1
bW1Fd9WWKLWZuMVZPr28atnV5iPydDY+VXWrLPc5nkJXlr2Yt/uJ8c+w7CnW
jxqAZKJXFgmWUmiN7vhjYRmsf51mMz4SMDoi8nP4pyKa9/ONW9/lb3qksOjh
TWsmX7YUPPJNrnY5tHAKX4588UjFJ1PEhfnzUsY9Z15/a0rjG4nyM3+Hv9Z4
+/yHU45lTdmzdAo1ZMXWcP7UHDbGheS23T3jaGV2VUPJEhM5vCUEgiPZeauF
56rcf+XqJrEVm47+LclVFwD0ymJQVqy3dCiYmWMsXOuLGGFW6Qsa0dU3+F/r
CVrCi44kSVcHfoHYtuqu8F2LHmF7cb3TQmInx5o3tskt6cJR/tmUsiWPxMvP
pOINR/5SUvHut5eWsHesrVpERNmJuoqVT/IZ7e5UfFlRUyC2ji4xVscI1CKU
nxlkOYfDEUrU7OHd8j8WlhOqsVEkdaQdTXV30oUXh0Mt1259SxkmLUyP4uuT
V1aJ5qws/fDc5hkX8l+sWvJ8zcI/X/v4mRuzf3F7+k+iyL3Fpen1ey+2r3jE
sfGelAr2/3bNgT/QQuJ1lk+nhZLh/ec+IVlRVBfqnRQkBd/R2zgcHIzxU7UW
f//QqqWZ3M/X1j4yEhiga42oaPo3sjpMoBDh/cyh3FjzfFiZnwMbijj6OVKY
92I5l+jVUNsEO9uG6y8PnD7Yd2BTb3FOV+57HZ++eGfm01Hn250LX+/dvHjg
RFmg6epoio5bFNmw59zl/P/Jqxw91cUDQ910beJ+pquVjf4iAHbHpJ9TAzH5
F99PgnZM+jnU2ogi5BvzFyP+7uG6yoGK/f5d+ZHWQ/jS9tZT7MXg+ePBno5J
22JHWu741y95Y7wKvfV3o2NFMHEczd6zIScQACBeGJqKQ+mxWMJlfedEsrOz
reopHTWhGhtfP8dytOj8zBWq2djkXrS0f/xC22s/i0jXXPIstU4ZVm05WFfw
AFf0QMtperO8ahmqHCD5GCqLDf0QJxoynGhUMze+/CTnjwXRisnJMDV+jnQv
UeaD5472bsuLNLum1Lpr8UzNAW3Klfq2ktwXuJ9v7n1tdGzojTjvdMH+3w4N
+62OFKQ+emVR2swNzIvMoSaCjrq3syUkv5iT5AqA4elMClN/WQl2tt3VdXGO
xr1mFv+u/KHqMyNDg4bHl5zcgiKxo91wTxO92dx+UaxyuC+vsDpMkProlSXO
88ynD+V+zsjIEHs+2yuFjpefo6shJ+6M4TeLlxiD7a1M150LppsvhnQufN1f
uma4ocZGfnZfbDqx4imSM+vLcefkAvY+7zS4ZOxZAB29jdbGCVIejbLER6yK
08GJE/XTj+RtvpmNqtBR+NnQeNL6OWnxUGI8VOthyr0z6xkzor4z+/c9a+eT
4cWkWk6GhoMrl2XxFLq+8IcjgYHRsRmq8/c+zRW988RbVkcKUhyNsrh4KUMW
39f4eXRsmg7blTji5ecEYbvuEDwlDvia+8tLuwv+2T7nT5MXq1/7Wdfimf3H
drFOIHKy41DlhI52Vzax9680TpgjuuH2d9bGCVIbjbK4hzVzKev9zGfAiGVM
d5JJfv05ImznZ4amcMFc3bNm7uSufvUxae8ndvYMbMyZwf18bfOv+ari49O4
n9cffh6DvkHiCOVnjXX174faUmYk97NNCSNYcvW94obRGBlx6V7xwWDlidGg
RK5bu+0Qn9GOlv6b9/5ObOmoElPoyus7rY0TpDAm/awHfgYREAwM1Xp6t+W1
fzB10gJIfB9hEDUNt7rEGe2aysZ/efaezeR+zt/7tGZgOwDxQqMsp9NpsmMG
bcC2TIH5N0AyCTRd9e9YOWk6PVxXaXWkowVr1/HpOK6vuT/Qe4u939PXklvy
GFc0nrECEoRGWR6Ph1k3PT09TMcMWsX7byTn6YRxQey5bXUsqnOvm/SOlWHK
1B3zXx48d9TCIM9caalY+SRPoW+fXMhXHa3M5n5esedJeSayBqlBKFPxjhlh
HrfK+0hrunlIDrQsJ0O1nu6Cf7bNeNLY0p++aJWlA8GRr5d/wv1ct/Zh1tFu
dGwCQ9IyV/TJK6ssiRCkNnpl8ef6pY3Nh6/pPudyuTIzM/kGNipujMLPcjPi
7+4/VNz+8QshLX3+ePKj2n38Mnt0LFu6rmzhq/ikr0ihQYIwVJY4hDAM9ho8
OAo/24Sh6jNdObOMRyNmv5nk6Zi6/YPFOa/yKnTd5mf4KhKy2JEDKTSIO4bK
8vl8/PZfGDnbaOQgA362EeThUL2me9bON3yaeYJYt801oaNd8/iYFKTQIKGE
UVaoR1xlZmbyeTnsBfxsL8KNFp/5dP+R7ckJo+FW197cqdzPDaXT+SoSsliF
PlVbmJyQgCJMqiyv10s25g/1s+NjUzjws00ZbqjpXPi6QbljwfSArzkJARSs
XTc+HYfQ0W50YgqNvtAgviilLKUam3oMVp4wnM2jb1/CR0ixjna8Ct3i/oKv
0lShz1/bEuY4AESEUspSqrGpSTDQt2etfnZTyq4TPepw3cpPxzvaFY53tBud
mEIXup7FjBwgXiilLKUam8IEWhs7s9/UJtJvPTVQsT9xJ91/snpCR7vq8Wk3
KIUWhxNWN+1LXBhAKZRSlniX0+pYQKyQjfkja/nSs37ByEBCnjzl7x9yLpvO
/XxV6GhHHDr/OffzhiN/SUQAQCkUNJVSjVWBYHur/tlbHfNeSlCtw1ni4iVo
/uhYRkdvo1iFrm+1zaToQGaUUpZSjVWH/kPFmor0nZlPJ2KwYbOvR+xod61k
wq/T7lNzuJ+3u2fE/exAQZRSllKNVYrhhhrtzKWvPtZ3YFPcT7RhQyF/LqGm
o93tzmoxhaYf4352oBpKKUupxqrGyIC/e9VH2nlKC/4Z38cdXqrznVr58/FJ
oY9/Lq4V/Vx2+sM4nheoiVLKUqqxatK3Z62+61187xhuWD1v/C7h1xM62l1t
PsL9nPPNoz19LXE8L1AQpZSlVGOVRT+Gpf2j5+M4zPD4uTqxo92dyglVlELX
s1zR5VXL4nVSoCZKKUupxqpMoLmenDzhjuGsZ+L1QJah4eD25W9wP9du/I24
9vy1LdzPq8qewnBvEAtKKUupxirOiL+7c8H0CQNYZjw5VBufZ/3sPewWZ7Tz
N5XzVSRksQpd1VASlzMCNVFKWUo1FowGA90F/9R06hg4fTD2A/v7h/YvH+9o
593+N3FtedUyjFUBcUEpZSnVWMDo3bw4EYreubN4fMZRx31D7TXjZxxoE4d7
3/Cdif10QE2UUhbGd6uJfob/2BV9o7X7xIqnxicd3feeuLbs9IfczyUV78Z4
LqAgEpqKzTId3TMNzewrVWNBMuk/VBx3RRevXzruZ8cDwf52vqq5/aJYhe7y
34zxXEBN5FGW0+lk14usrKwE7StPY0HyISGTluOo6PPVzRdXT+GKbv4uV1y7
6ejfuJ+/vbQkttiBokiiLM1DwxO0rySNBVZxV9FxzaI353883tGu8CejwfGZ
nyuv7xQfTTg0nJBZ9UBqY7my9M+iNe/nSPe1vLHAcuKr6PKzV8SxKu1VW/kq
TUc7PFcFRIG1yioqKkpPT9c8f9akn6PYF34Go3EtdASCIzuWv8b9XF30a3Gt
6Od1B6fGI3agFtYqi3TKvJqZmelwOCLycxT7ws+Aoc+ih6qj7AXnOnZCHKvS
c/0oX9U70JbzzaOYFBpEjeV+phyYMuHRsXw4Uj9Hui/8DDiaLLptxpOB5voo
jjM2VuV57ucrm/9DXCt2tNv13dvxCR0og7XKcrvdPp+PvY7Uz1HsCz8Dkf4j
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
    "], {{0, 162.5083511235994}, {240.01233396716216`, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{143.9926, 143.9926},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240.01233396716216`, 162.5083511235994},
  PlotRange->{{0, 240.01233396716216`}, {0, 162.5083511235994}}]], "Output",
 CellContext->"Notebook$$24$657209`",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[510]=",
 CellID->547521867,ExpressionUUID->"bced614b-bf95-4d80-81d6-9f0ee57638b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"modeldatdat", "=", 
   RowBox[{
    RowBox[{"F2fFCSGetModel", "[", 
     RowBox[{"fcsdat", ",", 
      RowBox[{"{", "diff", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"vx", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "/", "\[Tau]T"}], "}"}], ",", "w0", ",", "R0", ",", 
      "1.33", ",", 
      RowBox[{"FOutput", "\[Rule]", "FData"}]}], "]"}], "/.", 
    RowBox[{"fitresult", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "modeldatdat", "]"}]}], "Input",
 CellLabel->"In[511]:=",
 CellID->50223339,ExpressionUUID->"de522191-940c-403f-bfc1-e47441c000cf"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3bGOOtt9wHGSNCmDojxAtH6CaGOlTbVK6yTaKleyFf8tGkeyI1mmu00k
qrRbuCdlGp6AF9gXQIrr8A7klz264zEDwwDDzDnD5yPuip07sDMLfPf8DwP8
9c/+7Sff/nQ2m/36z+PLT376m7//1a9++tt//Iv45p9/+evFL37583/9h1/+
+89/8fNf/d3P/iwW/vhPZrP/if/+//wBAGAqvn37NvYmAHDCt5qxtwWAP5Bl
gDzpM0Ce9BkgT/oMcL/39/e3t7erLrJcLmez2Xa7PbeCPgPcab1eR2mv6vPn
5+fsiz4DPEiK87V9fn191WeAB9nv9+/v79HYFNvufV6tVrF+uqw+A/QuZXax
WESou/c5zWysvugzwCN8fHys1+t0vnufY7D98vISSddngAF07HO9yfoMMIAu
fd7tdvP5fLlcpm/1mSL8/nc/itMNK1y8IAyjS59jhTSzkb7t0ucjfW4xdNNv
n48W1r89dx7udLHPHx8fsc5ms6mWGD8zDd99v4lTx+U39Lk6n86c+xbOudjn
+L+z805WWp95KvWe18936XOz1dJN5WKf1+v16o+lYi8Wizi/2+2aF9FnaKrS
nc6kU0ufm0kfc+sZw7WvHzyY34C+NUfg9XQfzgzFFXvyTvY5jZDPFVifYQBV
qA+1gJ+bG1HsSdJnKEh9buRoekSr6UKfYRhHuW4p9thbSi70GYan1XShzzAu
reYcfYZ8dGn12NvIcPQZ8lSvdFqi1c/GO29Azoyon5ksQ/6alU7LVXra9BnK
YkT9PPQZSqTSz0CfoXTmPaZKn2EaVHp69BmmRKWnRJ9hehw7PQ36DFOl0qXT
Z5i2ZqUTlc6fPsMzaH+Fy7jbxjn6DM+jfSw91lZxjj7Dc3KMR/68PxI8J0fi
5U+W4ZmpdM70GVDpPOkzkKh0bvQZqHMMXj70GWhS6RzoM3COuY5x6TPQTqXH
os9AO3MdY9FnoAuVHp4+A92Z6xiSPgPXMooehj4D1zLXMQzvjwTcRp8fTZaB
e6j04+gzcI/6XIdnDPulz8D9jKIfQZ+Bvqh0v/QZ6Is+90ufgX6pdF/0GeiX
PvdFn4FHqCot0TfTZ+AR9Pl++gw8Tn2ug2vpM/A4RtH38P4bwEPVX1o49rYU
RpaBh3I4x830GRiAUfQN9BkYgFH0DfQZGMyER9EfHx/L5bLLmuv1+v39/e3t
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
So+C6E9UKFoUWx5d8igAAAAAAGAY/wdJbunZ
    "], {{0, 155.00796568712556`}, {240.01233396716216`, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{143.9926, 143.9926},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240.01233396716216`, 155.00796568712556`},
  PlotRange->{{0, 240.01233396716216`}, {0, 155.00796568712556`}}]], "Output",
 CellContext->"Notebook$$24$657209`",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[512]=",
 CellID->111088546,ExpressionUUID->"6c044f05-bf3f-429f-9fcb-04065060f34d"]
}, Open  ]],

Cell["Change amplitudes manually:", "TechNoteText",
 CellID->1256900,ExpressionUUID->"fbe892c6-9224-47e4-a7a1-de598957231d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"logtimes", "=", 
   RowBox[{"fcsdat", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "All", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"aD", " ", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1.3"}], "}"}]}], " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "amplitudes", " ", "of", " ", "diffusion", " ", "term", " ", "of", " ", 
    "the", " ", "autocorrelations"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"aT", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "0", ",", "0"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "amplitudes", " ", "of", " ", "triplet", " ", "terms", " ", "for", " ", 
    "all", " ", "four", " ", "curves"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"offsets", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", "2"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"offsets", " ", "for", " ", "all", " ", "four", " ", "curves"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F2fFCSGetModel", "[", 
   RowBox[{"logtimes", ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"diff", ",", "aD"}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"vx", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "\[Tau]T"}], ",", "aT"}], "}"}], "}"}], ",", 
    "offsets", ",", "w0", ",", "R0", ",", "1.33", ",", 
    RowBox[{"FOutput", "\[Rule]", "FGraph"}]}], "]"}], "/.", 
  RowBox[{"fitresult", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]}], "Input",
 CellLabel->"In[513]:=",
 CellID->228759619,ExpressionUUID->"99d9b72a-6f7c-4508-845a-0cb24507f5ca"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[2], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
     0.0055000000000000005`], AbsoluteThickness[2], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
     0.0055000000000000005`], AbsoluteThickness[2], LineBox[CompressedData["
1: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
v2hpZaU0bY7WStk+5N4bKj2kmy/3fwEZdfzC
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
     0.0055000000000000005`], AbsoluteThickness[2], LineBox[CompressedData["
1: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
uk7SD6n3BIkPauRI/T8rtKyo
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"G(\[Tau])\"", TraditionalForm], None}, {
     FormBox["\"log(\[Tau]/ms)\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> Bold},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-4.000008685976498, 2.95999998574421}, {
    0, 16.457768969512394`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellContext->"Notebook$$24$657209`",
 CellLabel->"Out[517]=",
 CellID->3934368,ExpressionUUID->"0113f82a-02e5-4fa5-8665-7241cbb71bcf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["F2fFCSGetLinearCoefficients", "Subsection",
 CellID->402066769,ExpressionUUID->"a9a029b8-8677-4e88-92c6-f470e7271bd4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g11", ",", "g22", ",", "g12", ",", "g21"}], "}"}], "=", 
   RowBox[{
    RowBox[{"F2fFCSGetLinearCoefficients", "[", 
     RowBox[{"fcsdat", ",", 
      RowBox[{"{", "diff", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"vx", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "/", "\[Tau]T"}], "}"}], ",", "w0", ",", "R0", ",", 
      "1.33"}], "]"}], "/.", 
    RowBox[{"fitresult", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}]], "Input",
 CellLabel->"In[518]:=",
 CellID->988273009,ExpressionUUID->"6611833b-a4c0-4d25-95ff-76bfaadf28ad"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"components", ",", "coeff"}], "}"}], "=", "g11"}], 
  ";"}], "\[IndentingNewLine]", "coeff", "\[IndentingNewLine]", 
 RowBox[{"components", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "5"}], "]"}], "]"}]}], "Input",
 CellLabel->"In[519]:=",
 CellID->510103072,ExpressionUUID->"2889d5c6-2be8-4755-85c6-dbe8ae8fa3a7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.03583905532328405`", ",", "0.02475983962756745`", ",", 
   "1.001321816064835`"}], "}"}]], "Output",
 CellContext->"Notebook$$24$657209`",
 CellLabel->"Out[520]=",
 CellID->162750641,ExpressionUUID->"a8414605-5699-4b76-ac3e-f084b2520a15"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10.391528468695505`", ",", "0.9743909801041195`", ",", "1.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.388138309157005`", ",", "0.9618334632650059`", ",", "1.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.384750329333025`", ",", "0.9494377821082666`", ",", "1.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.381364526965802`", ",", "0.9372018509677286`", ",", "1.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.377980899800871`", ",", "0.9251236110563552`", ",", "1.`"}], 
    "}"}]}], "}"}]], "Output",
 CellContext->"Notebook$$24$657209`",
 CellLabel->"Out[521]=",
 CellID->486025025,ExpressionUUID->"f91d66d7-5833-4d67-9121-6144e352a15c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"coeff", ".", 
   RowBox[{"components", "\[Transpose]"}]}], "]"}]], "Input",
 CellLabel->"In[522]:=",
 CellID->748090972,ExpressionUUID->"b30e7950-6dbe-4362-b5c7-74bf220cc929"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdzQlQk3cexvHYgkBBUBAVOUoRUURYFFopcjwcisgZjgABQi7kkK6IUhGw
vmKrde3qeABSrwgKFusK2LLK2jatRxlQUQsIRbtRBATdWSo2O3iuO/v+Euaf
mUzm8z75vr/35GviMt8SCAQ9b77/+/3/ZzQw+Ne91qfTtYH8A4yHOZwcSiUb
o78peKuLmDwVdTftq3KSydMxyeZ5X4OIPAs1zvEBLxLIdkh2am+KiCc7wiXQ
e+FRIdkJj613HtbGkJ3h4vifcWE02QUX57d5N0aS5yNMvTloegR5AQzOXrAq
CScvRMyW6KMDYWQPRE1b03Q5lOwJs7oMp6Uh5EW4dCHL7psg8mLEfzmr3BNk
L9RWFnZ5+ZO9URU+/JdQX/L7yE77pPumD/kD5F0rnq19n7wE8stjr128yD64
EWj8gdKT/CE2Fj386LQ72RfJ7tX2ja7kpWivWWk+cx7ZDzkv95SGziH7A2Xy
lh3vkgMgvlo4MGBLDsSu/Z517jPJwPHSty98acmbA6wd6mLczGkPglVOwYm7
JrQH4eNJrjMbDGkPRlBAw6NjAtqDYbn/fqX6+R/8HgKrvPXtdlre3BvfLIlv
HKU9FLNabOcXP6I9FAPJkVXHBmhfBq9srtlQQ/syZNsMqDS9tC9H0dFPtyz7
hfblUD2PSvrjKu1hSLjasuHhFdrDYPmppL/zB9pXoNrIv3nqedpXoGXS46JX
jbSHI+p47+PaetrDMdc3X3ughvaVqCrmHlw8SPtKWFT/22/JftojUP/iTObY
TtojIOrZHlG6lfZI/JJ6ulVSTHskBuvtU7aupT0KOVafnzPMpj0Ka4te9j1O
pz0akXEW5wLiaY/GhpNdOatW0B4D/39m+L32oz0GuQ92jJgvoj0WIeIRzVJn
3ojF1yeHTUdn0P9jsa0k0XOxCW91LKy0zkLRs6d8L0TnjWC3dx/xhhDP/t5i
HtjHmxPCVGr7c34bb7UQP32hfW/2eerj8LnHjrJTtdTHIfbJ3D29+6iPg/L2
vjh7jvo4RNw7dHnPaurj0b55/2CFiPp4uKalmn0M6uMxbVpU721X6uNRe/xV
R7kl9QmY3OUULno2xvcJ+L3ecH3zPd5cApqeds9QtPJWJ+C+6uL16L/xFiRi
0M888sQ+6hNx50h30u4i6hMRnPDqjGE69Yn43r/b1SiIehGGtWP2B5ypF+Fc
p1vbj0bUi3C39G3FtyNP+F6E23NKSjZd4y1Iwj3uXoFxA28kYVHf+J28vby5
JAgrMrJ+W099EkIbLPL8k6hPxq1FHm09H1KfDEv/pu/K7KhPhuCrtYMFr3/n
+2SEXi+xOXuftyAFlkckC3CFN1IgOxW/LqaeN5eC2hN3gkZ3UZ+CA+uG/G3W
Uy+GRl3X3J9CvRjfclP81oF6MbwEK9Jb51EvBmcebjJmQX0qRGlHvA3GR/k+
Ff2HPus16+fNpSLokK+N/XXe6lS0jlQqfFp4C9Jwycd++po66tPg2X5N9GM5
9WlQqQy2+H9GfRoqmh1CNYXUp8MmVvLb2Szq0xFobGrWKKY+HVa5exW/RlOf
Dt+v94XMDaVegh86KoRf+FIvwTaTu80Gi6mX4C3/jQvKFlAvQeMUwwrtHOoz
sL3Q1j3WgfoMuGnzhjfZUJ+BfKlDfZ419RnoEi89Z2xJvRQLTeWbAyx4O0qx
3X2T7JkZvU+K8pr8DldT3lIpZiWdGWwxofdL8a/sE4GHjXmrpKh2n+f8kxHd
k2LGsd277cgaKe4m7fQ8Npnuy1DwTl7VcrKjDE9eBo0bkCFD9cUhg25Dui+D
z5VVHd+QORn6lhzcdZiskiF89XDWX8lqGZxmrAwpI2tkuDX26mAxWSBHbke2
pJDsKMepr9pa15Ihx/XyksQ1uvtyfJcmP/mR7r4cPZ7byvJ09+XYUWh9frXu
vhz5R7s8dNbI8Q/vkY5c3X0F+ku/36WzowI9m6fIdYYCs2s2hugsVSC8t8ZD
Z04Bp8rtjjqrFHjgajFTZ7UC1zp/nqqzRoHSPWfM9PeV+JOb5Tv6+0pUmhYY
6+8r8aJzg5H+vhIhsqHJ+vtKXNVW6q1SYvTSn/VWK2F7Q6y3Rol794V6CzJx
KyBab8dMPH0YqTcyMbRxgqWZ+EQ8wdybPW6CVZmQCCdYnQn7idZkYvpEC1bB
aqIdGYOxlDHHWMVYzVjDWJDF3GcMxlLGHGMVYzVjDWNBNnOfMRhLGXOMVYzV
jDWMBTnMfcZgLGXMMVYxVjPWMBbkMvcZg7GUMcdYxVjNWMNYsFrn/wJ+ItKp

     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.9792913533934494},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 216}, {0.9792913533934494, 1.3978701441498207`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellContext->"Notebook$$24$657209`",
 CellLabel->"Out[522]=",
 CellID->315100830,ExpressionUUID->"d77a3d9e-44dd-4c30-9948-dc330b58078b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, "RelatedGuide.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Related", " ", "Guides"}], "TutorialMoreAboutSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[TextData[ButtonBox["Fretica",
         BaseStyle->"Link",
         ButtonData->"paclet:Fretica/guide/Fretica"]], "TutorialMoreAbout",
         ExpressionUUID->"5dc8193a-ac42-41b5-840b-e06013eb6e87"]}]}
     }]}
  }]], "TutorialMoreAboutSection",ExpressionUUID->"4652a0ff-b589-4756-a837-\
48b2d397afa4"],

Cell[BoxData[""], "Input",ExpressionUUID->"2ae9826f-d6f9-405f-8007-3e52f833ff8c"]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell",ExpressionUUID->"6c14695f-d1d3-45bb-870e-564304e0e89e"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
Evaluator->"FreticaDocumentation",
WindowSize->{900., 604.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"Two-Focus FCS",
Visible->False,
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, "ExampleSection" -> {"0" -> Open}}, 
  "NewStyles" -> True, "CitationPopupData" -> {"", ""}, "ShowCitation" -> 
  False, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2022, 7, 26, 15, 38, 39.1557851}", 
    "history" -> {"", "", "", ""}, "context" -> "Fretica`", "keywords" -> {}, 
    "specialkeywords" -> {}, "tutorialcollectionlinks" -> {}, "index" -> True,
     "label" -> "Fretica Tech Note", "language" -> "en", "paclet" -> 
    "Fretica", "status" -> "None", "summary" -> 
    "Dertinger, Thomas, et al. \"Two-focus fluorescence correlation \
spectroscopy: A new tool for accurate and absolute diffusion measurements.\" \
ChemPhysChem 8.3 (2007): 433-443. Arbour, Tyler J., and J\[ODoubleDot]rg \
Enderlein. \"Application of dual-focus fluorescence correlation spectroscopy \
to microfluidic flow-velocity measurement.\" Lab on a Chip 10.10 (2010): \
1286-1292. Units are micrometer and milliseconds! A fit with one diffusive \
species, one triplet time and flow in x direction:", "synonyms" -> {}, 
    "tabletags" -> DocumentationBuild`Make`Private`tabletaggingrules$289649, 
    "title" -> "Two-Focus FCS", "titlemodifier" -> "", "windowtitle" -> 
    "Two-Focus FCS", "type" -> "Tech Note", "uri" -> 
    "Fretica/tutorial/Two-FocusFCS"}},
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (January 30, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> Notebook], 
   Cell[
    StyleData["Output"], CellContext -> Notebook], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> "13.2 for Microsoft Windows (64-bit) (January 30, 2023)",
   StyleDefinitions -> "Default.nb"],
ExpressionUUID->"d57a953a-9a70-402d-9ca6-7cbc3a94ea3e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "RasterizedOutput"->{
  Cell[436975, 8503, 19891, 331, 113, "Output",ExpressionUUID->"bf5fe3f9-ba74-4981-b1ac-d18599363bc6",
   CellTags->"RasterizedOutput",
   CellID->354417110],
  Cell[456869, 8836, 18384, 306, 183, "Output",ExpressionUUID->"73867084-1fdc-4349-8f4c-9516391b4c39",
   CellTags->"RasterizedOutput",
   CellID->639337057],
  Cell[476191, 9172, 18384, 306, 183, "Output",ExpressionUUID->"bced614b-bf95-4d80-81d6-9f0ee57638b3",
   CellTags->"RasterizedOutput",
   CellID->547521867],
  Cell[495300, 9502, 6963, 119, 176, "Output",ExpressionUUID->"6c044f05-bf3f-429f-9fcb-04065060f34d",
   CellTags->"RasterizedOutput",
   CellID->111088546]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"RasterizedOutput", 532255, 10249}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[585, 21, 3363, 77, 56, "AnchorBarGrid",ExpressionUUID->"049743fb-a7ba-4e95-b945-6c1b36c59bb3",
 CellID->1],
Cell[CellGroupData[{
Cell[3973, 102, 113, 1, 68, "TechNoteTitle",ExpressionUUID->"1d00ea36-dc40-48b7-9aba-29d6bf885399",
 CellID->295139048],
Cell[4089, 105, 2614, 58, 89, "TechNoteJumpBox",ExpressionUUID->"46ab00a1-c262-4ce0-99e9-bf3eca4e2288"],
Cell[6706, 165, 170, 3, 26, "Input",ExpressionUUID->"428a0fdf-a2e8-4762-ad66-99fd84142f10",
 CellID->876589],
Cell[CellGroupData[{
Cell[6901, 172, 113, 1, 80, "TechNoteSection",ExpressionUUID->"90b87b8d-3b8b-4aad-8aef-75cb35ed1ab6",
 CellID->395868266],
Cell[7017, 175, 933, 23, 124, "TechNoteText",ExpressionUUID->"d0cde6f0-bb70-439e-84f9-2edcb3107f1a",
 CellID->217847135]
}, Open  ]],
Cell[CellGroupData[{
Cell[7987, 203, 115, 1, 80, "TechNoteSection",ExpressionUUID->"292475cc-b2b9-48d2-8ec6-b6c0b1b1606e",
 CellID->301969416],
Cell[8105, 206, 187111, 3072, 180, "Input",ExpressionUUID->"2209a9d5-7f67-4342-a72a-6929d23b073e",
 CellID->19940794]
}, Open  ]],
Cell[CellGroupData[{
Cell[195253, 3283, 111, 1, 70, "TechNoteSection",ExpressionUUID->"b8ed1138-91b8-491f-87d9-01c21a8febf9",
 CellID->500366741],
Cell[CellGroupData[{
Cell[195389, 3288, 400, 7, 70, "Input",ExpressionUUID->"2894f379-d0e4-422f-beeb-57207db94e9c",
 CellID->361507117],
Cell[195792, 3297, 26215, 590, 70, "Output",ExpressionUUID->"50c3eb69-d013-4823-a203-0cb39fd197ac",
 CellID->254570389],
Cell[222010, 3889, 55046, 1194, 70, "Output",ExpressionUUID->"8f8f3c74-3210-470f-9028-2f8fa5a89257",
 CellID->184069178],
Cell[277059, 5085, 61872, 1270, 70, "Output",ExpressionUUID->"0f3e27d3-6215-4496-ba82-266c4c28d996",
 CellID->262126843],
Cell[338934, 6357, 26163, 588, 70, "Output",ExpressionUUID->"bbdd2512-069a-400b-8115-20d7ec970d13",
 CellID->527562754],
Cell[365100, 6947, 63081, 1317, 70, "Output",ExpressionUUID->"c69cec6c-87e7-4cc9-83ad-3a54375ad0b8",
 CellID->491931638]
}, Open  ]],
Cell[CellGroupData[{
Cell[428218, 8269, 262, 6, 70, "Input",ExpressionUUID->"2f4589c7-edd8-48b9-864b-8fd077c3dfdd",
 CellID->18270623],
Cell[428483, 8277, 444, 9, 51, "Output",ExpressionUUID->"d61b359b-36b8-43ee-8803-d6cd42b438e7",
 CellID->1016919625]
}, Open  ]],
Cell[428942, 8289, 138, 1, 70, "TechNoteText",ExpressionUUID->"0647a658-feb4-40f8-92d3-afb170c196a7",
 CellID->159627620],
Cell[CellGroupData[{
Cell[429105, 8294, 240, 5, 70, "Input",ExpressionUUID->"bfa57ff4-62b7-4076-86ca-5ba0acf35447",
 CellID->139809173],
Cell[429348, 8301, 164, 3, 35, "Output",ExpressionUUID->"904f40fe-0beb-4219-ad6c-c7dd7e6e67e6",
 CellID->1513915]
}, Open  ]],
Cell[CellGroupData[{
Cell[429549, 8309, 218, 5, 70, "Input",ExpressionUUID->"a5f7430b-d6d9-42d8-af91-e3fd31331489",
 CellID->12873871],
Cell[429770, 8316, 3782, 76, 70, "Output",ExpressionUUID->"04b976a8-91bb-461f-82bf-f2d256a7db08",
 CellID->372454391]
}, Open  ]],
Cell[CellGroupData[{
Cell[433589, 8397, 420, 10, 70, "Input",ExpressionUUID->"d4926a90-bd12-47c7-89ed-c0b2cac2a1e3",
 CellID->431958898],
Cell[434012, 8409, 213, 5, 35, "Output",ExpressionUUID->"ac9f20a8-0b0c-4518-a540-61cda5e89415",
 CellID->455811675],
Cell[434228, 8416, 213, 5, 35, "Output",ExpressionUUID->"aeeb46c7-b2a9-43ef-bfd8-b3386689f73b",
 CellID->236593230]
}, Open  ]],
Cell[434456, 8424, 369, 10, 70, "Input",ExpressionUUID->"d47985e7-5f93-4049-9145-99afb664fd3f",
 CellID->261711329],
Cell[434828, 8436, 739, 21, 70, "Input",ExpressionUUID->"04e428ab-d4aa-4010-91dc-8db35b4b0f2b",
 CellID->504061895],
Cell[435570, 8459, 361, 9, 70, "TechNoteText",ExpressionUUID->"0e1a6eb7-cd3e-4fcf-bdb3-d56649bce9b4",
 CellID->258606930],
Cell[CellGroupData[{
Cell[435956, 8472, 1016, 29, 70, "Input",ExpressionUUID->"b7eb9799-aee8-494e-adae-628e7167ff6d",
 CellID->7561618],
Cell[436975, 8503, 19891, 331, 113, "Output",ExpressionUUID->"bf5fe3f9-ba74-4981-b1ac-d18599363bc6",
 CellTags->"RasterizedOutput",
 CellID->354417110],
Cell[456869, 8836, 18384, 306, 183, "Output",ExpressionUUID->"73867084-1fdc-4349-8f4c-9516391b4c39",
 CellTags->"RasterizedOutput",
 CellID->639337057]
}, Open  ]],
Cell[475268, 9145, 408, 8, 70, "TechNoteText",ExpressionUUID->"0f829bd4-1b29-4acb-a999-b49ce4525b56",
 CellID->8262017],
Cell[CellGroupData[{
Cell[475701, 9157, 487, 13, 70, "Input",ExpressionUUID->"c7add41a-73c2-4f69-83f6-87c47f68f305",
 CellID->941399938],
Cell[476191, 9172, 18384, 306, 183, "Output",ExpressionUUID->"bced614b-bf95-4d80-81d6-9f0ee57638b3",
 CellTags->"RasterizedOutput",
 CellID->547521867]
}, Open  ]],
Cell[CellGroupData[{
Cell[494612, 9483, 685, 17, 70, "Input",ExpressionUUID->"de522191-940c-403f-bfc1-e47441c000cf",
 CellID->50223339],
Cell[495300, 9502, 6963, 119, 176, "Output",ExpressionUUID->"6c044f05-bf3f-429f-9fcb-04065060f34d",
 CellTags->"RasterizedOutput",
 CellID->111088546]
}, Open  ]],
Cell[502278, 9624, 124, 1, 70, "TechNoteText",ExpressionUUID->"fbe892c6-9224-47e4-a7a1-de598957231d",
 CellID->1256900],
Cell[CellGroupData[{
Cell[502427, 9629, 1726, 50, 70, "Input",ExpressionUUID->"99d9b72a-6f7c-4508-845a-0cb24507f5ca",
 CellID->228759619],
Cell[504156, 9681, 18441, 322, 184, "Output",ExpressionUUID->"0113f82a-02e5-4fa5-8665-7241cbb71bcf",
 CellID->3934368]
}, Open  ]],
Cell[CellGroupData[{
Cell[522634, 10008, 124, 1, 70, "Subsection",ExpressionUUID->"a9a029b8-8677-4e88-92c6-f470e7271bd4",
 CellID->402066769],
Cell[522761, 10011, 639, 17, 70, "Input",ExpressionUUID->"6611833b-a4c0-4d25-95ff-76bfaadf28ad",
 CellID->988273009],
Cell[CellGroupData[{
Cell[523425, 10032, 380, 10, 70, "Input",ExpressionUUID->"2889d5c6-2be8-4755-85c6-dbe8ae8fa3a7",
 CellID->510103072],
Cell[523808, 10044, 283, 7, 35, "Output",ExpressionUUID->"a8414605-5699-4b76-ac3e-f084b2520a15",
 CellID->162750641],
Cell[524094, 10053, 751, 20, 51, "Output",ExpressionUUID->"f91d66d7-5833-4d67-9121-6144e352a15c",
 CellID->486025025]
}, Open  ]],
Cell[CellGroupData[{
Cell[524882, 10078, 227, 5, 70, "Input",ExpressionUUID->"b30e7950-6dbe-4362-b5c7-74bf220cc929",
 CellID->748090972],
Cell[525112, 10085, 3639, 76, 169, "Output",ExpressionUUID->"d77a3d9e-44dd-4c30-9948-dc330b58078b",
 CellID->315100830]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[528812, 10168, 654, 15, 70, "TutorialMoreAboutSection",ExpressionUUID->"4652a0ff-b589-4756-a837-48b2d397afa4"],
Cell[529469, 10185, 81, 0, 70, "Input",ExpressionUUID->"2ae9826f-d6f9-405f-8007-3e52f833ff8c"]
}, Open  ]]
}, Open  ]],
Cell[529577, 10189, 78, 0, 70, "FooterCell",ExpressionUUID->"6c14695f-d1d3-45bb-870e-564304e0e89e"]
}
]
*)

