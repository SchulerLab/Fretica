(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    344445,       7844]
NotebookOptionsPosition[    330787,       7548]
NotebookOutlinePosition[    333103,       7607]
CellTagsIndexPosition[    333060,       7604]
WindowTitle->Fretica Settings
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell["FRETICA TECH NOTE", "PacletNameCell",
           TextAlignment->Center,ExpressionUUID->
           "34c4939c-6cc2-48b9-aba9-15eeaf85e214"], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center,ExpressionUUID->
         "2b33710b-9847-4d03-9de3-6142bc5ab8f9"],
        Background->RGBColor[
         0.3843137254901961, 0.4627450980392157, 0.7019607843137254],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[Cell[BoxData[
     TagBox[
      ActionMenuBox[
       FrameBox[Cell[TextData[{
         "URL",
         " ",
         Cell[BoxData[
          GraphicsBox[
           {GrayLevel[0.66667], Thickness[0.13], 
            LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
           AspectRatio->1,
           ImageSize->20,
           PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
          "3196ec08-5070-48eb-aa3c-bb8df15d10c5"]
        }],ExpressionUUID->"f254c60d-8a12-4599-addd-c4db7a97f3c9"],
        StripOnInput->False], {"\<\"Fretica/tutorial/FreticaSettings\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["Fretica/tutorial/FreticaSettings"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/Fretica/tutorial/\
FreticaSettings.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$282911], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"] <> 
            "Fretica/tutorial/FreticaSettings" <> ".html"], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"],
      MouseAppearanceTag["LinkHand"]]],
     LineSpacing->{1.4, 0},ExpressionUUID->
     "6361eac1-427b-4b21-93e1-d2a4b4d880c8"]], "AnchorBar",
     CacheGraphics->False,ExpressionUUID->
     "84a3483b-6a1a-4dbb-b6b3-d7070d5c3746"]}
  }]], "AnchorBarGrid",
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.65], {
      Scaled[0.34]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->1,ExpressionUUID->"0c9893fb-53ba-473a-b77f-5d5cf09d72a3"],

Cell[CellGroupData[{

Cell["Fretica Settings", "TechNoteTitle",
 CellID->45486241,ExpressionUUID->"6476b803-fabb-4e7b-b3a3-4117ca3e100f"],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{
      Cell["Lifetime Channel constraints"], 
      "paclet:Fretica/tutorial/FreticaSettings#105867729", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell[
       TextData[{"\nSet anisotropy L1,L2 values  (See ", 
         Cell[
          BoxData[
           TemplateBox[{
             Cell[
              TextData["Koshioka et al."]], 
             "https://doi.org/10.1366/0003702953963652"}, "WebLink", 
            BaseStyle -> {"TechNoteJumpBox"}]]], " for details)"}]], 
      "paclet:Fretica/tutorial/FreticaSettings#114426303", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
      Cell["Route correction matrix (RCM)"], 
      "paclet:Fretica/tutorial/FreticaSettings#502629797", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["Set donor and acceptor routes"], 
      "paclet:Fretica/tutorial/FreticaSettings#731716473", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
      Cell["Set acceptor direct excitation \[Alpha]"], 
      "paclet:Fretica/tutorial/FreticaSettings#381609110", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
      Cell["Set anisotropy routes"], 
      "paclet:Fretica/tutorial/FreticaSettings#300733649", 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.3843137254901961, 0.4627450980392157, 0.7019607843137254], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False], 
      StyleBox[
       GraphicsBox[{
         Thickness[0.18], 
         RGBColor[0.9686274509803922, 0.4666666666666667, 0.], 
         LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited, StripOnInput -> False]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]}
  }]], "TechNoteJumpBox",ExpressionUUID->"fb6ef772-f436-4f4f-85b7-\
8defe86c1cf7"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<Fretica`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->411065438,ExpressionUUID->"9136539c-1d35-4793-a234-8ebd28b91827"],

Cell[CellGroupData[{

Cell["Lifetime Channel constraints", "TechNoteSection",
 CellID->105867729,ExpressionUUID->"fe988322-77ea-483e-842b-19243e75e30e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FEnableChannelConstraints"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->732125508,ExpressionUUID->"8b80f083-bfb5-44c7-9f0a-a757bff49f44"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FEnableChannelConstraints[bool_Integer]\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    
                    RowBox[{
                    "FEnableChannelConstraints", "[", 
                    "Fretica`Private`bool_Integer", "]"}], ":=", 
                    RowBox[{"ExternalCall", "[", 
                    RowBox[{
                    RowBox[{"LinkObject", "[", 
                    
                    RowBox[{
                    "\"\\\"C:\\\\Users\\\\nette\\\\OneDrive\\\\Dokumente\\\\\
DNettelsArbeit\\\\FretticaDevelop\\\\Fretica\\\\Fretica64.exe\\\"\"", ",", 
                    "625", ",", "10"}], "]"}], ",", 
                    RowBox[{"CallPacket", "[", 
                    RowBox[{"14", ",", 
                    RowBox[{"{", "Fretica`Private`bool", "}"}]}], "]"}]}], 
                    "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"FEnableChannelConstraints", "[", 
                    RowBox[{"Fretica`Private`enable", ":", 
                    RowBox[{"True", "|", "False"}]}], "]"}], ":=", 
                    RowBox[{"If", "[", 
                    RowBox[{"Fretica`Private`enable", ",", 
                    RowBox[{"FEnableChannelConstraints", "[", "1", "]"}], ",", 
                    RowBox[{"FEnableChannelConstraints", "[", "0", "]"}]}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`FEnableChannelConstraints\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FEnableChannelConstraints[bool_Integer]\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FEnableChannelConstraints[bool_Integer]", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FEnableChannelConstraints, {
      Fretica`FEnableChannelConstraints[
         Pattern[Fretica`Private`bool, 
          Blank[Integer]]] :> ExternalCall[
         LinkObject[
         "\"C:\\Users\\nette\\OneDrive\\Dokumente\\DNettelsArbeit\\\
FretticaDevelop\\Fretica\\Fretica64.exe\"", 625, 10], 
         CallPacket[14, {Fretica`Private`bool}]], 
       Fretica`FEnableChannelConstraints[
         Pattern[Fretica`Private`enable, 
          Alternatives[True, False]]] :> If[Fretica`Private`enable, 
         Fretica`FEnableChannelConstraints[1], 
         Fretica`FEnableChannelConstraints[0]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Fretica`FEnableChannelConstraints"|>, False]]], "Output",
 CellLabel->"Out[2]=",
 CellID->185380859,ExpressionUUID->"8c8f2267-58e8-4da9-bbbc-aff17e36e5f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FSetChannelConstraints"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->288712573,ExpressionUUID->"724925fa-b6f3-4db2-a70b-56672b0df57b"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FSetChannelConstraints[route,{\[Null]ch1,ch2}] sets \
the lifetime channel constraints of route to {\[Null]ch1,ch2}.\\n \
FSetChannelConstraints[{\[Null]ch1,ch2}] sets the lifetime channel \
constraints of all detection routes to {\[Null]ch1,ch2}. \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FSetChannelConstraints", "[", 
                    RowBox[{
                    
                    RowBox[{
                    "Fretica`Private`route_", "?", 
                    "Fretica`Private`FValidRouteQ"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Fretica`Private`ch1_", "?", "FValidChannelQ"}], 
                    ",", 
                    RowBox[{"Fretica`Private`ch2_", "?", "FValidChannelQ"}]}],
                     "}"}]}], "]"}], ":=", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"Fretica`Private`FSetChannelConstraintsStr", "[", 
                    RowBox[{
                    RowBox[{"Fretica`Private`route", "-", "1"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`ch1", ",", 
                    "Fretica`Private`ch2"}], "}"}]}], "]"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"FSetChannelConstraints", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Fretica`Private`ch1_", "?", "FValidChannelQ"}], 
                    ",", 
                    RowBox[{"Fretica`Private`ch2_", "?", "FValidChannelQ"}]}],
                     "}"}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"FSetChannelConstraints", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`ch1", ",", 
                    "Fretica`Private`ch2"}], "}"}]}], "]"}], "&"}], ")"}], 
                    "/@", 
                    
                    RowBox[{
                    "Range", "[", "Fretica`Private`FNumberOfRoutes", 
                    "]"}]}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`FSetChannelConstraints\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FSetChannelConstraints[route,{\[Null]ch1,ch2}] sets \
the lifetime channel constraints of route to {\[Null]ch1,ch2}.\\n \
FSetChannelConstraints[{\[Null]ch1,ch2}] sets the lifetime channel \
constraints of all detection routes to {\[Null]ch1,ch2}. \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FSetChannelConstraints[route,{\[Null]ch1,ch2}] sets the lifetime channel \
constraints of route to {\[Null]ch1,ch2}.\n \
FSetChannelConstraints[{\[Null]ch1,ch2}] sets the lifetime channel \
constraints of all detection routes to {\[Null]ch1,ch2}. ", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FSetChannelConstraints, {
      Fretica`FSetChannelConstraints[
         PatternTest[
          Pattern[Fretica`Private`route, 
           Blank[]], Fretica`Private`FValidRouteQ], {
          PatternTest[
           Pattern[Fretica`Private`ch1, 
            Blank[]], Fretica`FValidChannelQ], 
          PatternTest[
           Pattern[Fretica`Private`ch2, 
            Blank[]], Fretica`FValidChannelQ]}] :> ToExpression[
         Fretica`Private`FSetChannelConstraintsStr[
         Fretica`Private`route - 1, {
          Fretica`Private`ch1, Fretica`Private`ch2}]], 
       Fretica`FSetChannelConstraints[{
          PatternTest[
           Pattern[Fretica`Private`ch1, 
            Blank[]], Fretica`FValidChannelQ], 
          PatternTest[
           Pattern[Fretica`Private`ch2, 
            Blank[]], Fretica`FValidChannelQ]}] :> 
       Map[Fretica`FSetChannelConstraints[#, {
          Fretica`Private`ch1, Fretica`Private`ch2}]& , 
         Range[Fretica`Private`FNumberOfRoutes]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Fretica`FSetChannelConstraints"|>, False]]], "Output",
 CellLabel->"Out[3]=",
 CellID->139736839,ExpressionUUID->"8b94a357-4f30-480c-be8a-035f820e8fc3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FGetChannelConstraints"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->186345528,ExpressionUUID->"e34f20da-eea5-459f-af5e-d526541ead1b"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:Fretica/ref/FGetChannelConstraints",
              ButtonNote->"paclet:Fretica/ref/FGetChannelConstraints"],
             "\"paclet:Fretica/ref/FGetChannelConstraints\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FGetChannelConstraints[route] returns the lifetime \
channel constraints of route.\\n FGetChannelConstraints[] returns a list of \
lifetime channel constraints of all detection routes. \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FGetChannelConstraints", "[", "]"}], ":=", 
                    RowBox[{"FGetChannelConstraints", "/@", 
                    
                    RowBox[{
                    "Range", "[", "Fretica`Private`FNumberOfRoutes", 
                    "]"}]}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"FGetChannelConstraints", "[", 
                    
                    RowBox[{
                    "Fretica`Private`route_", "?", 
                    "Fretica`Private`FValidRouteQ"}], "]"}], ":=", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"Fretica`Private`FGetChannelConstraintsStr", "[", 
                    RowBox[{"Fretica`Private`route", "-", "1"}], "]"}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:Fretica/ref/FGetChannelConstraints", 
                    "paclet:Fretica/ref/FGetChannelConstraints", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`FGetChannelConstraints\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:Fretica/ref/FGetChannelConstraints",
              ButtonNote->"paclet:Fretica/ref/FGetChannelConstraints"],
             "\"paclet:Fretica/ref/FGetChannelConstraints\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FGetChannelConstraints[route] returns the lifetime \
channel constraints of route.\\n FGetChannelConstraints[] returns a list of \
lifetime channel constraints of all detection routes. \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FGetChannelConstraints[route] returns the lifetime channel constraints \
of route.\n FGetChannelConstraints[] returns a list of lifetime channel \
constraints of all detection routes. ", 
    "Documentation" -> <|
     "Local" -> "paclet:Fretica/ref/FGetChannelConstraints"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FGetChannelConstraints, {
      Fretica`FGetChannelConstraints[] :> Map[Fretica`FGetChannelConstraints, 
         Range[Fretica`Private`FNumberOfRoutes]], 
       Fretica`FGetChannelConstraints[
         PatternTest[
          Pattern[Fretica`Private`route, 
           Blank[]], Fretica`Private`FValidRouteQ]] :> ToExpression[
         Fretica`Private`FGetChannelConstraintsStr[
         Fretica`Private`route - 1]]}], "SubValues" -> None, "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "Fretica`FGetChannelConstraints"|>, 
   False]]], "Output",
 CellLabel->"Out[4]=",
 CellID->16944426,ExpressionUUID->"42656f6d-0ea2-4c6b-acbe-3f8da7d27070"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Route correction matrix (RCM)", "TechNoteSection",
 CellID->502629797,ExpressionUUID->"52eeb195-742c-4a30-b7c1-b9eaed93069b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FGetRCM"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->555164524,ExpressionUUID->"bf087298-c711-4c7e-9e98-e9961e1a6d09"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:Fretica/ref/FGetRCM",
              ButtonNote->"paclet:Fretica/ref/FGetRCM"],
             "\"paclet:Fretica/ref/FGetRCM\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FGetRCM[] returns the currently used detection \
route correction matrix. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FGetRCM", "[", "]"}], ":=", 
                    RowBox[{"Fretica`Private`FGetRCMStr", "[", "]"}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:Fretica/ref/FGetRCM", 
                    "paclet:Fretica/ref/FGetRCM", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`FGetRCM\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:Fretica/ref/FGetRCM",
              ButtonNote->"paclet:Fretica/ref/FGetRCM"],
             "\"paclet:Fretica/ref/FGetRCM\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FGetRCM[] returns the currently used detection \
route correction matrix. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FGetRCM[] returns the currently used detection route correction matrix. \
", "Documentation" -> <|"Local" -> "paclet:Fretica/ref/FGetRCM"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FGetRCM, {
      Fretica`FGetRCM[] :> Fretica`Private`FGetRCMStr[]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "Fretica`FGetRCM"|>, 
   False]]], "Output",
 CellLabel->"Out[5]=",
 CellID->638620159,ExpressionUUID->"eb6a6fa3-ad16-461b-a060-0804f4f37c23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FSetRCM"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->107603970,ExpressionUUID->"5b83755f-1ec9-4757-bdc0-22c3b6e6c417"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:Fretica/ref/FSetRCM",
              ButtonNote->"paclet:Fretica/ref/FSetRCM"],
             "\"paclet:Fretica/ref/FSetRCM\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FSetRCM[rcm] sets the detection route correction \
matrix (RCM) used for photon burst identification and photon burst count \
correction for quantum yields, detection efficiency, and detection route \
crosstalk.\\nFSetRCM[filename] sets the RCM saved in filename\\nFSetRCM[] \
opens a dialog window for choosing RCM file. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FSetRCM", "[", "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`fn", "=", 
                    RowBox[{"SystemDialogInput", "[", 
                    RowBox[{"\"FileOpen\"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"NotebookDirectory", "[", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Alle Files\"", "\[Rule]", 
                    RowBox[{"{", "\"*\"", "}"}]}], "}"}]}], "}"}]}], "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"Fretica`Private`fn", "===", "$Canceled"}], ",", 
                    "Fretica`Private`fn", ",", 
                    RowBox[{"FSetRCM", "[", "Fretica`Private`fn", "]"}]}], 
                    "]"}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"FSetRCM", "[", 
                    RowBox[{"Fretica`Private`rcm_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MatrixQ", "[", 
                    RowBox[{"#1", ",", "NumberQ"}], "]"}], "&&", 
                    RowBox[{"SameQ", "@@", 
                    RowBox[{"Dimensions", "[", "#1", "]"}]}]}], "&"}], 
                    ")"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Fretica`Private`dim", "=", 
                    RowBox[{"Length", "[", "Fretica`Private`rcm", "]"}]}], 
                    ",", 
                    RowBox[{"Fretica`Private`newrcm", "=", 
                    RowBox[{"PadRight", "[", 
                    RowBox[{
                    RowBox[{"N", "[", "Fretica`Private`rcm", "]"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`FNumberOfRoutes", ",", 
                    "Fretica`Private`FNumberOfRoutes"}], "}"}]}], "]"}]}], 
                    ",", "Fretica`Private`i"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"Fretica`Private`dim", "<", 
                    "Fretica`Private`FNumberOfRoutes"}], ",", 
                    RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"Fretica`Private`i", "=", 
                    RowBox[{"Fretica`Private`dim", "+", "1"}]}], ",", 
                    
                    RowBox[{"Fretica`Private`i", "\[LessEqual]", 
                    "Fretica`Private`FNumberOfRoutes"}], ",", 
                    RowBox[{"Fretica`Private`i", "++"}], ",", 
                    RowBox[{
                    RowBox[{"Fretica`Private`newrcm", "\[LeftDoubleBracket]", 
                    RowBox[{"Fretica`Private`i", ",", "Fretica`Private`i"}], 
                    "\[RightDoubleBracket]"}], "=", "1"}]}], "]"}]}], "]"}], 
                    ";", 
                    
                    RowBox[{"Fretica`Private`FSetRCMStr", "[", 
                    "Fretica`Private`newrcm", "]"}]}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    
                    RowBox[{
                    "FSetRCM", "[", "Fretica`Private`filename_String", "]"}], 
                    ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Fretica`Private`rcm", ",", 
                    "Fretica`Private`fn"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Fretica`Private`fn", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"DirectoryQ", "[", "Fretica`Private`filename", 
                    "]"}], ",", 
                    RowBox[{"SystemDialogInput", "[", 
                    RowBox[{"\"FileOpen\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`filename", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Alle Files\"", "\[Rule]", 
                    RowBox[{"{", "\"*\"", "}"}]}], "}"}]}], "}"}]}], "]"}], 
                    ",", "Fretica`Private`filename"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FileExistsQ", "[", "Fretica`Private`fn", "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Fretica`Private`FPLoadRCM", "[", 
                    RowBox[{"StringReplace", "[", 
                    RowBox[{
                    
                    RowBox[{"ExpandFileName", "[", "Fretica`Private`filename",
                     "]"}], ",", 
                    RowBox[{"\"\\\\\"", "\[Rule]", "\"/\""}]}], "]"}], "]"}], 
                    ";", 
                    RowBox[{"FGetRCM", "[", "]"}]}], ",", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"FSetRCM", "::", "filenotexist"}], "MessageName"],
                     ",", "Fretica`Private`filename"}], "]"}]}], "]"}]}]}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:Fretica/ref/FSetRCM", 
                    "paclet:Fretica/ref/FSetRCM", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`FSetRCM\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:Fretica/ref/FSetRCM",
              ButtonNote->"paclet:Fretica/ref/FSetRCM"],
             "\"paclet:Fretica/ref/FSetRCM\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FSetRCM[rcm] sets the detection route correction \
matrix (RCM) used for photon burst identification and photon burst count \
correction for quantum yields, detection efficiency, and detection route \
crosstalk.\\nFSetRCM[filename] sets the RCM saved in filename\\nFSetRCM[] \
opens a dialog window for choosing RCM file. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FSetRCM[rcm] sets the detection route correction matrix (RCM) used for \
photon burst identification and photon burst count correction for quantum \
yields, detection efficiency, and detection route crosstalk.\n\
FSetRCM[filename] sets the RCM saved in filename\nFSetRCM[] opens a dialog \
window for choosing RCM file. ", 
    "Documentation" -> <|"Local" -> "paclet:Fretica/ref/FSetRCM"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FSetRCM, {
      Fretica`FSetRCM[] :> 
       Module[{Fretica`Private`fn = SystemDialogInput["FileOpen", {
             NotebookDirectory[], {"Alle Files" -> {"*"}}}]}, 
         If[Fretica`Private`fn === $Canceled, Fretica`Private`fn, 
          Fretica`FSetRCM[Fretica`Private`fn]]], Fretica`FSetRCM[
         PatternTest[
          Pattern[Fretica`Private`rcm, 
           Blank[]], And[
           MatrixQ[#, NumberQ], 
           Apply[SameQ, 
            Dimensions[#]]]& ]] :> 
       Module[{Fretica`Private`dim = Length[Fretica`Private`rcm], 
          Fretica`Private`newrcm = PadRight[
            N[Fretica`Private`rcm], {
            Fretica`Private`FNumberOfRoutes, 
             Fretica`Private`FNumberOfRoutes}], Fretica`Private`i}, 
         If[Fretica`Private`dim < Fretica`Private`FNumberOfRoutes, 
           For[
           Fretica`Private`i = Fretica`Private`dim + 1, Fretica`Private`i <= 
            Fretica`Private`FNumberOfRoutes, 
            Increment[Fretica`Private`i], 
            Part[Fretica`Private`newrcm, Fretica`Private`i, 
              Fretica`Private`i] = 1]]; 
         Fretica`Private`FSetRCMStr[Fretica`Private`newrcm]], Fretica`FSetRCM[
         Pattern[Fretica`Private`filename, 
          Blank[String]]] :> 
       Module[{Fretica`Private`rcm, Fretica`Private`fn}, 
         Fretica`Private`fn = If[
            DirectoryQ[Fretica`Private`filename], 
            SystemDialogInput[
            "FileOpen", {Fretica`Private`filename, {"Alle Files" -> {"*"}}}], 
            Fretica`Private`filename]; If[
           FileExistsQ[Fretica`Private`fn], Fretica`Private`FPLoadRCM[
             StringReplace[
              ExpandFileName[Fretica`Private`filename], "\\" -> "/"]]; 
           Fretica`FGetRCM[], 
           Message[
            MessageName[Fretica`FSetRCM, "filenotexist"], 
            Fretica`Private`filename]]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "Fretica`FSetRCM"|>, 
   False]]], "Output",
 CellLabel->"Out[6]=",
 CellID->176833631,ExpressionUUID->"c4b9773f-e63f-4f53-8dcf-2c72c65dcd86"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FGetRCM", "[", "]"}], "//", "MatrixForm"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->201886321,ExpressionUUID->"baf82b83-e563-4f44-9f30-1926c520c984"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`", "0.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "1.`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "1.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "1.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "1.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellContext->"Notebook$$61$938943`",
 CellLabel->"Out[4]//MatrixForm=",
 CellID->829713366,ExpressionUUID->"cbb28b09-f990-41d6-bd84-bd78a55b4c3e"]
}, Open  ]],

Cell["\<\
To FSetRCM one can pass a rcm matrix, a file name of a rcm matrix.\
\>", "TechNoteText",
 CellID->590694514,ExpressionUUID->"31a14413-9485-4d0d-8f43-5a0254875350"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FSetRCM", "[", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", 
        RowBox[{"-", "0.06"}], "0", "0"},
       {
        RowBox[{"-", "0.008"}], "1.24", "0", "0"},
       {"0", "0", "1", "0"},
       {"0", "0", "0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], "]"}], "//", "MatrixForm"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->168253401,ExpressionUUID->"e50da5f7-7db2-4043-a9b8-c123efc32ccf"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`", 
      RowBox[{"-", "0.06`"}], "0.`", "0.`", "0.`", "0.`"},
     {
      RowBox[{"-", "0.008`"}], "1.24`", "0.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "1.`", "0.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "1.`", "0.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "1.`", "0.`"},
     {"0.`", "0.`", "0.`", "0.`", "0.`", "1.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellContext->"Notebook$$61$938943`",
 CellLabel->"Out[5]//MatrixForm=",
 CellID->200292851,ExpressionUUID->"78d3d71a-27c6-43ea-be26-7de3f14aa8b3"]
}, Open  ]],

Cell["\<\
A file-opening dialog pops up when a directory name is passed:\
\>", "TechNoteText",
 CellID->957494205,ExpressionUUID->"2f80e498-6aa8-4f9f-b6c5-4f079952119c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FSetRCM", "[", "\"\<V:\\\\Common\\\\Calibration\\\\RCM\>\"", 
  "]"}]], "Input",
 CellLabel->"In[9]:=",
 CellID->9893814,ExpressionUUID->"a6c539cb-481c-475d-b301-32ca6b3fee57"],

Cell[BoxData[
 TemplateBox[{
  "FSetRCM", "filenotexist", 
   "\"The file \
\\\"\\!\\(\\*RowBox[{\\\"\\\\\\\"V:\\\\\\\\\\\\\\\\Common\\\\\\\\\\\\\\\\\
Calibration\\\\\\\\\\\\\\\\RCM\\\\\\\"\\\"}]\\)\\\" does not exist.\"", 2, 9, 
   17, 31202056048904044099, "FreticaDocumentation", "Fretica`FSetRCM"},
  "MessageTemplate2"]], "Message", "MSG",
 CellContext->"Notebook$$61$938943`",
 CellLabel->"During evaluation of In[9]:=",
 CellID->328074284,ExpressionUUID->"ccbda1da-c010-4dab-bf8b-2b3e816b3bdb"]
}, Open  ]],

Cell["Or when no parameter is applied:", "TechNoteText",
 CellID->423030168,ExpressionUUID->"643cfae6-e22c-45c6-badf-5c03deb5cf09"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FSetRCM", "[", "]"}], "//", "MatrixForm"}]], "Input",
 CellLabel->"In[10]:=",
 CellID->302269926,ExpressionUUID->"7f65bc11-3040-47c9-bcc6-bf43769ed4f6"],

Cell[BoxData[
 TagBox["$Canceled",
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellContext->"Notebook$$61$938943`",
 CellLabel->"Out[10]//MatrixForm=",
 CellID->276140993,ExpressionUUID->"a9ee5feb-7465-4bd7-94c3-6cb9ed28f30d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Set acceptor direct excitation \[Alpha]", "TechNoteSection",
 CellID->381609110,ExpressionUUID->"73b41540-27d6-4faa-a756-6c680d9e9fe6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "FGetDirectAcceptorExcitation"}], "\[IndentingNewLine]", 
 RowBox[{"?", "FSetDirectAcceptorExcitation"}]}], "Input",
 CellLabel->"In[6]:=",
 CellID->364047212,ExpressionUUID->"cd4266f5-e5b8-40cf-bab6-e8b322d12cce"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FGetDirectAcceptorExcitation[] returns the fraction \
\[Alpha] of direct acceptor excitation, i.e. \
\[Alpha]=\[Epsilon]A/(\[Epsilon]D+\[Epsilon]A), where \[Epsilon]D and \
\[Epsilon]A are the donor and acceptor extinction coefficients, respectively, \
at the wavelength of donor excitation. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FGetDirectAcceptorExcitation", "[", "]"}], ":=", 
                    RowBox[{"ExternalCall", "[", 
                    RowBox[{
                    RowBox[{"LinkObject", "[", 
                    
                    RowBox[{
                    "\"\\\"C:\\\\Users\\\\nette\\\\OneDrive\\\\Dokumente\\\\\
DNettelsArbeit\\\\FretticaDevelop\\\\Fretica\\\\Fretica64.exe\\\"\"", ",", 
                    "625", ",", "10"}], "]"}], ",", 
                    RowBox[{"CallPacket", "[", 
                    RowBox[{"34", ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"Fretica`FGetDirectAcceptorExcitation\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FGetDirectAcceptorExcitation[] returns the fraction \
\[Alpha] of direct acceptor excitation, i.e. \
\[Alpha]=\[Epsilon]A/(\[Epsilon]D+\[Epsilon]A), where \[Epsilon]D and \
\[Epsilon]A are the donor and acceptor extinction coefficients, respectively, \
at the wavelength of donor excitation. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FGetDirectAcceptorExcitation[] returns the fraction \[Alpha] of direct \
acceptor excitation, i.e. \[Alpha]=\[Epsilon]A/(\[Epsilon]D+\[Epsilon]A), \
where \[Epsilon]D and \[Epsilon]A are the donor and acceptor extinction \
coefficients, respectively, at the wavelength of donor excitation. ", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FGetDirectAcceptorExcitation, {
      Fretica`FGetDirectAcceptorExcitation[] :> ExternalCall[
         LinkObject[
         "\"C:\\Users\\nette\\OneDrive\\Dokumente\\DNettelsArbeit\\\
FretticaDevelop\\Fretica\\Fretica64.exe\"", 625, 10], 
         CallPacket[34, {}]]}], "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> 
    "Fretica`FGetDirectAcceptorExcitation"|>, False]]], "Output",
 CellLabel->"Out[6]=",
 CellID->464493119,ExpressionUUID->"f1c07c37-e246-4e9f-adb0-b72963e92d9c"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FSetDirectAcceptorExcitation[\[Alpha]] sets the \
fraction of direct acceptor excitation to \[Alpha]. \[Alpha] is defined by \
\[Alpha]=\[Epsilon]A/(\[Epsilon]D+\[Epsilon]A), where \[Epsilon]D and \
\[Epsilon]A are the donor and acceptor extinction coefficients, respectively, \
at the wavelength of donor excitation. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FSetDirectAcceptorExcitation", "[", 
                    RowBox[{"Fretica`Private`value_", "?", "NumberQ"}], "]"}],
                     ":=", 
                    
                    RowBox[{
                    "Fretica`Private`FPSetDirectAcceptorExcitation", "[", 
                    RowBox[{"N", "[", "Fretica`Private`value", "]"}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"Fretica`FSetDirectAcceptorExcitation\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FSetDirectAcceptorExcitation[\[Alpha]] sets the \
fraction of direct acceptor excitation to \[Alpha]. \[Alpha] is defined by \
\[Alpha]=\[Epsilon]A/(\[Epsilon]D+\[Epsilon]A), where \[Epsilon]D and \
\[Epsilon]A are the donor and acceptor extinction coefficients, respectively, \
at the wavelength of donor excitation. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FSetDirectAcceptorExcitation[\[Alpha]] sets the fraction of direct \
acceptor excitation to \[Alpha]. \[Alpha] is defined by \
\[Alpha]=\[Epsilon]A/(\[Epsilon]D+\[Epsilon]A), where \[Epsilon]D and \
\[Epsilon]A are the donor and acceptor extinction coefficients, respectively, \
at the wavelength of donor excitation. ", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FSetDirectAcceptorExcitation, {
      Fretica`FSetDirectAcceptorExcitation[
         PatternTest[
          Pattern[Fretica`Private`value, 
           Blank[]], NumberQ]] :> 
       Fretica`Private`FPSetDirectAcceptorExcitation[
         N[Fretica`Private`value]]}], "SubValues" -> None, "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> 
    "Fretica`FSetDirectAcceptorExcitation"|>, False]]], "Output",
 CellLabel->"Out[7]=",
 CellID->333392387,ExpressionUUID->"36e9bc01-3395-446e-a39d-52b5fcfb07fb"]
}, Open  ]],

Cell[TextData[{
 "The acceptor direct excitation \[Alpha] is defined by \n\t",
 Cell[BoxData[
  RowBox[{"\[Alpha]", "=", 
   FractionBox[
    RowBox[{
     SubscriptBox["\[Epsilon]", "A"], 
     RowBox[{"(", 
      SubscriptBox["\[Lambda]", "exD"], ")"}]}], 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Epsilon]", "D"], 
      RowBox[{"(", 
       SubscriptBox["\[Lambda]", "exD"], ")"}]}], "+", 
     RowBox[{
      SubscriptBox["\[Epsilon]", "A"], 
      RowBox[{"(", 
       SubscriptBox["\[Lambda]", "exD"], ")"}]}]}]]}]],ExpressionUUID->
  "7f224a9c-34a4-4c0a-a0e6-1c475df4da46"],
 ",\n where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Epsilon]", "D"], TraditionalForm]],ExpressionUUID->
  "6d9978d6-248a-45e5-a31c-d6f2bf656ca1"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Epsilon]", "A"], TraditionalForm]],ExpressionUUID->
  "d2fe8cd3-c115-4173-92a9-41b85e2bb1d7"],
 "are the extinction  coefficients of the donor and acceptor dyes. ",
 Cell[BoxData[
  SubscriptBox["\[Lambda]", "exD"]],ExpressionUUID->
  "574fc2bd-59dd-4311-8bd1-34b7d57f4b12"],
 " is the wavelength of the donor excitation light."
}], "TechNoteText",
 CellID->216708217,ExpressionUUID->"dc3c26f5-ec8e-4e7d-83ae-470f4954bf79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FGetDirectAcceptorExcitation", "[", "]"}]], "Input",
 CellLabel->"In[8]:=",
 CellID->66051976,ExpressionUUID->"eb30dda5-05c6-46be-bc29-b45a1663bd32"],

Cell[BoxData["0.048`"], "Output",
 CellContext->"Notebook$$61$938943`",
 CellLabel->"Out[8]=",
 CellID->345235491,ExpressionUUID->"0cd2ffb2-a4df-4122-8fe3-84a9ab260f6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FSetDirectAcceptorExcitation", "[", "0.05", "]"}]], "Input",
 CellLabel->"In[9]:=",
 CellID->37090089,ExpressionUUID->"9a26b257-a9f6-48a9-a228-672fab2685ca"],

Cell[BoxData["0.05`"], "Output",
 CellContext->"Notebook$$61$938943`",
 CellLabel->"Out[9]=",
 CellID->233072981,ExpressionUUID->"5db3d722-9353-4ed9-9f71-74a004b9034f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "\nSet anisotropy L1,L2 values  (See ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Koshioka et al."]], "https://doi.org/10.1366/0003702953963652"},
   "WebLink",
   BaseStyle->{"TechNoteSection"}]],ExpressionUUID->
  "2f219732-8ce0-424d-b06b-66fd71418af9"],
 " for details)"
}], "TechNoteSection",
 CellID->114426303,ExpressionUUID->"ddb09d9e-d7e0-48f6-a042-54adf03ddd73"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "FGetAnisotropyL1"}], "\[IndentingNewLine]", 
 RowBox[{"?", "FGetAnisotropyL2"}], "\[IndentingNewLine]", 
 RowBox[{"?", "FSetAnisotropyL1"}], "\[IndentingNewLine]", 
 RowBox[{"?", "FSetAnisotropyL2"}]}], "Input",
 CellLabel->"In[10]:=",
 CellID->1025120174,ExpressionUUID->"2994ea97-d946-4760-8eaf-557a2f8aa615"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"FGetAnisotropyL1[]\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FGetAnisotropyL1", "[", "]"}], ":=", 
                    RowBox[{"ExternalCall", "[", 
                    RowBox[{
                    RowBox[{"LinkObject", "[", 
                    
                    RowBox[{
                    "\"\\\"C:\\\\Users\\\\nette\\\\OneDrive\\\\Dokumente\\\\\
DNettelsArbeit\\\\FretticaDevelop\\\\Fretica\\\\Fretica64.exe\\\"\"", ",", 
                    "625", ",", "10"}], "]"}], ",", 
                    RowBox[{"CallPacket", "[", 
                    RowBox[{"36", ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`FGetAnisotropyL1\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"FGetAnisotropyL1[]\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "FGetAnisotropyL1[]", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FGetAnisotropyL1, {
      Fretica`FGetAnisotropyL1[] :> ExternalCall[
         LinkObject[
         "\"C:\\Users\\nette\\OneDrive\\Dokumente\\DNettelsArbeit\\\
FretticaDevelop\\Fretica\\Fretica64.exe\"", 625, 10], 
         CallPacket[36, {}]]}], "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "Fretica`FGetAnisotropyL1"|>, 
   False]]], "Output",
 CellLabel->"Out[10]=",
 CellID->276159175,ExpressionUUID->"df67f434-7e7b-4f7b-ae6f-9ba824e34880"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FGetAnisotropyL2[] returns the anisotropy \
correction factor L2. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FGetAnisotropyL2", "[", "]"}], ":=", 
                    RowBox[{"ExternalCall", "[", 
                    RowBox[{
                    RowBox[{"LinkObject", "[", 
                    
                    RowBox[{
                    "\"\\\"C:\\\\Users\\\\nette\\\\OneDrive\\\\Dokumente\\\\\
DNettelsArbeit\\\\FretticaDevelop\\\\Fretica\\\\Fretica64.exe\\\"\"", ",", 
                    "625", ",", "10"}], "]"}], ",", 
                    RowBox[{"CallPacket", "[", 
                    RowBox[{"38", ",", 
                    RowBox[{"{", "}"}]}], "]"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`FGetAnisotropyL2\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FGetAnisotropyL2[] returns the anisotropy \
correction factor L2. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FGetAnisotropyL2[] returns the anisotropy correction factor L2. ", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FGetAnisotropyL2, {
      Fretica`FGetAnisotropyL2[] :> ExternalCall[
         LinkObject[
         "\"C:\\Users\\nette\\OneDrive\\Dokumente\\DNettelsArbeit\\\
FretticaDevelop\\Fretica\\Fretica64.exe\"", 625, 10], 
         CallPacket[38, {}]]}], "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "Fretica`FGetAnisotropyL2"|>, 
   False]]], "Output",
 CellLabel->"Out[11]=",
 CellID->171327259,ExpressionUUID->"f80f3a67-26fe-4438-a22f-b3bcd7e6a30d"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FSetAnisotropyL1[value] sets the anisotropy \
correction factor L1. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FSetAnisotropyL1", "[", 
                    RowBox[{"Fretica`Private`value_", "?", "NumberQ"}], "]"}],
                     ":=", 
                    RowBox[{"Fretica`Private`FPSetAnisotropyL1", "[", 
                    RowBox[{"N", "[", "Fretica`Private`value", "]"}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`FSetAnisotropyL1\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FSetAnisotropyL1[value] sets the anisotropy \
correction factor L1. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FSetAnisotropyL1[value] sets the anisotropy correction factor L1. ", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FSetAnisotropyL1, {Fretica`FSetAnisotropyL1[
         PatternTest[
          Pattern[Fretica`Private`value, 
           Blank[]], NumberQ]] :> Fretica`Private`FPSetAnisotropyL1[
         N[Fretica`Private`value]]}], "SubValues" -> None, "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "Fretica`FSetAnisotropyL1"|>, 
   False]]], "Output",
 CellLabel->"Out[12]=",
 CellID->19832,ExpressionUUID->"cd3ac623-00a6-41b4-abde-382d5f975513"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FSetAnisotropyL2[value] sets the anisotropy \
correction factor L2. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FSetAnisotropyL2", "[", 
                    RowBox[{"Fretica`Private`value_", "?", "NumberQ"}], "]"}],
                     ":=", 
                    RowBox[{"Fretica`Private`FPSetAnisotropyL2", "[", 
                    RowBox[{"N", "[", "Fretica`Private`value", "]"}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`FSetAnisotropyL2\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FSetAnisotropyL2[value] sets the anisotropy \
correction factor L2. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FSetAnisotropyL2[value] sets the anisotropy correction factor L2. ", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FSetAnisotropyL2, {Fretica`FSetAnisotropyL2[
         PatternTest[
          Pattern[Fretica`Private`value, 
           Blank[]], NumberQ]] :> Fretica`Private`FPSetAnisotropyL2[
         N[Fretica`Private`value]]}], "SubValues" -> None, "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "Fretica`FSetAnisotropyL2"|>, 
   False]]], "Output",
 CellLabel->"Out[13]=",
 CellID->109269049,ExpressionUUID->"0e178c16-5554-40a7-819b-4795aa00a382"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FGetAnisotropyL1", "[", "]"}], ",", 
   RowBox[{"FGetAnisotropyL2", "[", "]"}]}], "}"}]], "Input",
 CellLabel->"In[14]:=",
 CellID->471452646,ExpressionUUID->"45286aec-0a09-45a9-8acd-747ea3819f7e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.268`", ",", "0.189`"}], "}"}]], "Output",
 CellContext->"Notebook$$61$938943`",
 CellLabel->"Out[14]=",
 CellID->770605029,ExpressionUUID->"27d82972-2507-426d-a947-b9c27a3a7527"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FSetAnisotropyL1", "[", "0.27", "]"}], "\[IndentingNewLine]", 
 RowBox[{"FSetAnisotropyL1", "[", "0.19", "]"}]}], "Input",
 CellLabel->"In[15]:=",
 CellID->333999571,ExpressionUUID->"73e41045-c225-4a32-9f2f-7d1b4126a688"],

Cell[BoxData["0.27`"], "Output",
 CellContext->"Notebook$$61$938943`",
 CellLabel->"Out[15]=",
 CellID->320380254,ExpressionUUID->"8b0d4c7a-5430-4283-b1ec-76d8867f3697"],

Cell[BoxData["0.19`"], "Output",
 CellContext->"Notebook$$61$938943`",
 CellLabel->"Out[16]=",
 CellID->130251168,ExpressionUUID->"c793a357-db20-48dd-b43a-f0bbf4b03975"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FGetAnisotropyL1", "[", "]"}], ",", 
   RowBox[{"FGetAnisotropyL2", "[", "]"}]}], "}"}]], "Input",
 CellLabel->"In[17]:=",
 CellID->441365935,ExpressionUUID->"cbb5b3cd-106f-40cd-8bbd-4d0d5997eaf2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.19`", ",", "0.189`"}], "}"}]], "Output",
 CellContext->"Notebook$$61$938943`",
 CellLabel->"Out[17]=",
 CellID->462381817,ExpressionUUID->"3bcb8029-09ed-4a00-bca1-015eb5e7f81e"]
}, Open  ]],

Cell["Anisotropy is calculated according to", "TechNoteText",
 CellID->863115042,ExpressionUUID->"7e18f450-ae72-4642-8452-ccaf02e8101c"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAEMnvtwnCzA==
    "], {{0, 127}, {598, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{234., Automatic},
  ImageSizeRaw->{598, 127},
  PlotRange->{{0, 598}, {0, 127}}]], "TechNoteText",
 CellLabel->"In[23]:=",
 CellID->141608241,ExpressionUUID->"718b71e7-f4bc-4d44-93a4-7eb8ce13896d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAEMnvtwnCzA==
    "], {{0, 127}, {598, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{234., Automatic},
  ImageSizeRaw->{598, 127},
  PlotRange->{{0, 598}, {0, 127}}]], "TechNoteText",
 CellContext->"Notebook$$61$938943`",
 CellLabel->"Out[23]=",
 CellID->318375523,ExpressionUUID->"2270b18a-b613-41b1-977c-d35df9504c52"],

Cell["\<\
where the photon rates are assumed to be corrected (Background and RCM) 
See the following paper for more information:\
\>", "TechNoteText",
 CellID->72704038,ExpressionUUID->"c0796c5f-ca2f-4503-86a5-52596baf4518"],

Cell[BoxData[{
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQf8luP7/38bn48yI8ps2FGKjBAySttIVh+rJEIUTStpSCURZSRSEk3t
JS1JmqKIoiElDZHt/j3/1/Hv+B6d133fvd+N97s4no+HHm/Xdd7Xdc7jfB3n
dY6ite+7+o49E4nEA3n45+rbml7cqNFtzWvk439qNnjgrnoN6t5eqcGDdevV
bVSm9l5cnMF/8/jj//s76TiO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO
4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO
4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO
4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO4ziO
4ziO4ziO4ziO4zhb8ueff+Z2FFLzxx9/7LJxy8zff/+9m8Z8p7JmzZrvvvuO
f3fqW3744YfvIn7//fed+iLHcRzHcZysM2PGjFtvvbVt27a//fZbbsdlC155
5ZWbbrrplltuGT58eG7HJdvMnz+/VatWmzZtyu2I/B+DBg1q1qxZmzZtXn75
5UaNGg0bNoxI5tjbcaBatmx59NFH77///kcddVTv3r25sjNeNH78+CJFiuwf
QeVZvXr1zniL8+8Eh27UqFGTJk3asGFDbsfFcRxnx0PXjCwcPXr0hK0xduzY
2bNn53Z8twVift999z344INNN/P0009v3LgxB149cODAggULJiJq1qy5ZMmS
HHhpVqBf23fffSVi//nPfyjf3I5R9sCLOfDAA7/44ovcjsj/8cgjjyS2pHDh
wqtWrcqZtyNX8uTJo68uVKjQl19+uTNedPvtt9s00pR2xluc3YjHH3/83IjT
Tz/9pM0UK1bsrLPOOtdw9tlnn3rqqfzLLQKUKlVKrj/zzDPynIkTJ55yyim0
6/z581eoUAGn9e+//87dpGWRzz77rFq1akF6hTPOOKNUxLXXXtsp4sUXX1y+
fPnukrQdC90uyW/dunWTJk3InMaNG99///3vv//+7vLV7M8//+zZs+edd95Z
p06dZs2akYQGDRpcc801lP4VV1xBBdD6T1Wn0Cl9rQnDhg3jCRjM0047zdaQ
9u3b53aynBxl5cqVlStX3n///dFgh2zJfvvtZ7vXvffeGwFJJUE9vvHGG7tL
M4HJkyfTIgJFtGjRop393q+++uqII46wL8Xg7OyXxlm/fv1PP/0UXAy00//+
97+cj9g2Q6U98sgjiTZWbmfPpsg6dCg33XRTzlczoXnz5nhP+l4U+AcffLAz
XkSPYxNI77Mz3uLsRqAutNZduBnaZiJG6dKlmzZteumllxIgX758crFIkSIi
QQOjhJj5+eefcztxWQIrdMkll8TTK/0mKcWVoEvVi/S29evX/+ijj3I74jnN
Dz/8gMw+88wzbRZhuD788MPcjlpWoRO/+OKLU5Y13b3Wf4Q3smqvvfbSu5ho
fo5ZpsLbX11wwQW5nSYnR8F3W7t27UMPPXTUUUfFq1B5w/HHH6+39thjj1q1
ao0YMeKXX37J7RRkCax3hQoVbOo+//zznf1S2hcZZV/67LPP7uyXBvz111+Y
iC5dugTXkdlBB5fDEdseevbsqTHv06dPbkfn/+jRo4fNVUwunlfOvPrLL7+0
Y90IoRUrVuyMFz3wwAP6lrx58w4YMGBnvMXZjTjnnHOoDJUqVZo6dapeRF+d
fvrptjkce+yx9mPf7Nmzr7vuOq4fd9xxcuWYY46x4XlgfLhgV6Z169b6AVEg
acOGDZszZ87MmTPR2K+99trZZ5+td1HjN998824kOHcUixcvtsYKbM3JYRYu
XLh+/frs/gozGHTul19+OY/SAOvWraPEhwwZosrq4Ycfllvvv/8+glx/iL+2
wxLj7FY0a9YssSXVq1e3Ab7++utu3bodffTRNkzTpk1zK8LZAvFpJwDQXnJg
csLSpUtPPvlkm105r7pHjx793//+t3PnzsH1Tp062Yi1bds2hyO2PdSrV0/L
8d57783t6PwfuHI2V3NSdf/+++9ly5bVV99yyy07adL7m2++qW8pUKAA4mpn
vMXZjShZsuTBBx88d+5ce/Gbb7457bTTbHMoUqTIJ598YsNgIQsVKoQskbHu
5s2b2/C1atXapRZubJWPP/74sMMOs0moUKFCsJxn9erVpGvvvffWMMWLF99J
k8F2WTAaBx54oM2onfRhbquMHTv24osvpq5m94f9+/e33xYT6b/6UStOPfVU
AqBA5MrKlSspdP3hpZdeul1pcHZbkGeJLUGHx4M1bNgwb968Vle88cYbu8Vu
En379tVo54zqJluGDRt2yimnYGMxMjfddBPNbWe/1PLjjz9ec801pPf5558P
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
uq1fKSCAK1Wq1Lt37wwLxtNhHYfMY912ie7AgQNddf+r2Kmq2w6dxVW3HjW4
cOFC2wur6iZuthPRL1zJaMsjNcW0x6lTpyJfCb948eIlMXCN7XK5iRMn6oiT
kF3VjXxKRvZKB2EQG3ZWmJ1YiHLT64HqLlGihN568cUX7S2ZCBEMEeNKa3hM
kO5/SJtF7CVTqW7twenmrICnl5ck0y/bJs/PdQguw37ddDFq1YOj0u2nEOyb
ZEugunXjhZxX3dSuvyPIQMmQdKo7uaVNDlS3bmKQ2FJ1P/zww5oitK6US7x8
g+OW7KdJ3BlpGnHVHd+wgrptw9Bf6K0JEybY38rC26B6QNWqVYmMzjeQrhkZ
bIffg5nD1JAmTZrQFUrhzp07V4ccaVkDBgxAaJG9tEckh1Yh7Ix00IS3Y9q0
HTEgtPpg5bUMpOOea3dMiwsmqeIOtGrVClkr0t06vOh5Om7Zaol/27Vrp3Ob
eWm60b8426+6ZZxfp5ckoiW0GCKyCAM1ZswY+1EJA6tPs6qbv62ZwnHQWxht
TB95HlQYO/cjUN1ktd6yZ6DbGSZ9+/alwhwVQXGT1WTytGnTgnkvGVQ3TSzl
UuUMqtsye/Zs6/lSfME8W6ouwpuCRrKOHz8+GXU0VGlrVXaU6g7mB9piSsZU
N7ZdvldmXXWfddZZ8RzYKojtokWLqksr0IMH5y/jhqTcoSiD6lZ/VrDnsdKa
6IyQppgLkimD7QHZVd2g308FmeFMjTrzzDODnWT69esXf6NA1xacC5lBdb/8
8svpnkMGqlXPIlmfYeKq+9/Mzlbd2rIyqG56VQyO3lLVHSx7oaeuXbt2nQj7
kQsLOX369FGjRpUsWRJbd1qMU045hf5O93CjKw/WKGVW3YFtTGw247pgLRFp
QrqnOpuxPjuqQ1dIBaqbZqhvwYzYr6Vyq0uXLrYbLVSokOaAHeQB8iqZSnU/
++yz8vxAdR988MEitG699VYb/oILLtCvtBlUtzUgefPmveKKKzTt9IB6C8Ml
a8AD1a2TWHJedZNe3ewCZw3bSPxTqm4iYIVNoLrtJCKruu00BkSCbOdC7Qrm
2weq236apGnIGG9cdcd3n3jvvfdsgAMPPPDGG2+Mt5HE5k4z5Y4KuG9UG7vw
k5yxq/7tR5Y41DGbZGop1UP20bU7pQBNJrn5DFBFVTeiLljRjweXjNajaT0k
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
8P11nK1169b2JzoaM2rUKCtZebJMrUlGPXIw4sFduy8HEqtw4cK633KgurX7
xhQHqlvH2chem/YSJUpkZe5EAEUWqG57PMFWsSNpVAZ7K5hhIp0s6tHKHtSs
9gt0THYckuLWR6FyrXejJynHT8mxIkqh3wy+xfMEzau5c+eiw7k+bdo0mhVa
mkobrA8aNGiQntZKPZdVSHY3OSHYoJhg2h8hXWzIww47jJ9LHZa95q644god
MsIXs4FR3XKuPSEDOadeW7BOcN9997XbTUsmiEuOcA3Wl6FM6tSpI44eHb18
BU7ZlacjUCaJVJu60L4oelsQtP1AV1CggWIhISheGsvo0aOpKlgz/Bc7Jcaq
bpq5LiccOHCgbhxK5dEvEWPHjrVbxskWOslI5drdGmvWrKlGGxtijTZJEAcN
ryQ4bIU23q1bN7RicJhR1apVSYI8kIptJYQsdY9nKfY2UN3aIr777rvgUFqd
y0ENwWcUX0DOArbvIn+uv/56anvwZFlK/N5774mfFXyaof8iBygp6qcMBGGl
rdGwqnvMmDE6LIkJVc+F5qYlRf5rticjDWk1vDrvpCWYkkHpx1c7pkO+tNJs
4+PAFhzMxJYQAR3vSsa2zqtVq5Zcp0kGXYmMLZP/wSEOtK+TTz7ZfuAQ9t9/
/xo1ashO9cnoIAN7l2LFLKSMs+31kMQpl7rLgAwdrj2GLGm+TdPQtCuh6K13
xq902Ed2pK9UqRKtTwfAMeM6z4QKnMV+J5jehvihosq8Vvzx4HxVWpDGgZpv
xz2oLTpA4fwjsSdHaHW1B3/Hsd/WpVrq4CFK1TZJKp4OrAUfmDBr2lN8+OGH
9pb9IIiQC4QHz6SNyyaBmFkab2YfIQ6uZXAiPPbBngdH80GH2OE7EpXym3KX
Ll0C0UiToQlPnjyZVEhTsmMLgerOly8fkUluOYDAA3v37q0/mTFjRnA0WyKa
zfLJJ59gTGSmx4QJE6RDQXUHM651HQpW1Orkgw46SDv34IRu7OeKFSt+//33
4NQDsM573759g7sFCxbEgFAcZ5xxBuWrH9GoHnbeMiAF5Rb9e5CBOgiM6bNn
JFHWMq8b5Z/13SfI8GCmK+WSxZEEaqzVSPSqtoOzJ56QWDyXlStXkkybHOqq
HUkjjH6vtx/lrQygK9cBbTrHre7XnYxOwzn++OODsqCN8BzEhkjQxo0bI1Fw
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
HI2diPadq1q1asoNJB1nN+X777/XfWCEOnXqZF534ziOs1VSbsMFd999d3aX
YjmO8w/mr7/+ateuHVIEjV3NULFixfLly9t9XRznH8DixYvvvPNO2f2mTZs2
uR0dx3H+CSxbtuzTVHz55Ze78lJBx3Fynl9//XXjxo0/bYlc2eYN2Rxnl0WO
8fLTYRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzH
cRznH4Afab1TWRDx9ddf53ZEcpqFCxeS8MWLF+d2RP5R/PDDD1Kj/vzzz9yO
i+M4juM4KRg6dOirES+++OIzzzzTIaJTp078b7169bp37y53e/TooXf5Q6/3
79+fh4wZM6Zbt26vGsaNG/fP2MkK12Pw4MGdO3cmB17dEq6QS88999zzzz//
8ssvc2Xy5MlZPKuC7JJ9uQ8//PB/1fEWw4YNk1PGDj300M8++yy3o7MVVq5c
SbG+8sorttyzuI3VqlWrXop4NcY777yT9XONp06dGn8C9Yda98UXX0iY1atX
lytXTs+S+PXXX7cxwY7jOI7j7DROPvlk6azz5s173XXXdYpo3rz5vvvuG5zb
cvPNN8vdW2655aCDDpKLaCceMnbs2EKFCtnAl156adZ1xa4MqnvIkCG33XZb
yrNsEJAXXnjhCSecoHnI3zVr1nzwwQczHC758ccf77PPPvoQ9NLy5ctzMlG5
xbx584oWLaoJP/HEE8ePH5/bkcrEggULqlSpEhR61apVs1K3ly5desMNN6Ss
NtCxY8esRGDOnDn58+eP/xxnrUaNGqK6qaK9evWyd3ETtjfljuM4juPsaM45
5xy66QIFCkyYMEEvbtiw4fTTT7f9+NFHH/3ll19qgFmzZh1zzDFcP/7442Ui
SufOnW34K6+88ueff8755Ow8brrppkD5lC9f/uuvv960adOaNWsWLlzYtm3b
Qw45RO+SPy1atEgpz+66667gUfLJ4B/PgAED/vOf/9iEk2m5HalMULcpwaC8
9t577yweTPzHH3/MmDHjwAMPjMvms846i1a21Sc88sgj8d8WKVJk+vTp+i0J
eX/UUUfZACVLltyuZDsx3n///UaNGv3222+5HRHHcRxnN6ZEiRIFCxZERduL
iMnTTjvN9uNFixadP3++DbNgwQK0Ot29HKGIJt9jjz3+wap7+PDhgfipWbNm
EOaTTz5p2LBh3rx5NUz16tXnzJkTBAtGJi+55JJvv/02p9KRm5A/duSWymN9
vV2WDz74wJbXwQcf/MMPP2T955dffnlcOSey4GqtWLFCfNuAKlWq2DUXv/zy
C7XOBrj33nu3MalOKpYvX37RRRcVLlzYFyM4juM428PRRx+NKgguxlV3kSJF
kExBsBo1auTJk0dU96JFi/7Zqvvdd98NxM/VV1+dMuRJJ51kgxUqVGjlypU2
ADJJR86PPPJIsi5HUrBLcPfdd0vC99xzz2effTa3o5MlJk2atM2qm9Zx++23
p1TdpUuXlraTjkGDBp188sm1a9cOfkjlCUIuXLiQhix3Tz/99KVLl25jUp1U
3HPPPWTsqaeeumTJktyOi+M4jrMbc+eddwaD2Mksq+6WLVuef/758qX7iy++
+Ger7iFDhmRRdT/55JNByObNmwdhfvrpp+HDh3fr1u3f1o+T8FmzZnXu3Llf
v367y/f6iRMnbrPq/vPPP2+++WZ+9fbbbwczVWgvvXr1SvfDjRs31qpVq0qV
KjNnzgymdnM9/pYPPvigbdu2LVq0mDFjxrYn1YmBuy2LXEqUKPFva62O4zhO
DpBF1T137ty1a9fK3666lTVr1hQuXDjQaSi3HI6ws6PYIap78eLF6GfbRqBC
hQrp9ud89dVXCfD666+vXLkSvZdZdTs7iY8++kjXm5csWXLVqlW5HSPHcRzn
n0YWVbclUN3XXHNNMvq8PmrUqLfeeuvtt9/u379/MLa5adOm77//nruTJk0a
O3YsGn7dunVy64MPPujZs+e8efNSvmv27Nm9e/d+8803+TddGOW7777r06cP
IXv16vXpp59mIxe2JOuqOxlbWwrFixcnJslohd1fm0Fxyb/yK/5GpP1lkOu/
//77lClT+vbte8sttzRp0mTWrFn6E7yeAQMGPP300yixZs2arV69OkMS+BU5
QMaSFSlL08bNRoBfIQJ5O2957bXX0j0fP2vgwIHE005l14dQ+iTEJjzD/Iol
S5ZQZLzrww8/TBksyCgNs2LFin79+tWvX79Tp07vvPMOlSpDhhCfYcOGEZ44
Z9hNZYeobiT3Tz/9dPbZZ9tH5c+fH10X/9Uvv/xy0UUXFStWjCxFdZ966qkZ
VLeW2t8RGXKVWyNGjCCxNLoxY8bYWzTGoPR132+sAT9Jl5NUOZ5GYVEPEaWZ
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
yYGHH37Yru0aN26c1JMHH3wQiS6SFZ3AW2zCJVvGjh271QWVq1atQsKR5/pD
njN48OD4DymplHNLSA41fEwqyEmeLJO4gjojdYNMsG4XCedRCDY0LXqPZCLa
KS9tgwQgUUG+8RyqVoYFmFSz9u3bS0nBQw89JJvSWKjVPXv2/OabbyjZ1157
DcdHAlPEnTt3Jpds4Ljqfuqpp2jpCFHiTO3Vqfhx8MqfeeYZKVz8rx49emTY
04NaR729z5BuH2lqGhGQMDhNIk0psnh28b80kwzb9yWjJvbcc89JjhFbsjdw
33jy7NmzZRHNF198QaxwUiS78DQzbJ6DcdO0UMm16cWhrHGyKDgpi+7du6dc
UCAEqrtTp06vv/66vIVKmPK7ZIBMyI9/jnQcx3Ecx/lnsytvmBxX3XbLTSfn
sar7uOOOy+DICPhWTZo0ufLKKxs0aCBLWjp06JAwyzAdx3Ecx3GcXCe+SEF3
DnRyBbuVd5UqVeJrwwPeeOMNDS/7E1atWnWfffbZ6owsx3Ecx3EcJ8f4/fff
gyOxZIaVkyssXbr0qKOOssURHGoZ8Ouvv9qtZtDbQ4YMOfbYY5944oltmIXo
OI7jOI7j7Az++uuvYANSaNWq1caNG1NuDOLsVMh22cPQUrt27VWrVqVbYPvb
b7/df//9GnjffffNmzdv4cKFM0wydxzHcRzHcXKYCRMmHHvssfny5TvYcNhh
h91xxx3x08adnc0bb7xx3HHHHXDAAbY4DjnkkDJlymQ41Xfw4MF2j1N+wnN8
oNtxHMdxHGfXYcGCBUOGDBm3JcOGDcug8ZydipyjZItjxIgRwcmtcebPn9+k
SZMHHnigffv2GXZHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzH
cRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzH
cRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzH
cRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzH
cRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzH
cRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzH
cRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzH
cRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzH
cRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRzHcRwn4KuvvurXr9/kyZNz
8qV///13hlsZ7u6yZD3Ou2PqdgYbN2789ddfczsWTm7y888/b9q0Kbdj4TiO
4/zr2LBhw/XXX3+WYcyYMSlD9unTR8OceeaZbdq0SRlswIABt99++7p161Le
Xb169fPPP1+2bNly5cpVqlSpSZMmFStWJHzXrl1vvPHGdK8eNmxY8+bNU+rG
BQsW3HrrrRKrs88++/XXXw+C/fLLL7169WrdunWHDh3Gjx//22+/6a0vvvji
qaeeeuihh/jtlVdeWbVq1UsuuaRjx4480z7h22+/7dSpEyE7RrRt27ZFixYt
W7bsEPHZZ59pSBTdSy+9RAAJyV2CBU8T/vjjj0GDBrVq1arjZojh+++/z60P
P/zwscce47dPPPFE+/btly1bZn/4559/9u/fv2HDhieeeOJll11GtIkz8enb
t2/8LWvXru3Zs2fx4sXPP/98Ql5wwQU8efbs2TNmzJCs/vLLL7micSDmL7/8
sgiSzz//nMcSDb3L/xK3WbNmPfroo5obQAa++eab9r3ffPMNBXr11VcXK1bs
jDPO4L38ZODAgTbM999/zw81r+Dhhx8mT7jVuXNncoMr5N4zzzzzww8/xJO2
Zs2auXPnxq9nZsWKFeeddx61l5LKEOy9994jsRoxCuLFF1/866+/Fi9eLNkl
1eaDDz746aefXnjhhaAc+S13ufjkk0+SwOHDh/PM9evXkxyuaN1o167dvHnz
7Hufe+45+6jHH3/86aef5jpZx2/1Ok2P+CAdMyTzjTfeoMkQE/4lzlRCqtzQ
oUPJ9pQ/mTJlyltvvZUhT6ZOnUpa6tate/zxx9PiiNicOXMoGirY0qVL4+Fx
bcjGlStXxm8RB6o6yZfkUMn5F4tBiqg2cp0KI1X63XffJb1aD4kDr6YsMkR1
woQJtOg6deqkzCIyB+Nz2mmn8UeGh+xYyPl2Eb179/7xxx9Thlm1alWXLl2k
hpBekjl27FgpL6w0OcZdbXePPPII1mz58uVUEtsYyTdKhMznjTxK841XU7Wo
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
jkZNmm5l+CkyZG4Novnz5wPdIxkynjx58uTpD0y4mP3791966aWtW7f+tdvi
6WekvXv3XnjhhW3bto0gYYBHrVq1UqHubdu2aYk8fmqoJ0+ejoaUqO9u1PXk
yZMnT39sAnIPGzZs/vz5dqShpz8eEVuNHj16/Pjx8Q+7g7e7deuWNKMsCNf9
y5Yt26JFi2N7wLsnT5507IBtDvLkyZMnT394UmbFr90KTz87Jf0Ijih9HohP
N/Xk6eegF154wb7F4MmTJ0+ePHny5MmTJ0+ePHny5MmTJ0+ePHny5MmTJ0+e
PHny5MmTJ0+ePHny5MmTJ0+ePHny5MmTJ0+ePHny5MmTJ0+/Ov3000+7du3a
uXOn3wf9x6D3338/6Yc2PHny5MmTJ0+e/pz00EMPdejQ4bnnnovc/+qrr3r3
7t2uXbsnnnhCd8aNGzdjxoyfqRn/+c9/RowYce65537xxRc/0yt+dQKFLl++
3L60e5T09ddfL1u2bP78+U899dTChQv/8Y9/7Nix43Arge0vv/yyfcv7mND2
7dvHjh3bsWPHatWq6cPBceKlTz755IIFC/hL4+fNm0f7V69ebQUIwRA8fpo9
ezZl0nzmW2SHwtGjxYsXz5o1iwfnzp0Lc6iH+vmX1+3evdseeeONN6ZNm8ZN
Cm/dujXzHTx48KD69dZbb7355ptH8NXCY06MYM+ePfv373/Ikvow36ZNm+i+
Pm/3n2P3FVGi5m7dut18880un38XhG5iA5GEVBL7ZyMUp3v37qNHj056TqO+
8BjEPuL5W6CIPvppnCDkycaNG9euXZv+e5rHkGD70qVLV6xYcZTH41NPpM0I
HubrtddeO7IKcSU4Tey2P0fU069Fd955ZyKRyJUrFx7TvQ/U4f7ll19uDhRn
+swzz/xMzUAF7rrrLt4Y//jFH4aef/750qVLu9jyaAicULdu3WzZsvXo0QMk
//TTTxctWhTselhOELRZsmTJdevWHZMmibp06UKTHn74YUYz1ZfZ+/btmzVr
1lNPPZWwjsYTzZ1++um03wo8/vjjOXLkOPHEE0uUKFEkpH79+qX6xPnKlSux
oroGRZ999tkXXXQRrC5cuPApp5xSoUIFgPcll1zCG0eNGqViAHKKXXnllS+8
8EKLFi24fvXVVzPZQQLScuXKXXjhhWXKlLnqqqvOO++8K6644ptvvsksg34G
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
5KJly5ZCyDQbMP/000/v3r0bwF+mTBnNe8N2ohXio08++YSQyiaZCStghVoY
oVKlSjGyylG59dZblXTEe0HIdF9T/fpSEkCa13GtOhnT0047DQmhnQwuY00k
deedd55wwglEN/CTl86dO5fyRG1BuDcTZgLaFy5cmJmMF0+ePHny5MmTpz8Y
AQ4XLFgAJAPF2bw3IHzHjh26/uyzz6ZOnQo+BAxzPXDgQFCosizeffddMKGK
gboNNv/0009bt26lmOZLg/B8aXDglClTBICDMOEZLAdmA6AqD8EO5QCVVa1a
tVWrVm4uB0jyjjvu6NGjx6OPPirwmZQ++ugj2zzIRd++fcHhgnm8pWfPnvoA
EGgZiKhzwitXrgxujHwJnS7woltuuaV3795KaeYOgJN/6YjNunNx+umnq07R
V199NWzYsDlz5oCNLZWdZ5s1a3bzzTcrw4R3/f3vf2/fvj3N+Nvf/pbmG5fU
c/vtt1eoUGHw4MFurxmsRo0awaJ+/fq98847dv+f//wn8QvwntBAqT56HTEU
fYnXD8AGGBP7dOnSxQ4Y5EHGgvvXXXcdUQOIunz58qBubR295ppriK0IiOwj
RDpcMVeuXBS+/vrruR40aBD3N2/ezJCp2aBuUPpVV10VP6rFkydPnjx58uTJ
089E4EAAmB30AQF9wX4//vjj/v37gY5A5aQJJMec9uzZM2DAgDVr1hzug4oI
Jk+e/MADDxyyMLA/3h33/O00RASUFKl+8803kU/nGD377LMukgfzw2pwfrwk
SHvevHnx7u/atWv+/Plq4caNG5UMU6tWrXPOOQfsTRQWafyqVauU7M2DK1as
SPoNo/Xr12fyez2ePHny5MmTJ0+ejgkBWefOnVu1atV169a9/fbbixcv1sfN
Z82adeGFF+oclV+GDh48mD7zOSl99913rVu37tKly9ChQ3/7+RIHDhwAhx9l
QvUHH3xw3HHHgbp9YrYnT548efLkydPvi7Zs2fL0008vWbJk0aJFSmx+9913
58+f725X/G3Sl19+OXjw4D59+mTmKOw/Bq1fv7537950OdUEuydPnjx58uTJ
kydPnjx58uTJkydPnjx58uTJkydPnjx58uTJkydPnjx58uTJkydPnjx58uTJ
kydPnjx58uTJkydPnjx58uTJkydPnjx58uTJkydPnjx58uTJkydPnjx58uTJ
kydPnjx58uTJkydPv0f6f4VdzZo=
    "], {{0, 203}, {978, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{648.88, Automatic},
  ImageSizeRaw->{978, 203},
  PlotRange->{{0, 978}, {0, 203}}], "\[IndentingNewLine]", Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData[
      RowBox[{
        RowBox[{"https", ":"}], "//", 
        RowBox[{
          RowBox[{
            RowBox[{"doi", ".", "org"}], "/", "10.1366"}], "/", 
          "0003702953963652"}]}]]], 
    "https://doi.org/10.1366/0003702953963652"},
   "WebLink",
   BaseStyle->{"TechNoteText"}]],ExpressionUUID->
  "ff15b85f-a954-4d33-863f-1eaec899609f"]}], "TechNoteText",
 CellLabel->"In[28]:=",
 CellID->367812577,ExpressionUUID->"be07ef0f-717b-46ec-a293-3f2cc2e6697e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Set donor and acceptor routes", "TechNoteSection",
 CellID->731716473,ExpressionUUID->"ca2b271d-6476-4a1e-b87a-3ae7cb287813"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "FGetFRETRoutes"}], "\[IndentingNewLine]", 
 RowBox[{"?", "FSetFRETRoutes"}]}], "Input",
 CellLabel->"In[18]:=",
 CellID->20478066,ExpressionUUID->"649f9779-e433-45dd-918d-1bc1a73d27e5"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FGetFRETRoutes[] returns {r1,r2,r3,\[Ellipsis]}, \
where for each detection channel i, the possible values for \
\\!\\(\\*SubscriptBox[\\(r\\), \\(i\\)]\\) are: \\\"D\\\", \\\"A\\\", or 0. \
\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FGetFRETRoutes", "[", "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`a", ",", "Fretica`Private`d"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"Fretica`Private`d", "=", 
                    RowBox[{
                    RowBox[{"FGetDonorRoutes", "[", "]"}], "/.", 
                    "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "\[Rule]", "\"D\""}], ",", 
                    RowBox[{"0", "\[Rule]", "1"}]}], "}"}]}]}], ";", 
                    RowBox[{"Fretica`Private`a", "=", 
                    RowBox[{
                    RowBox[{"FGetAcceptorRoutes", "[", "]"}], "/.", 
                    "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "\[Rule]", "\"A\""}], ",", 
                    RowBox[{"0", "\[Rule]", "1"}]}], "}"}]}]}], ";", 
                    RowBox[{
                    RowBox[{"Fretica`Private`a", " ", "Fretica`Private`d"}], 
                    "/.", "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{"1", "\[Rule]", "0"}], "}"}]}]}]}], "]"}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`FGetFRETRoutes\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FGetFRETRoutes[] returns {r1,r2,r3,\[Ellipsis]}, \
where for each detection channel i, the possible values for \
\\!\\(\\*SubscriptBox[\\(r\\), \\(i\\)]\\) are: \\\"D\\\", \\\"A\\\", or 0. \
\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FGetFRETRoutes[] returns {r1,r2,r3,\[Ellipsis]}, where for each \
detection channel i, the possible values for \!\(\*SubscriptBox[\(r\), \(i\)]\
\) are: \"D\", \"A\", or 0. ", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FGetFRETRoutes, {
      Fretica`FGetFRETRoutes[] :> 
       Module[{Fretica`Private`a, Fretica`Private`d}, 
         Fretica`Private`d = ReplaceAll[
            Fretica`FGetDonorRoutes[], {1 -> "D", 0 -> 1}]; 
         Fretica`Private`a = ReplaceAll[
            Fretica`FGetAcceptorRoutes[], {1 -> "A", 0 -> 1}]; 
         ReplaceAll[Fretica`Private`a Fretica`Private`d, {1 -> 0}]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Fretica`FGetFRETRoutes"|>, False]]], "Output",
 CellLabel->"Out[18]=",
 CellID->287208674,ExpressionUUID->"5ddd0004-aa9c-4691-abfb-4e90a0105077"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FSetFRETRoutes[{r1,r2,r3,\[Ellipsis]}] sets which \
detection routes are used as donor or acceptor detection routes in a FRET \
measurement. For each detection channel i the possible values of ri are: \
\\\"D\\\", \\\"A\\\", or 0. Example: FSetFRETRoutes[{\[Null]\\\"A\\\", \
\\\"D\\\",\\\"A\\\",\\\"D\\\",0 ,0 }]. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FSetFRETRoutes", "[", 
                    RowBox[{"Fretica`Private`val", ":", 
                    RowBox[{"{", 
                    RowBox[{"Repeated", "[", 
                    RowBox[{
                    RowBox[{"\"D\"", "|", "\"A\"", "|", "0"}], ",", "6"}], 
                    "]"}], "}"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`v", "=", 
                    RowBox[{"PadRight", "[", 
                    
                    RowBox[{"Fretica`Private`val", ",", 
                    "Fretica`Private`FNumberOfRoutes"}], "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Fretica`Private`FSetDonorRoutes", "[", 
                    RowBox[{"Fretica`Private`v", "/.", "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"D\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"A\"", "\[Rule]", "0"}]}], "}"}]}], "]"}], ";", 
                    RowBox[{"Fretica`Private`FSetAcceptorRoutes", "[", 
                    RowBox[{"Fretica`Private`v", "/.", "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"D\"", "\[Rule]", "0"}], ",", 
                    RowBox[{"\"A\"", "\[Rule]", "1"}]}], "}"}]}], "]"}], 
                    ";"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`FSetFRETRoutes\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FSetFRETRoutes[{r1,r2,r3,\[Ellipsis]}] sets which \
detection routes are used as donor or acceptor detection routes in a FRET \
measurement. For each detection channel i the possible values of ri are: \
\\\"D\\\", \\\"A\\\", or 0. Example: FSetFRETRoutes[{\[Null]\\\"A\\\", \
\\\"D\\\",\\\"A\\\",\\\"D\\\",0 ,0 }]. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FSetFRETRoutes[{r1,r2,r3,\[Ellipsis]}] sets which detection routes are \
used as donor or acceptor detection routes in a FRET measurement. For each \
detection channel i the possible values of ri are: \"D\", \"A\", or 0. \
Example: FSetFRETRoutes[{\[Null]\"A\", \"D\",\"A\",\"D\",0 ,0 }]. ", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FSetFRETRoutes, {Fretica`FSetFRETRoutes[
         Pattern[Fretica`Private`val, {
           Repeated[
            Alternatives["D", "A", 0], 6]}]] :> 
       Module[{Fretica`Private`v = 
          PadRight[Fretica`Private`val, Fretica`Private`FNumberOfRoutes]}, 
         Fretica`Private`FSetDonorRoutes[
           ReplaceAll[Fretica`Private`v, {"D" -> 1, "A" -> 0}]]; 
         Fretica`Private`FSetAcceptorRoutes[
           ReplaceAll[Fretica`Private`v, {"D" -> 0, "A" -> 1}]]; Null]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Fretica`FSetFRETRoutes"|>, False]]], "Output",
 CellLabel->"Out[19]=",
 CellID->276971302,ExpressionUUID->"999656f3-c3d0-447b-b1c1-8da5775cd7f8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FSetFRETRoutes", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<A\>\"", ",", "\"\<D\>\"", ",", "0", ",", "0"}], "}"}], 
  "]"}]], "Input",
 CellLabel->"In[20]:=",
 CellID->335491845,ExpressionUUID->"14577dd9-f1f3-4c45-87c3-187aa7a99001"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FGetFRETRoutes", "[", "]"}]], "Input",
 CellLabel->"In[21]:=",
 CellID->64143860,ExpressionUUID->"766b2c0f-ed50-4a01-a2e1-b7643b641a66"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"A\"\>", ",", "\<\"D\"\>", ",", "0", ",", "0", ",", "0", ",", 
   "0"}], "}"}]], "Output",
 CellContext->"Notebook$$61$938943`",
 CellLabel->"Out[21]=",
 CellID->292064102,ExpressionUUID->"7df97aad-6597-4285-94c6-59081a4d72d3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FSetFRETRoutes", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<A\>\"", ",", "\"\<D\>\"", ",", "\"\<A\>\"", ",", "\"\<D\>\""}], "}"}],
   "]"}]], "Input",
 CellLabel->"In[22]:=",
 CellID->56027098,ExpressionUUID->"b9e8bb09-3ccb-47de-a4b7-dd921ccfd6f8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FGetFRETRoutes", "[", "]"}]], "Input",
 CellLabel->"In[23]:=",
 CellID->46418010,ExpressionUUID->"4f148b72-d004-4fd5-b314-5a88ac38359c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"A\"\>", ",", "\<\"D\"\>", ",", "\<\"A\"\>", ",", "\<\"D\"\>", 
   ",", "0", ",", "0"}], "}"}]], "Output",
 CellContext->"Notebook$$61$938943`",
 CellLabel->"Out[23]=",
 CellID->175374748,ExpressionUUID->"e8a49259-a838-468e-b8a8-189154ef8757"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "FGetDonorRoutes"}], "\[IndentingNewLine]", 
 RowBox[{"?", "FGetAcceptorRoutes"}]}], "Input",
 CellLabel->"In[24]:=",
 CellID->776626918,ExpressionUUID->"1c93e2c8-5360-44b5-afec-7a329ffe3a78"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FGetDonorRoutes[] returns {r1,r2,r3,\[Ellipsis]}, \
where for each detection channel i, the value of ri is 1 if i is a donor \
detection route or 0 elsewise.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FGetDonorRoutes", "[", "]"}], ":=", 
                    
                    RowBox[{
                    "Fretica`Private`FPGetDonorRoutes", "[", "]"}]}]}, {" "}},
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`FGetDonorRoutes\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FGetDonorRoutes[] returns {r1,r2,r3,\[Ellipsis]}, \
where for each detection channel i, the value of ri is 1 if i is a donor \
detection route or 0 elsewise.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FGetDonorRoutes[] returns {r1,r2,r3,\[Ellipsis]}, where for each \
detection channel i, the value of ri is 1 if i is a donor detection route or \
0 elsewise.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FGetDonorRoutes, {
      Fretica`FGetDonorRoutes[] :> Fretica`Private`FPGetDonorRoutes[]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Fretica`FGetDonorRoutes"|>, False]]], "Output",
 CellLabel->"Out[24]=",
 CellID->511381516,ExpressionUUID->"b8910fe4-ab4a-49c3-8025-820403869e53"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FGetAcceptorRoutes[] returns \
{r1,r2,r3,\[Ellipsis]}, where for each detection channel i, the value of ri \
is 1 if i is an acceptor detection route or 0 otherwise.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FGetAcceptorRoutes", "[", "]"}], ":=", 
                    
                    RowBox[{
                    "Fretica`Private`FPGetAcceptorRoutes", "[", "]"}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`FGetAcceptorRoutes\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FGetAcceptorRoutes[] returns \
{r1,r2,r3,\[Ellipsis]}, where for each detection channel i, the value of ri \
is 1 if i is an acceptor detection route or 0 otherwise.\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FGetAcceptorRoutes[] returns {r1,r2,r3,\[Ellipsis]}, where for each \
detection channel i, the value of ri is 1 if i is an acceptor detection route \
or 0 otherwise.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FGetAcceptorRoutes, {
      Fretica`FGetAcceptorRoutes[] :> Fretica`Private`FPGetAcceptorRoutes[]}],
     "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Fretica`FGetAcceptorRoutes"|>, False]]], "Output",
 CellLabel->"Out[25]=",
 CellID->751722063,ExpressionUUID->"94fcbc57-ae26-43d1-a158-df1291a32780"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FGetDonorRoutes", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"FGetAcceptorRoutes", "[", "]"}]}], "Input",
 CellLabel->"In[26]:=",
 CellID->120732096,ExpressionUUID->"2c23dce5-7705-428e-8370-823d4f15095a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellContext->"Notebook$$61$938943`",
 CellLabel->"Out[26]=",
 CellID->627243184,ExpressionUUID->"42c3d56d-bd4e-4e6c-9480-1aa6af779cce"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellContext->"Notebook$$61$938943`",
 CellLabel->"Out[27]=",
 CellID->326308001,ExpressionUUID->"01de1681-3adb-4e67-8281-6d2797aebf1b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Set anisotropy routes", "TechNoteSection",
 CellID->300733649,ExpressionUUID->"29852818-eb7a-4b06-8183-61c431e0d19c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"?", "FSetAnisotropyRoutes"}], "\[IndentingNewLine]", 
   RowBox[{"?", "FGetAnisotropyRoutes"}], "\[IndentingNewLine]", 
   RowBox[{"?", "FGetPIEAnisotropyRoutes"}]}]}]], "Input",
 CellLabel->"In[28]:=",
 CellID->5438831,ExpressionUUID->"c958e011-cae0-4982-bfb0-74636e9544fb"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FSetAnisotropyRoutes[{\[Null]r1, r2, r3, \
\[Ellipsis]}] sets which detection routes are used for parallel (\\\"P\\\") \
or orthogonal (\\\"S\\\") detection routes in a FRET measurement. For each \
detection channel i, the possible values for ri are: \\\"P\\\", \\\"S\\\", or \
0. Example: FSetFRETRoutes[{\[Null]\\\"P\\\", \\\"P\\\",\\\"S\\\",\\\"S\\\",0 \
,0 }]. \\nIn PIE/Alex measurements the polarization of the donor and acceptor \
excitation laser beams may differ. In this case one can use \
FSetAnisotropyRoutes[{\[Null]r1, r2, r3, \[Ellipsis]}, {\[Null]rpie1, rpie2, \
rpie3, \[Ellipsis]}] to set the relative polarization for each laser \
separately. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FSetAnisotropyRoutes", "[", 
                    RowBox[{
                    RowBox[{"Fretica`Private`main", ":", 
                    RowBox[{"{", 
                    RowBox[{"Repeated", "[", 
                    RowBox[{
                    RowBox[{"\"P\"", "|", "\"S\"", "|", "0"}], ",", "6"}], 
                    "]"}], "}"}]}], ",", 
                    RowBox[{"Fretica`Private`pie", ":", 
                    RowBox[{"{", 
                    RowBox[{"Repeated", "[", 
                    RowBox[{
                    RowBox[{"\"P\"", "|", "\"S\"", "|", "0"}], ",", "6"}], 
                    "]"}], "}"}]}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Fretica`Private`m", "=", 
                    RowBox[{"PadRight", "[", 
                    
                    RowBox[{"Fretica`Private`main", ",", 
                    "Fretica`Private`FNumberOfRoutes"}], "]"}]}], ",", 
                    RowBox[{"Fretica`Private`p", "=", 
                    RowBox[{"PadRight", "[", 
                    
                    RowBox[{"Fretica`Private`pie", ",", 
                    "Fretica`Private`FNumberOfRoutes"}], "]"}]}]}], "}"}], 
                    ",", 
                    RowBox[{
                    
                    RowBox[{
                    "Fretica`Private`FPSetMainChannelAnisotropyRoutes", "[", 
                    RowBox[{
                    RowBox[{"Fretica`Private`m", "/.", "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"P\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"S\"", "\[Rule]", "0"}]}], "}"}]}], ",", 
                    RowBox[{"Fretica`Private`m", "/.", "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"P\"", "\[Rule]", "0"}], ",", 
                    RowBox[{"\"S\"", "\[Rule]", "1"}]}], "}"}]}]}], "]"}], 
                    ";", 
                    
                    RowBox[{"Fretica`Private`FPSetPIEChannelAnisotropyRoutes",
                     "[", 
                    RowBox[{
                    RowBox[{"Fretica`Private`p", "/.", "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"P\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"S\"", "\[Rule]", "0"}]}], "}"}]}], ",", 
                    RowBox[{"Fretica`Private`p", "/.", "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"P\"", "\[Rule]", "0"}], ",", 
                    RowBox[{"\"S\"", "\[Rule]", "1"}]}], "}"}]}]}], "]"}], 
                    ";"}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"FSetAnisotropyRoutes", "[", 
                    RowBox[{"Fretica`Private`val", ":", 
                    RowBox[{"{", 
                    RowBox[{"Repeated", "[", 
                    RowBox[{
                    RowBox[{"\"P\"", "|", "\"S\"", "|", "0"}], ",", "6"}], 
                    "]"}], "}"}]}], "]"}], ":=", 
                    RowBox[{"FSetAnisotropyRoutes", "[", 
                    
                    RowBox[{
                    "Fretica`Private`val", ",", "Fretica`Private`val"}], 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`FSetAnisotropyRoutes\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FSetAnisotropyRoutes[{\[Null]r1, r2, r3, \
\[Ellipsis]}] sets which detection routes are used for parallel (\\\"P\\\") \
or orthogonal (\\\"S\\\") detection routes in a FRET measurement. For each \
detection channel i, the possible values for ri are: \\\"P\\\", \\\"S\\\", or \
0. Example: FSetFRETRoutes[{\[Null]\\\"P\\\", \\\"P\\\",\\\"S\\\",\\\"S\\\",0 \
,0 }]. \\nIn PIE/Alex measurements the polarization of the donor and acceptor \
excitation laser beams may differ. In this case one can use \
FSetAnisotropyRoutes[{\[Null]r1, r2, r3, \[Ellipsis]}, {\[Null]rpie1, rpie2, \
rpie3, \[Ellipsis]}] to set the relative polarization for each laser \
separately. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FSetAnisotropyRoutes[{\[Null]r1, r2, r3, \[Ellipsis]}] sets which \
detection routes are used for parallel (\"P\") or orthogonal (\"S\") \
detection routes in a FRET measurement. For each detection channel i, the \
possible values for ri are: \"P\", \"S\", or 0. Example: FSetFRETRoutes[{\
\[Null]\"P\", \"P\",\"S\",\"S\",0 ,0 }]. \nIn PIE/Alex measurements the \
polarization of the donor and acceptor excitation laser beams may differ. In \
this case one can use FSetAnisotropyRoutes[{\[Null]r1, r2, r3, \[Ellipsis]}, \
{\[Null]rpie1, rpie2, rpie3, \[Ellipsis]}] to set the relative polarization \
for each laser separately. ", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FSetAnisotropyRoutes, {Fretica`FSetAnisotropyRoutes[
         Pattern[Fretica`Private`main, {
           Repeated[
            Alternatives["P", "S", 0], 6]}], 
         Pattern[Fretica`Private`pie, {
           Repeated[
            Alternatives["P", "S", 0], 6]}]] :> 
       Module[{Fretica`Private`m = 
          PadRight[Fretica`Private`main, Fretica`Private`FNumberOfRoutes], 
          Fretica`Private`p = 
          PadRight[Fretica`Private`pie, Fretica`Private`FNumberOfRoutes]}, 
         Fretica`Private`FPSetMainChannelAnisotropyRoutes[
           ReplaceAll[Fretica`Private`m, {"P" -> 1, "S" -> 0}], 
           ReplaceAll[Fretica`Private`m, {"P" -> 0, "S" -> 1}]]; 
         Fretica`Private`FPSetPIEChannelAnisotropyRoutes[
           ReplaceAll[Fretica`Private`p, {"P" -> 1, "S" -> 0}], 
           ReplaceAll[Fretica`Private`p, {"P" -> 0, "S" -> 1}]]; Null], 
       Fretica`FSetAnisotropyRoutes[
         Pattern[Fretica`Private`val, {
           Repeated[
            Alternatives["P", "S", 0], 6]}]] :> 
       Fretica`FSetAnisotropyRoutes[
        Fretica`Private`val, Fretica`Private`val]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Fretica`FSetAnisotropyRoutes"|>, False]]], "Output",
 CellLabel->"Out[28]=",
 CellID->305466748,ExpressionUUID->"dac50e85-9b72-4561-855c-1ab4620c6760"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FGetAnisotropyRoutes[] returns {\[Null]r1, r2, r3, \
\[Ellipsis]}, where for each detection channel i, the possible values for ri \
are: \\\"P\\\", \\\"S\\\", or 0. In PIE/Alex mode these are the assumed \
settings for the detection of photons after donor excitation. Call \
FGetPIEAnisotropyRoutes[] to get the settings for the detection after \
acceptor excitation. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FGetAnisotropyRoutes", "[", "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`p", ",", "Fretica`Private`s"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`p", ",", "Fretica`Private`s"}], 
                    "}"}], "=", 
                    
                    RowBox[{
                    "Fretica`Private`FPGetMainChannelAnisotropyRoutes", "[", 
                    "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`p", ",", "Fretica`Private`s"}], 
                    "}"}], "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Fretica`Private`p", "/.", "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "\[Rule]", "\"P\""}], ",", 
                    RowBox[{"0", "\[Rule]", "1"}]}], "}"}]}], ",", 
                    RowBox[{"Fretica`Private`s", "/.", "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "\[Rule]", "\"S\""}], ",", 
                    RowBox[{"0", "\[Rule]", "1"}]}], "}"}]}]}], "}"}]}], ";", 
                    RowBox[{
                    RowBox[{"Fretica`Private`p", " ", "Fretica`Private`s"}], 
                    "/.", "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{"1", "\[Rule]", "0"}], "}"}]}]}]}], "]"}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`FGetAnisotropyRoutes\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FGetAnisotropyRoutes[] returns {\[Null]r1, r2, r3, \
\[Ellipsis]}, where for each detection channel i, the possible values for ri \
are: \\\"P\\\", \\\"S\\\", or 0. In PIE/Alex mode these are the assumed \
settings for the detection of photons after donor excitation. Call \
FGetPIEAnisotropyRoutes[] to get the settings for the detection after \
acceptor excitation. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FGetAnisotropyRoutes[] returns {\[Null]r1, r2, r3, \[Ellipsis]}, where \
for each detection channel i, the possible values for ri are: \"P\", \"S\", \
or 0. In PIE/Alex mode these are the assumed settings for the detection of \
photons after donor excitation. Call FGetPIEAnisotropyRoutes[] to get the \
settings for the detection after acceptor excitation. ", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FGetAnisotropyRoutes, {
      Fretica`FGetAnisotropyRoutes[] :> 
       Module[{Fretica`Private`p, 
          Fretica`Private`s}, {Fretica`Private`p, Fretica`Private`s} = 
          Fretica`Private`FPGetMainChannelAnisotropyRoutes[]; {
           Fretica`Private`p, Fretica`Private`s} = {
            ReplaceAll[Fretica`Private`p, {1 -> "P", 0 -> 1}], 
            ReplaceAll[Fretica`Private`s, {1 -> "S", 0 -> 1}]}; 
         ReplaceAll[Fretica`Private`p Fretica`Private`s, {1 -> 0}]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Fretica`FGetAnisotropyRoutes"|>, False]]], "Output",
 CellLabel->"Out[29]=",
 CellID->410073892,ExpressionUUID->"1abe2a21-a3ba-4565-b3cd-c4d340c6e549"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FGetPIEAnisotropyRoutes[] returns {\[Null]r1, r2, \
r3, \[Ellipsis]}, where for each detection channel i, the possible values for \
ri are: \\\"P\\\", \\\"S\\\", or 0. These settings apply in PIE/Alex mode and \
define which detection routes are considered to be parallel (\\\"P\\\") or \
orthogonal (\\\"S\\\") with respect to the polarization of the acceptor \
excitation light. Call FGetAnisotropyRoutes[] to get the settings for the \
detection after donor excitation. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FGetPIEAnisotropyRoutes", "[", "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`p", ",", "Fretica`Private`s"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`p", ",", "Fretica`Private`s"}], 
                    "}"}], "=", 
                    
                    RowBox[{"Fretica`Private`FPGetPIEChannelAnisotropyRoutes",
                     "[", "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Fretica`Private`p", ",", "Fretica`Private`s"}], 
                    "}"}], "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Fretica`Private`p", "/.", "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "\[Rule]", "\"P\""}], ",", 
                    RowBox[{"0", "\[Rule]", "1"}]}], "}"}]}], ",", 
                    RowBox[{"Fretica`Private`s", "/.", "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "\[Rule]", "\"S\""}], ",", 
                    RowBox[{"0", "\[Rule]", "1"}]}], "}"}]}]}], "}"}]}], ";", 
                    RowBox[{
                    RowBox[{"Fretica`Private`p", " ", "Fretica`Private`s"}], 
                    "/.", "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{"1", "\[Rule]", "0"}], "}"}]}]}]}], "]"}]}]}, {
                   " "}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Fretica`FGetPIEAnisotropyRoutes\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FGetPIEAnisotropyRoutes[] returns {\[Null]r1, r2, \
r3, \[Ellipsis]}, where for each detection channel i, the possible values for \
ri are: \\\"P\\\", \\\"S\\\", or 0. These settings apply in PIE/Alex mode and \
define which detection routes are considered to be parallel (\\\"P\\\") or \
orthogonal (\\\"S\\\") with respect to the polarization of the acceptor \
excitation light. Call FGetAnisotropyRoutes[] to get the settings for the \
detection after donor excitation. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "FGetPIEAnisotropyRoutes[] returns {\[Null]r1, r2, r3, \[Ellipsis]}, \
where for each detection channel i, the possible values for ri are: \"P\", \
\"S\", or 0. These settings apply in PIE/Alex mode and define which detection \
routes are considered to be parallel (\"P\") or orthogonal (\"S\") with \
respect to the polarization of the acceptor excitation light. Call \
FGetAnisotropyRoutes[] to get the settings for the detection after donor \
excitation. ", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Fretica`FGetPIEAnisotropyRoutes, {
      Fretica`FGetPIEAnisotropyRoutes[] :> 
       Module[{Fretica`Private`p, 
          Fretica`Private`s}, {Fretica`Private`p, Fretica`Private`s} = 
          Fretica`Private`FPGetPIEChannelAnisotropyRoutes[]; {
           Fretica`Private`p, Fretica`Private`s} = {
            ReplaceAll[Fretica`Private`p, {1 -> "P", 0 -> 1}], 
            ReplaceAll[Fretica`Private`s, {1 -> "S", 0 -> 1}]}; 
         ReplaceAll[Fretica`Private`p Fretica`Private`s, {1 -> 0}]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Fretica`FGetPIEAnisotropyRoutes"|>, False]]], "Output",
 CellLabel->"Out[30]=",
 CellID->457359965,ExpressionUUID->"a9da70a2-ac02-481f-be36-92818db5fd0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FGetAnisotropyRoutes", "[", "]"}]], "Input",
 CellLabel->"In[31]:=",
 CellID->350018386,ExpressionUUID->"eb477020-78dd-4c4d-989e-ebab78428814"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"P\"\>", ",", "\<\"P\"\>", ",", "\<\"S\"\>", ",", "\<\"S\"\>", 
   ",", "0", ",", "0"}], "}"}]], "Output",
 CellContext->"Notebook$$61$938943`",
 CellLabel->"Out[31]=",
 CellID->705543073,ExpressionUUID->"a8a5d6f8-795e-4626-b994-2185b73c79dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FSetAnisotropyRoutes", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<P\>\"", ",", "\"\<P\>\"", ",", "\"\<S\>\"", ",", "\"\<S\>\""}], "}"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"FGetAnisotropyRoutes", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"FGetPIEAnisotropyRoutes", "[", "]"}]}], "Input",
 CellLabel->"In[32]:=",
 CellID->305799392,ExpressionUUID->"bc6b4e7c-5221-4492-84c6-068dfec9d892"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"P\"\>", ",", "\<\"P\"\>", ",", "\<\"S\"\>", ",", "\<\"S\"\>", 
   ",", "0", ",", "0"}], "}"}]], "Output",
 CellContext->"Notebook$$61$938943`",
 CellLabel->"Out[33]=",
 CellID->552963349,ExpressionUUID->"9fa0c140-7346-496a-9e1d-452da0c89cdd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"P\"\>", ",", "\<\"P\"\>", ",", "\<\"S\"\>", ",", "\<\"S\"\>", 
   ",", "0", ",", "0"}], "}"}]], "Output",
 CellContext->"Notebook$$61$938943`",
 CellLabel->"Out[34]=",
 CellID->47363645,ExpressionUUID->"9df98b2f-1c4e-4a69-85f8-d693f69e7bfa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "orthogonal", " ", "polarisation", " ", "of", " ", "alternating", " ", 
    "lasers"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FSetAnisotropyRoutes", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<P\>\"", ",", "\"\<P\>\"", ",", "\"\<S\>\"", ",", "\"\<S\>\""}], 
      "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<S\>\"", ",", "\"\<S\>\"", ",", "\"\<P\>\"", ",", "\"\<P\>\""}], 
      "}"}]}], "]"}], " ", "\[IndentingNewLine]", 
   RowBox[{"FGetAnisotropyRoutes", "[", "]"}], "\[IndentingNewLine]", 
   RowBox[{"FGetPIEAnisotropyRoutes", "[", "]"}]}]}]], "Input",
 CellLabel->"In[35]:=",
 CellID->64501586,ExpressionUUID->"ec2c3a73-9b56-400f-9a33-35554cec6e04"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"P\"\>", ",", "\<\"P\"\>", ",", "\<\"S\"\>", ",", "\<\"S\"\>", 
   ",", "0", ",", "0"}], "}"}]], "Output",
 CellContext->"Notebook$$36$34414`",
 CellLabel->"Out[36]=",
 CellID->89318849,ExpressionUUID->"1731f138-dd4d-4e68-85cd-17aaf3658cb3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"S\"\>", ",", "\<\"S\"\>", ",", "\<\"P\"\>", ",", "\<\"P\"\>", 
   ",", "0", ",", "0"}], "}"}]], "Output",
 CellContext->"Notebook$$36$34414`",
 CellLabel->"Out[37]=",
 CellID->337127928,ExpressionUUID->"edf989c0-a070-43e7-a2ad-3e554d313e5a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FSetAnisotropyRoutes", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<P\>\"", ",", "\"\<P\>\"", ",", "\"\<S\>\"", ",", "\"\<S\>\""}], "}"}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"FGetAnisotropyRoutes", "[", "]"}]}], "Input",
 CellLabel->"In[38]:=",
 CellID->504350609,ExpressionUUID->"c7758051-1996-438d-86a7-41aae32e2136"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"P\"\>", ",", "\<\"P\"\>", ",", "\<\"S\"\>", ",", "\<\"S\"\>", 
   ",", "0", ",", "0"}], "}"}]], "Output",
 CellContext->"Notebook$$61$938943`",
 CellLabel->"Out[39]=",
 CellID->321446678,ExpressionUUID->"6c9dfbdf-c435-40cc-b5d5-757ff6c55708"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, "RelatedGuide.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Related", " ", "Guides"}], "TutorialMoreAboutSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[TextData[ButtonBox["Fretica",
         BaseStyle->"Link",
         ButtonData->"paclet:Fretica/guide/Fretica"]], "TutorialMoreAbout",
         ExpressionUUID->"f14b6840-0134-42d0-bdcc-e55e266b1796"]}]}
     }]}
  }]], "TutorialMoreAboutSection",ExpressionUUID->"c8fb4450-947b-4c59-a218-\
4c2ddede33a1"],

Cell[BoxData[""], "Input",ExpressionUUID->"a61fc791-5818-4a93-8a2b-e0f74e3720f1"]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell",ExpressionUUID->"68b92c2e-a6fb-4bfa-b24a-1f6b33108913"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
Evaluator->"FreticaDocumentation",
WindowSize->{900., 604.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"Fretica Settings",
Visible->False,
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, "ExampleSection" -> {"0" -> Open}}, 
  "NewStyles" -> True, "CitationPopupData" -> {"", ""}, "ShowCitation" -> 
  False, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2022, 7, 26, 15, 37, 17.4509602}", 
    "history" -> {"", "", "", ""}, "context" -> "Fretica`", "keywords" -> {}, 
    "specialkeywords" -> {}, "tutorialcollectionlinks" -> {}, "index" -> True,
     "label" -> "Fretica Tech Note", "language" -> "en", "paclet" -> 
    "Fretica", "status" -> "None", "summary" -> 
    "To FSetRCM one can pass a rcm matrix, a file name of a rcm matrix. A \
file-opening dialog pops up when a directory name is passed: Or when no \
parameter is applied:", "synonyms" -> {}, "tabletags" -> 
    DocumentationBuild`Make`Private`tabletaggingrules$282770, "title" -> 
    "Fretica Settings", "titlemodifier" -> "", "windowtitle" -> 
    "Fretica Settings", "type" -> "Tech Note", "uri" -> 
    "Fretica/tutorial/FreticaSettings"}},
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (January 30, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> Notebook], 
   Cell[
    StyleData["Output"], CellContext -> Notebook], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> "13.2 for Microsoft Windows (64-bit) (January 30, 2023)",
   StyleDefinitions -> "Default.nb"],
ExpressionUUID->"04ee295e-c8a2-4255-a544-72d4c3454ca3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[588, 21, 3377, 77, 56, "AnchorBarGrid",ExpressionUUID->"0c9893fb-53ba-473a-b77f-5d5cf09d72a3",
 CellID->1],
Cell[CellGroupData[{
Cell[3990, 102, 115, 1, 68, "TechNoteTitle",ExpressionUUID->"6476b803-fabb-4e7b-b3a3-4117ca3e100f",
 CellID->45486241],
Cell[4108, 105, 5567, 127, 142, "TechNoteJumpBox",ExpressionUUID->"fb6ef772-f436-4f4f-85b7-8defe86c1cf7"],
Cell[9678, 234, 171, 3, 26, "Input",ExpressionUUID->"9136539c-1d35-4793-a234-8ebd28b91827",
 CellID->411065438],
Cell[CellGroupData[{
Cell[9874, 241, 130, 1, 80, "TechNoteSection",ExpressionUUID->"fe988322-77ea-483e-842b-19243e75e30e",
 CellID->105867729],
Cell[CellGroupData[{
Cell[10029, 246, 166, 3, 26, "Input",ExpressionUUID->"8b80f083-bfb5-44c7-9f0a-a757bff49f44",
 CellID->732125508],
Cell[10198, 251, 11303, 277, 95, "Output",ExpressionUUID->"8c8f2267-58e8-4da9-bbbc-aff17e36e5f0",
 CellID->185380859]
}, Open  ]],
Cell[CellGroupData[{
Cell[21538, 533, 163, 3, 26, "Input",ExpressionUUID->"724925fa-b6f3-4db2-a70b-56672b0df57b",
 CellID->288712573],
Cell[21704, 538, 12969, 315, 120, "Output",ExpressionUUID->"8b94a357-4f30-480c-be8a-035f820e8fc3",
 CellID->139736839]
}, Open  ]],
Cell[CellGroupData[{
Cell[34710, 858, 163, 3, 26, "Input",ExpressionUUID->"e34f20da-eea5-459f-af5e-d526541ead1b",
 CellID->186345528],
Cell[34876, 863, 13612, 328, 70, "Output",ExpressionUUID->"42656f6d-0ea2-4c6b-acbe-3f8da7d27070",
 CellID->16944426]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48537, 1197, 131, 1, 70, "TechNoteSection",ExpressionUUID->"52eeb195-742c-4a30-b7c1-b9eaed93069b",
 CellID->502629797],
Cell[CellGroupData[{
Cell[48693, 1202, 148, 3, 70, "Input",ExpressionUUID->"bf087298-c711-4c7e-9e98-e9961e1a6d09",
 CellID->555164524],
Cell[48844, 1207, 12057, 299, 70, "Output",ExpressionUUID->"eb6a6fa3-ad16-461b-a060-0804f4f37c23",
 CellID->638620159]
}, Open  ]],
Cell[CellGroupData[{
Cell[60938, 1511, 148, 3, 70, "Input",ExpressionUUID->"5b83755f-1ec9-4757-bdc0-22c3b6e6c417",
 CellID->107603970],
Cell[61089, 1516, 19915, 461, 70, "Output",ExpressionUUID->"c4b9773f-e63f-4f53-8dcf-2c72c65dcd86",
 CellID->176833631]
}, Open  ]],
Cell[CellGroupData[{
Cell[81041, 1982, 186, 4, 70, "Input",ExpressionUUID->"baf82b83-e563-4f44-9f30-1926c520c984",
 CellID->201886321],
Cell[81230, 1988, 890, 22, 125, "Output",ExpressionUUID->"cbb28b09-f990-41d6-bd84-bd78a55b4c3e",
 CellID->829713366]
}, Open  ]],
Cell[82135, 2013, 173, 3, 70, "TechNoteText",ExpressionUUID->"31a14413-9485-4d0d-8f43-5a0254875350",
 CellID->590694514],
Cell[CellGroupData[{
Cell[82333, 2020, 918, 25, 70, "Input",ExpressionUUID->"e50da5f7-7db2-4043-a9b8-c123efc32ccf",
 CellID->168253401],
Cell[83254, 2047, 941, 24, 125, "Output",ExpressionUUID->"78d3d71a-27c6-43ea-be26-7de3f14aa8b3",
 CellID->200292851]
}, Open  ]],
Cell[84210, 2074, 169, 3, 70, "TechNoteText",ExpressionUUID->"2f80e498-6aa8-4f9f-b6c5-4f079952119c",
 CellID->957494205],
Cell[CellGroupData[{
Cell[84404, 2081, 200, 4, 70, "Input",ExpressionUUID->"a6c539cb-481c-475d-b301-32ca6b3fee57",
 CellID->9893814],
Cell[84607, 2087, 501, 10, 70, "Message",ExpressionUUID->"ccbda1da-c010-4dab-bf8b-2b3e816b3bdb",
 CellID->328074284]
}, Open  ]],
Cell[85123, 2100, 131, 1, 70, "TechNoteText",ExpressionUUID->"643cfae6-e22c-45c6-badf-5c03deb5cf09",
 CellID->423030168],
Cell[CellGroupData[{
Cell[85279, 2105, 187, 4, 70, "Input",ExpressionUUID->"7f65bc11-3040-47c9-bcc6-bf43769ed4f6",
 CellID->302269926],
Cell[85469, 2111, 247, 6, 47, "Output",ExpressionUUID->"a9ee5feb-7465-4bd7-94c3-6cb9ed28f30d",
 CellID->276140993]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[85765, 2123, 141, 1, 70, "TechNoteSection",ExpressionUUID->"73b41540-27d6-4faa-a756-6c680d9e9fe6",
 CellID->381609110],
Cell[CellGroupData[{
Cell[85931, 2128, 243, 4, 70, "Input",ExpressionUUID->"cd4266f5-e5b8-40cf-bab6-e8b322d12cce",
 CellID->364047212],
Cell[86177, 2134, 11083, 269, 70, "Output",ExpressionUUID->"f1c07c37-e246-4e9f-adb0-b72963e92d9c",
 CellID->464493119],
Cell[97263, 2405, 10941, 266, 70, "Output",ExpressionUUID->"36e9bc01-3395-446e-a39d-52b5fcfb07fb",
 CellID->333392387]
}, Open  ]],
Cell[108219, 2674, 1224, 35, 70, "TechNoteText",ExpressionUUID->"dc3c26f5-ec8e-4e7d-83ae-470f4954bf79",
 CellID->216708217],
Cell[CellGroupData[{
Cell[109468, 2713, 173, 3, 70, "Input",ExpressionUUID->"eb30dda5-05c6-46be-bc29-b45a1663bd32",
 CellID->66051976],
Cell[109644, 2718, 169, 3, 35, "Output",ExpressionUUID->"0cd2ffb2-a4df-4122-8fe3-84a9ab260f6c",
 CellID->345235491]
}, Open  ]],
Cell[CellGroupData[{
Cell[109850, 2726, 181, 3, 70, "Input",ExpressionUUID->"9a26b257-a9f6-48a9-a228-672fab2685ca",
 CellID->37090089],
Cell[110034, 2731, 168, 3, 35, "Output",ExpressionUUID->"5db3d722-9353-4ed9-9f71-74a004b9034f",
 CellID->233072981]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110251, 2740, 402, 11, 70, "TechNoteSection",ExpressionUUID->"ddb09d9e-d7e0-48f6-a042-54adf03ddd73",
 CellID->114426303],
Cell[CellGroupData[{
Cell[110678, 2755, 341, 6, 70, "Input",ExpressionUUID->"2994ea97-d946-4760-8eaf-557a2f8aa615",
 CellID->1025120174],
Cell[111022, 2763, 10165, 253, 70, "Output",ExpressionUUID->"df67f434-7e7b-4f7b-ae6f-9ba824e34880",
 CellID->276159175],
Cell[121190, 3018, 10343, 259, 70, "Output",ExpressionUUID->"f80f3a67-26fe-4438-a22f-b3bcd7e6a30d",
 CellID->171327259],
Cell[131536, 3279, 10047, 252, 70, "Output",ExpressionUUID->"cd3ac623-00a6-41b4-abde-382d5f975513",
 CellID->19832],
Cell[141586, 3533, 10051, 252, 70, "Output",ExpressionUUID->"0e178c16-5554-40a7-819b-4795aa00a382",
 CellID->109269049]
}, Open  ]],
Cell[CellGroupData[{
Cell[151674, 3790, 249, 6, 70, "Input",ExpressionUUID->"45286aec-0a09-45a9-8acd-747ea3819f7e",
 CellID->471452646],
Cell[151926, 3798, 220, 5, 35, "Output",ExpressionUUID->"27d82972-2507-426d-a947-b9c27a3a7527",
 CellID->770605029]
}, Open  ]],
Cell[CellGroupData[{
Cell[152183, 3808, 246, 4, 70, "Input",ExpressionUUID->"73e41045-c225-4a32-9f2f-7d1b4126a688",
 CellID->333999571],
Cell[152432, 3814, 169, 3, 35, "Output",ExpressionUUID->"8b0d4c7a-5430-4283-b1ec-76d8867f3697",
 CellID->320380254],
Cell[152604, 3819, 169, 3, 35, "Output",ExpressionUUID->"c793a357-db20-48dd-b43a-f0bbf4b03975",
 CellID->130251168]
}, Open  ]],
Cell[CellGroupData[{
Cell[152810, 3827, 249, 6, 70, "Input",ExpressionUUID->"cbb5b3cd-106f-40cd-8bbd-4d0d5997eaf2",
 CellID->441365935],
Cell[153062, 3835, 219, 5, 35, "Output",ExpressionUUID->"3bcb8029-09ed-4a00-bca1-015eb5e7f81e",
 CellID->462381817]
}, Open  ]],
Cell[153296, 3843, 136, 1, 70, "TechNoteText",ExpressionUUID->"7e18f450-ae72-4642-8452-ccaf02e8101c",
 CellID->863115042],
Cell[153435, 3846, 5499, 95, 70, "TechNoteText",ExpressionUUID->"718b71e7-f4bc-4d44-93a4-7eb8ce13896d",
 CellID->141608241],
Cell[158937, 3943, 5544, 96, 70, "TechNoteText",ExpressionUUID->"2270b18a-b613-41b1-977c-d35df9504c52",
 CellID->318375523],
Cell[164484, 4041, 224, 4, 70, "TechNoteText",ExpressionUUID->"c0796c5f-ca2f-4503-86a5-52596baf4518",
 CellID->72704038],
Cell[164711, 4047, 72911, 1206, 70, "TechNoteText",ExpressionUUID->"be07ef0f-717b-46ec-a293-3f2cc2e6697e",
 CellID->367812577]
}, Open  ]],
Cell[CellGroupData[{
Cell[237659, 5258, 131, 1, 70, "TechNoteSection",ExpressionUUID->"ca2b271d-6476-4a1e-b87a-3ae7cb287813",
 CellID->731716473],
Cell[CellGroupData[{
Cell[237815, 5263, 215, 4, 70, "Input",ExpressionUUID->"649f9779-e433-45dd-918d-1bc1a73d27e5",
 CellID->20478066],
Cell[238033, 5269, 11581, 282, 70, "Output",ExpressionUUID->"5ddd0004-aa9c-4691-abfb-4e90a0105077",
 CellID->287208674],
Cell[249617, 5553, 12177, 289, 70, "Output",ExpressionUUID->"999656f3-c3d0-447b-b1c1-8da5775cd7f8",
 CellID->276971302]
}, Open  ]],
Cell[261809, 5845, 252, 6, 70, "Input",ExpressionUUID->"14577dd9-f1f3-4c45-87c3-187aa7a99001",
 CellID->335491845],
Cell[CellGroupData[{
Cell[262086, 5855, 160, 3, 70, "Input",ExpressionUUID->"766b2c0f-ed50-4a01-a2e1-b7643b641a66",
 CellID->64143860],
Cell[262249, 5860, 270, 6, 35, "Output",ExpressionUUID->"7df97aad-6597-4285-94c6-59081a4d72d3",
 CellID->292064102]
}, Open  ]],
Cell[262534, 5869, 271, 7, 70, "Input",ExpressionUUID->"b9e8bb09-3ccb-47de-a4b7-dd921ccfd6f8",
 CellID->56027098],
Cell[CellGroupData[{
Cell[262830, 5880, 160, 3, 70, "Input",ExpressionUUID->"4f148b72-d004-4fd5-b314-5a88ac38359c",
 CellID->46418010],
Cell[262993, 5885, 286, 6, 35, "Output",ExpressionUUID->"e8a49259-a838-468e-b8a8-189154ef8757",
 CellID->175374748]
}, Open  ]],
Cell[CellGroupData[{
Cell[263316, 5896, 221, 4, 70, "Input",ExpressionUUID->"1c93e2c8-5360-44b5-afec-7a329ffe3a78",
 CellID->776626918],
Cell[263540, 5902, 10044, 250, 70, "Output",ExpressionUUID->"b8910fe4-ab4a-49c3-8025-820403869e53",
 CellID->511381516],
Cell[273587, 6154, 10105, 251, 70, "Output",ExpressionUUID->"94fcbc57-ae26-43d1-a158-df1291a32780",
 CellID->751722063]
}, Open  ]],
Cell[CellGroupData[{
Cell[283729, 6410, 231, 4, 70, "Input",ExpressionUUID->"2c23dce5-7705-428e-8370-823d4f15095a",
 CellID->120732096],
Cell[283963, 6416, 253, 6, 35, "Output",ExpressionUUID->"42c3d56d-bd4e-4e6c-9480-1aa6af779cce",
 CellID->627243184],
Cell[284219, 6424, 253, 6, 35, "Output",ExpressionUUID->"01de1681-3adb-4e67-8281-6d2797aebf1b",
 CellID->326308001]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[284521, 6436, 123, 1, 70, "TechNoteSection",ExpressionUUID->"29852818-eb7a-4b06-8183-61c431e0d19c",
 CellID->300733649],
Cell[CellGroupData[{
Cell[284669, 6441, 345, 7, 70, "Input",ExpressionUUID->"c958e011-cae0-4982-bfb0-74636e9544fb",
 CellID->5438831],
Cell[285017, 6450, 15806, 360, 70, "Output",ExpressionUUID->"dac50e85-9b72-4561-855c-1ab4620c6760",
 CellID->305466748],
Cell[300826, 6812, 12589, 297, 70, "Output",ExpressionUUID->"1abe2a21-a3ba-4565-b3cd-c4d340c6e549",
 CellID->410073892],
Cell[313418, 7111, 12890, 300, 70, "Output",ExpressionUUID->"a9da70a2-ac02-481f-be36-92818db5fd0c",
 CellID->457359965]
}, Open  ]],
Cell[CellGroupData[{
Cell[326345, 7416, 167, 3, 70, "Input",ExpressionUUID->"eb477020-78dd-4c4d-989e-ebab78428814",
 CellID->350018386],
Cell[326515, 7421, 286, 6, 35, "Output",ExpressionUUID->"a8a5d6f8-795e-4626-b994-2185b73c79dd",
 CellID->705543073]
}, Open  ]],
Cell[CellGroupData[{
Cell[326838, 7432, 421, 9, 70, "Input",ExpressionUUID->"bc6b4e7c-5221-4492-84c6-068dfec9d892",
 CellID->305799392],
Cell[327262, 7443, 286, 6, 35, "Output",ExpressionUUID->"9fa0c140-7346-496a-9e1d-452da0c89cdd",
 CellID->552963349],
Cell[327551, 7451, 285, 6, 35, "Output",ExpressionUUID->"9df98b2f-1c4e-4a69-85f8-d693f69e7bfa",
 CellID->47363645]
}, Open  ]],
Cell[CellGroupData[{
Cell[327873, 7462, 768, 20, 70, "Input",ExpressionUUID->"ec2c3a73-9b56-400f-9a33-35554cec6e04",
 CellID->64501586],
Cell[328644, 7484, 284, 6, 35, "Output",ExpressionUUID->"1731f138-dd4d-4e68-85cd-17aaf3658cb3",
 CellID->89318849],
Cell[328931, 7492, 285, 6, 35, "Output",ExpressionUUID->"edf989c0-a070-43e7-a2ad-3e554d313e5a",
 CellID->337127928]
}, Open  ]],
Cell[CellGroupData[{
Cell[329253, 7503, 349, 8, 70, "Input",ExpressionUUID->"c7758051-1996-438d-86a7-41aae32e2136",
 CellID->504350609],
Cell[329605, 7513, 286, 6, 35, "Output",ExpressionUUID->"6c9dfbdf-c435-40cc-b5d5-757ff6c55708",
 CellID->321446678]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[329940, 7525, 654, 15, 70, "TutorialMoreAboutSection",ExpressionUUID->"c8fb4450-947b-4c59-a218-4c2ddede33a1"],
Cell[330597, 7542, 81, 0, 70, "Input",ExpressionUUID->"a61fc791-5818-4a93-8a2b-e0f74e3720f1"]
}, Open  ]]
}, Open  ]],
Cell[330705, 7546, 78, 0, 70, "FooterCell",ExpressionUUID->"68b92c2e-a6fb-4bfa-b24a-1f6b33108913"]
}
]
*)

