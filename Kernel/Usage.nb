(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    358909,       6596]
NotebookOptionsPosition[    328992,       6271]
NotebookOutlinePosition[    329728,       6295]
CellTagsIndexPosition[    329685,       6292]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{":", "Title", ":", " ", 
    RowBox[{"Fretica", " ", "Usages"}]}], " ", "*)"}], " ", "\n", "    ", 
  RowBox[{"(*", " ", 
   RowBox[{":", "Author", ":", " ", 
    RowBox[{"Daniel", " ", "Nettels"}]}], " ", "*)"}], "\n", "    ", 
  RowBox[{"(*", " ", 
   RowBox[{":", "Summary", ":", " ", 
    RowBox[{"Summary", " ", "goes", " ", 
     RowBox[{"here", "."}]}]}], " ", "*)"}], "\n", "    ", 
  RowBox[{"(*", " ", 
   RowBox[{":", "History", ":", "  ", 
    RowBox[{"Version", " ", "1.0", " ", "October", " ", "29", " ", "2020"}]}],
    " ", "*)"}], "\n", "    ", 
  RowBox[{"(*", " ", 
   RowBox[{":", 
    RowBox[{"Mathematica", " ", "version"}], ":", " ", 
    RowBox[{"12.1", ".1", " ", "for", " ", "Microsoft", " ", "Windows", " ", 
     RowBox[{"(", 
      RowBox[{"64", "-", "bit"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"June", " ", "19"}], ",", " ", "2020"}], ")"}]}]}], " ", 
   "*)"}], "\n", "    "}]], "Code",ExpressionUUID->"c0c7cf13-f62e-4d5c-bdf0-\
6fb046e1f99d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<Fretica`\>\"", "]"}], ";"}]], "Code",Expre\
ssionUUID->"f42d2517-7986-4298-9b81-67a9677b7bf8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FAboutFretica", "  ", "::", "usage"}], "=", 
   "\"\<FAboutFretica[] returns version information about Fretica. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129731862566814`*^9, 
  3.8129731863660603`*^9}},ExpressionUUID->"23911908-f942-4628-9bec-\
fb378e054b2f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FUnlinkFretica", "  ", "::", "usage"}], "=", 
   "\"\<FUnlinkFretica[] unlinks Fretica. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129731866941977`*^9, 
  3.8129731867879515`*^9}},ExpressionUUID->"399c2c95-b03d-448c-acfa-\
912e8bebc822"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"$FreticaExamples", "  ", "::", "usage"}], "=", 
    "\"\<Directory in which example data are saved. \>\""}], ";"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.812973187131715*^9, 
  3.8129731872567196`*^9}},ExpressionUUID->"70b2e50d-3a05-454f-8aee-\
094dcc9cfea4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Histo", "  ", "::", "usage"}], "=", 
   "\"\<Histo[ dat, \!\(TraditionalForm\`{\[Null]\)min, max, \
dx\!\(\(TraditionalForm\`}\)\), opts ] returns a histogram of the values in \
the list dat. The range and bin width are given by \!\(TraditionalForm\`{\
\[Null]\)min, max, dx\!\(\(TraditionalForm\`}\)\).\nOptions are:\n\
\!\(\(TraditionalForm\`\\\ \\\ \)\)FOutput\!\(\(TraditionalForm\` \[Rule] \
\)\)FGraph (default)\n\!\(\(TraditionalForm\`\\\ \\\ \
\)\)FOutput\!\(\(TraditionalForm\` \[Rule] \)\)FData\nand all options of \
Histogram. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973187647358*^9, 
  3.8129731878192387`*^9}},ExpressionUUID->"9b1a06ce-2aa5-40e7-8cc0-\
fba7f5b1081e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Histo2D", "  ", "::", "usage"}], "=", 
   "\"\<Histo2D[dat,\!\(TraditionalForm\`{\[Null]\)min1\!\(TraditionalForm\`_\
\), max1\!\(TraditionalForm\`_\), d1\!\(TraditionalForm\`\(\(_\)\(}\)\)\), \!\
\(TraditionalForm\`{\[Null]\)min2\!\(TraditionalForm\`_\), \
max2\!\(TraditionalForm\`_\), d2\!\(TraditionalForm\`\(\(_\)\(}\)\)\), opts] \
returns a 2D histogram (contour plot) of the value pairs listed in dat. The \
range and bin width are given by \!\(TraditionalForm\`{\[Null]\)min, max, \
dx\!\(\(TraditionalForm\`}\)\).\nOptions are:\n\!\(\(TraditionalForm\`\\\ \\\ \
\)\)FOutput\!\(\(TraditionalForm\` \[Rule] \)\)FGraph (default)\n\
\!\(\(TraditionalForm\`\\\ \\\ \)\)FOutput\!\(\(TraditionalForm\` \[Rule] \
\)\)FData\n\!\(\(TraditionalForm\`\\\ \\\ \)\)FOutput\!\(\(TraditionalForm\` \
\[Rule] \)\)FGraph3D\nand all options of ListContourPlot and ListPlot3D. \
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973188194253*^9, 
  3.812973188303636*^9}},ExpressionUUID->"2b120967-da31-4413-9bbb-\
208f8fd08326"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FPlotHisto", "  ", "::", "usage"}], "=", 
   "\"\<FPlotHisto[histodat] plots a histogram. Use this command if you want \
to plot histogram data returned, e.g., by\nhistodat\[LongEqual]Histo[..., \
FOutput\!\(\(TraditionalForm\` \[Rule] \)\)FData].\nAll graphical options of \
Histogram can be used to modify the appearance. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973188647399*^9, 
  3.8129731887567787`*^9}},ExpressionUUID->"0697c545-0d43-4238-a495-\
8920b7c9daef"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FPowerSpectrum", "  ", "::", "usage"}], "=", 
   "\"\<FPowerSpectrum[xydat\!\(TraditionalForm\`_\),first\!\(TraditionalForm\
\`\[Nu]  _\)] or FPowerSpectrum[xydat\!\(TraditionalForm\`_\)] \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129731891163516`*^9, 
  3.8129731892099223`*^9}},ExpressionUUID->"470c4866-6338-4416-b155-\
1fe870470171"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FFindGlobalFit", "  ", "::", "usage"}], "=", 
   "\"\<FFindGlobalFit[ \
\!\(TraditionalForm\`{\[Null]\)dat1,dat2,...\!\(\(TraditionalForm\`}\)\), \
\!\(TraditionalForm\`{\[Null]\)model1,model2,...\!\(\(TraditionalForm\`}\)\), \
pars, vars ] or\nFFindGlobalFit[ \!\(TraditionalForm\`{\[Null]\)dat1,dat2,...\
\!\(\(TraditionalForm\`}\)\), \
\!\(TraditionalForm\`{\[Null]\)model1,model2,...\!\(\(TraditionalForm\`}\)\), \
constraints, pars,vars ]\nallow to fit several data sets simultaneously with \
shared (and individual) model parameters. pars is a list of the fit \
parameters paired with initial guess values of the form \
pars\[LongEqual]\!\(TraditionalForm\`{{\[Null]\)par1,val1\!\(\(\
TraditionalForm\`}\)\),\!\(TraditionalForm\`{\[Null]\)par1,val2\!\(\(\
TraditionalForm\`}\)\),...\!\(\(TraditionalForm\`}\)\)\nThe rest is identical \
to FindFit.\nAll Options of FindFit can be used for FindGlobalFit. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.81297318956931*^9, 
  3.81297318967869*^9}},ExpressionUUID->"aa6d43db-5b76-4758-9006-\
4e00cc8f72e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FNonlinearModelGlobalFit", "  ", "::", "usage"}], "=", 
   "\"\<FNonlinearModelGlobalFit[ \!\(TraditionalForm\`{\[Null]\)dat1, \
dat2,...\!\(\(TraditionalForm\`}\)\), \!\(TraditionalForm\`{\[Null]\)model1, \
model2,...\!\(\(TraditionalForm\`}\)\), pars, vars ] or\n\
FNonlinearModelGlobalFit[ \!\(TraditionalForm\`{\[Null]\)dat1, \
dat2,...\!\(\(TraditionalForm\`}\)\), \!\(TraditionalForm\`{\[Null]\)model1, \
model2,...\!\(\(TraditionalForm\`}\)\), constraints, pars, vars ]\npars is a \
list of the fit parameters paired with initial guess values of the form pars\
\[LongEqual]\!\(TraditionalForm\`{{\[Null]\)par1, \
val1\!\(\(TraditionalForm\`}\)\),\!\(TraditionalForm\`{\[Null]\)par2,val2\!\(\
\(TraditionalForm\`}\)\),...\!\(\(TraditionalForm\`}\)\)\nThe rest is \
identical to NonlinearModelFit.\nAll Options of NonlinearModelFit can be \
passed to FNonlinearModelGlobalFit. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129731900224524`*^9, 
  3.812973190131831*^9}},ExpressionUUID->"b1bea284-deb1-42d5-b8e5-\
bc806bfb0fb7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FLMFit", "  ", "::", "usage"}], "=", 
   "\"\<Levenberg\[Hyphen]Marquardt fitting of a histogram.\n\
FLMFit[dat:\!\(TraditionalForm\`{{_\)?NumberQ,\!\(TraditionalForm\`_\)?\
NumberQ\!\(\(TraditionalForm\`}\)\)..\!\(\(TraditionalForm\`}\)\),modelfunc\!\
\(TraditionalForm\`_\),guess:\!\(TraditionalForm\`{{_\),\!\(TraditionalForm\`_\
\)?NumberQ\!\(\(TraditionalForm\`}\)\)..\!\(\(TraditionalForm\`}\)\)] or\n\
FLMFit[dat:\!\(TraditionalForm\`{{{_\)?NumberQ,\!\(TraditionalForm\`_\)?\
NumberQ\!\(\(TraditionalForm\`}\)\)..\!\(\(TraditionalForm\`}\)\)..\!\(\(\
TraditionalForm\`}\)\),modelfunc\!\(TraditionalForm\`_\),guess:\!\(\
TraditionalForm\`{{_\),\!\(TraditionalForm\`_\)?NumberQ\!\(\(TraditionalForm\`\
}\)\)..\!\(\(TraditionalForm\`}\)\)]\nreturn\n\
\!\(TraditionalForm\`{\*SuperscriptBox[\(\[Chi]\), \(2\)]\), \
bestfitparameters\!\(\(TraditionalForm\`}\)\)\nThe variances in \
\!\(TraditionalForm\`\*SuperscriptBox[\(\[Chi]\), \(2\)]\) are approximated \
as \!\(TraditionalForm\`\*SuperscriptBox[\(\[Sigma]\), \
\(2\)]\)\[LongEqual]modfunc[\!\(\*FormBox[StyleBox[\"x\", \
\"TI\"],TraditionalForm]\)], i.e. a Poisson\[Hyphen]distributed number of \
occurrences are assumed. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129731904912195`*^9, 
  3.8129731906162243`*^9}},ExpressionUUID->"649d3ac0-abdc-448c-a278-\
49133422d381"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FReadCoordinatesFromImage", "  ", "::", "usage"}], "=", 
   "\"\<FReadCoordinatesFromImage[outputcurve,diagramimage] opens interactive \
control for reading coordinates from an image (e.g. a scanned plot from a \
publication). The coordinates are stored in outputcurve, which must be a \
valid variable name. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129731909599867`*^9, 
  3.8129731910693665`*^9}},ExpressionUUID->"d9193e1d-a010-4e53-8d3e-\
f3f8d98fe7d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FConvolve", "  ", "::", "usage"}], "=", 
   "\"\<FConvolve[irf, timeshift, modelfunc][times]\n\nFConvolve returns the \
discrete cyclic convolution of a list of values calculated from \
modelfunc[times] with the kernel irf[[All,2]]. times is a list of values that \
must be of equal or greater length than irf.\nirf is supplied in the form \
\!\(TraditionalForm\`{{\[Null]\)t1,y1\!\(\(TraditionalForm\`}\)\),\!\(\
TraditionalForm\`{\[Null]\)t2,y2\!\(\(TraditionalForm\`}\)\)..\!\(\(\
TraditionalForm\`}\)\). modelfunc[times] must return a list of values.\n\
Before convolution, irf[[All,2]] is cyclically rotated to the right by the \
number of steps defined by the integer timeshift. \nIn sumary, the result of \
\!\(TraditionalForm\`{\[Null]\)times, ListConvolve[N@RotateRight[ \
irf[[All,2]], timeshift], model[ times], \
1]\!\(\*FormBox[SuperscriptBox[\"}\", \
StyleBox[\"T\",FontSlant->\"Plain\"]],TraditionalForm]\) is returned.\n\
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.81297319141313*^9, 
  3.8129731915225105`*^9}},ExpressionUUID->"9191d1b3-fc67-4737-acd7-\
1f2af4c4f2ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetMaxChannel", "  ", "::", "usage"}], "=", 
   "\"\<Returns maximal lifetime channel used \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973191850649*^9, 
  3.8129731919600296`*^9}},ExpressionUUID->"9dd42b0c-b9a6-4fed-8290-\
592689250708"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FNumericMatrixQ", "  ", "::", "usage"}], "=", 
   "\"\<FNumericMatrixQ[m\!\(TraditionalForm\`_\)]:\[LongEqual]MatrixQ[m,\
NumericQ] \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973192288167*^9, 
  3.8129731923975463`*^9}},ExpressionUUID->"15fd68b5-a5ee-49b9-b19f-\
6bbc63888dec"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FNumericSquareMatrixQ", "  ", "::", "usage"}], "=", 
   "\"\<FNumericSquareMatrixQ[m\!\(TraditionalForm\`_\)]:\[LongEqual]\
SquareMatrixQ[m] \!\(\(TraditionalForm\` && \)\) MatrixQ[m,NumericQ] \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129731927413087`*^9, 
  3.812973192850689*^9}},ExpressionUUID->"9c284cbe-6320-4ecb-95ac-\
c4897d24e85d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FPlotContourHisto", "  ", "::", "usage"}], "=", 
   "\"\<FPlotContourHisto[histodat:\!\(TraditionalForm\`{{_\),\!\(\
TraditionalForm\`_\),\!\(TraditionalForm\`\(\(_\)\(}\)\)\)...\!\(\(\
TraditionalForm\`}\)\),opts:OptionsPattern[]] or\nFPlotContourHisto[histodat:\
\!\(TraditionalForm\`{{{_\),\!\(TraditionalForm\`_\),\!\(TraditionalForm\`\(\(\
_\)\(}\)\)\)...\!\(\(TraditionalForm\`}\)\)..\!\(\(TraditionalForm\`}\)\),\
opts:OptionsPattern[]] \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129731931944504`*^9, 
  3.8129731933038306`*^9}},ExpressionUUID->"b8b81aac-4aab-4c52-b73d-\
863831e806d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IsInPolygonQ", "  ", "::", "usage"}], "=", 
   "\"\<IsInPolygonQ[\!\(TraditionalForm\`{\[Null]\)testx,testy\!\(\(\
TraditionalForm\`}\)\),\!\(TraditionalForm\`{{\[Null]\)x1,y1\!\(\(\
TraditionalForm\`}\)\),\!\(TraditionalForm\`{\[Null]\)x2,y2\!\(\(\
TraditionalForm\`}\)\),...\!\(\(TraditionalForm\`}\)\)] returns true if \
\!\(TraditionalForm\`{\[Null]\)testx,testy\!\(\(TraditionalForm\`}\)\) is \
inside a polygon defined by the points \
\!\(TraditionalForm\`{{\[Null]\)x1,y1\!\(\(TraditionalForm\`}\)\),\!\(\
TraditionalForm\`{\[Null]\)x2,y2\!\(\(TraditionalForm\`}\)\),...\!\(\(\
TraditionalForm\`}\)\). \nThe polygon can be closed or not. C\[Hyphen]code by \
W. Randolph Franklin\n(http://www.ecse.rpi.edu/Homepages/wrf/Research/Short\!\
\(TraditionalForm\`_\)Notes/pnpoly.html). \nJ. Wesenberg, 2008 \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973193647592*^9, 
  3.8129731937569747`*^9}},ExpressionUUID->"fdbf723c-c839-4729-8696-\
2cfd85c41229"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FOpenTTTR", "  ", "::", "usage"}], "=", 
   "\"\<FOpenTTTR[filename] opens a .tr3, .pt2, .pt3, .ht2, .ht3, or .ptu \
file given by filename. All TTTR\[Hyphen]Records are read into memory.\n\
FOpenTTTR[] opens an dialog window for choosing the TTTR file to be read in.\n\
FOpenTTTR[filename,\!\(TraditionalForm\`{\[Null]\)t1,t2\!\(\(TraditionalForm\`\
}\)\)] opens the file filename and reads only the TTTR records measured \
between times t1 and t2 into memory. t1 and t2 are given in seconds.\n\
Options:\n FCopyToLocalDisk\!\(\(TraditionalForm\` \[Rule] \)\)False \
(default)\nIf the option value is set to True, the file is copied into a \
temporary directory (\!\(TraditionalForm\`$\)TemporaryDirectory) before being \
opened. This might be faster if the original file is located on a network \
drive.\n\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129731941163597`*^9, 
  3.8129731942257395`*^9}},ExpressionUUID->"dc431c51-63eb-45d3-a1c6-\
3be077af3c7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FShowHeader", "  ", "::", "usage"}], "=", 
   "\"\<FShowHeader[] returns the header information of the last TTTR file \
opened. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973194569501*^9, 
  3.8129731946632547`*^9}},ExpressionUUID->"99ee7d7d-71ff-48fa-b305-\
c8f80b0ad4d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTTTRCreationTime", "  ", "::", "usage"}], "=", 
   "\"\<FTTTRCreationTime[] returns the creation time of the current TTTR \
file as recorded in its header. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973195009388*^9, 
  3.8129731951031427`*^9}},ExpressionUUID->"b56fe468-dafa-4d4c-ad9f-\
4468e1dee034"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetT3rFilename", "  ", "::", "usage"}], "=", 
   "\"\<FGetT3rFilename[] returns the filename of the last TTTR file opened. \
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973195446906*^9, 
  3.8129731955406604`*^9}},ExpressionUUID->"f96f4005-c087-457d-98ec-\
00dd38e923bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetFromHeader", "  ", "::", "usage"}], "=", 
   "\"\<FGetFromHeader[parametername\!\(TraditionalForm\`_\)String] returns \
the value of the header parameter named by the string parametername. E.g., \
FGetFromHeader[\\\"TTResult\!\(TraditionalForm\`_\)StopAfter\\\"] returns the \
total measurement time (in ms). \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973195900051*^9, 
  3.812973196009431*^9}},ExpressionUUID->"542cd05b-a2f5-4ba7-aa80-\
81a2f38cf560"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetStartTime", "  ", "::", "usage"}], "=", 
   "\"\<FGetStartTime[] returns start time of TTTR data in milliseconds. \
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973196431323*^9, 
  3.812973196540701*^9}},ExpressionUUID->"037a4eee-5cdc-4a8b-a8fb-\
6c8ec7ffd62c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetStopTime", "  ", "::", "usage"}], "=", 
   "\"\<FGetStopTime[] returns stop time of TTTR data in milliseconds. \
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973196868839*^9, 
  3.812973196978218*^9}},ExpressionUUID->"2f48314d-b184-4197-bc98-\
fe882114d79f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSaveAsHT3", "  ", "::", "usage"}], "=", 
   "\"\<FSaveAsHT3[filename\!\(TraditionalForm\`_\)String] saves the current \
TTTR data in ht3 format. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.81297319732198*^9, 
  3.8129731974157333`*^9}},ExpressionUUID->"cae70081-604b-4595-ab41-\
aa6270f8375a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FOutput", "  ", "::", "usage"}], "=", 
   "\"\<FOutput is an option for defining the output of some Fretica \
functions. In gerneral, the option value can be \
Foutput\!\(\(TraditionalForm\` \[Rule] \)\)FGraph for graphical output or \
Foutput\!\(\(TraditionalForm\` \[Rule] \)\)FData for numerical output. \
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129731977594957`*^9, 
  3.8129731978688755`*^9}},ExpressionUUID->"024d3d01-63ca-4348-ab2c-\
e7ce06a77d0b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FData", "  ", "::", "usage"}], "=", 
   "\"\<FData is an option value for FOutput. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973198212638*^9, 
  3.8129731983063917`*^9}},ExpressionUUID->"044cc548-0d40-4508-9154-\
f33a351851d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGraph", "  ", "::", "usage"}], "=", 
   "\"\<FGraph is an option value for FOutput. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129731986501536`*^9, 
  3.812973198743908*^9}},ExpressionUUID->"8d31b722-0489-4c92-a7e7-\
f1afc5253a04"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FValidChannelQ", "  ", "::", "usage"}], "=", 
   "\"\<FValidChannelQ[ch] returns True if ch is a valid lifetime channel, \
i.e., if ch is an integer with 1\!\(\(TraditionalForm\` < \
\)\)\[LongEqual]ch\!\(\(TraditionalForm\` < \)\)\[LongEqual]FMaxChannel. \
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129731990876703`*^9, 
  3.8129731991970496`*^9}},ExpressionUUID->"000e4a2c-26f1-4805-bca6-\
01a430f2ca20"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FRealNumberQ", "  ", "::", "usage"}], "=", 
   "\"\<FRealNumberQ[expr] returns True if expr is a real\[Hyphen]valued \
number and False otherwise. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129731995408144`*^9, 
  3.8129731996345687`*^9}},ExpressionUUID->"d30c024d-8d42-4145-808d-\
05615ce7b71b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FRouteList", "  ", "::", "usage"}], "=", 
   "\"\<Pattern for selecting detection routes (e.g., \!\(TraditionalForm\`{\
\[Null]\)1,0,1,0\!\(\(TraditionalForm\`}\)\) signifies detection routes 1 and \
3). \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973199993959*^9, 
  3.812973200087714*^9}},ExpressionUUID->"720cab13-6be0-45a9-8a05-\
a0d8b63b582b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTimeWindow", "  ", "::", "usage"}], "=", 
   "\"\<Option for defining a time window; can be All or \
\!\(TraditionalForm\`{\[Null]\)t1,t2\!\(\(TraditionalForm\`}\)\) in seconds. \
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732004314766`*^9, 
  3.8129732005408554`*^9}},ExpressionUUID->"7a54ee2a-a039-4b8c-9913-\
533be4178b27"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FChannelConstraints", "  ", "::", "usage"}], "=", 
   "\"\<Option for specifying lifetime channel constraints. Possible values: \
Automatic, None, \!\(TraditionalForm\`{\[Null]\)c1,c2\!\(\(TraditionalForm\`}\
\)\), or \!\(TraditionalForm\`{{\[Null]\)c1,c2\!\(\(TraditionalForm\`}\)\)..\!\
\(\(TraditionalForm\`}\)\). \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973200884618*^9, 
  3.8129732009939985`*^9}},ExpressionUUID->"bdddfb1e-8a7d-477a-9b9a-\
d41ba09708c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FOpenHistoData", "  ", "::", "usage"}], "=", 
   "\"\<FOpenHistoData[filename] returns a list of histograms stored in \
filename. filename must be of type .phu, .phd, or .hhd.\nFOpenHistoData[] \
opens a dialog window for choosing the histogram file to be opened. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973201337761*^9, 
  3.8129732014315133`*^9}},ExpressionUUID->"d6093a84-4ff6-457a-8618-\
2b95968c76cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetRCM", "  ", "::", "usage"}], "=", 
   "\"\<FGetRCM[] returns the currently used detection route correction \
matrix. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973201775275*^9, 
  3.812973201884655*^9}},ExpressionUUID->"68435595-9616-425c-b84c-\
fec4c876d52a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSetRCM", "  ", "::", "usage"}], "=", 
   "\"\<FSetRCM[rcm] sets the detection route correction matrix (RCM) used \
for photon burst identification and photon burst count correction for quantum \
yields, detection efficiency, and detection route crosstalk.\n\
FSetRCM[filename] sets the RCM saved in filename\nFSetRCM[] opens a dialog \
window for choosing RCM file. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732022127934`*^9, 
  3.812973202322173*^9}},ExpressionUUID->"eb9758dd-a485-40cc-be34-\
6a2352b75273"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetActiveRoutes", "  ", "::", "usage"}], "=", 
   "\"\<FGetActiveRoutes[] returns the list of active detection routes. \
Photons in inactive detection routes are ignored in photon burst \
identification. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973202681563*^9, 
  3.812973202775319*^9}},ExpressionUUID->"8a534c94-8a8d-4b31-8374-\
fa16886097ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSetActiveRoutes", "  ", "::", "usage"}], "=", 
   "\"\<FSetActiveRoutes[routelist] sets the active detection routes. \
routelist must match FRouteList. Photons in inactive detection routes are \
ignored in photon burst identification. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732031192603`*^9, 
  3.812973203228461*^9}},ExpressionUUID->"cac68562-79b0-4adc-857b-\
726c651ca871"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetDirectAcceptorExcitation", "  ", "::", "usage"}], "=", 
   "\"\<FGetDirectAcceptorExcitation[] returns the fraction \
\!\(TraditionalForm\`\[Alpha]\) of direct acceptor excitation, i.e. \
\!\(TraditionalForm\`\[Alpha]\)\[LongEqual]\!\(TraditionalForm\`\[Epsilon]\)A/\
(\!\(TraditionalForm\`\[Epsilon]\)D+\!\(TraditionalForm\`\[Epsilon]\)A), \
where \!\(TraditionalForm\`\[Epsilon]\)D and \
\!\(TraditionalForm\`\[Epsilon]\)A are the donor and acceptor extinction \
coefficients, respectively, at the wavelength of donor excitation. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129732035722237`*^9, 
  3.812973203681603*^9}},ExpressionUUID->"c669d125-0cec-4336-87dc-\
dc3f8902b780"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSetDirectAcceptorExcitation", "  ", "::", "usage"}], "=", 
   "\"\<FSetDirectAcceptorExcitation[\!\(TraditionalForm\`\[Alpha]\)] sets \
the fraction of direct acceptor excitation to \
\!\(TraditionalForm\`\[Alpha]\). \!\(TraditionalForm\`\[Alpha]\) is defined \
by \!\(TraditionalForm\`\[Alpha]\)\[LongEqual]\!\(TraditionalForm\`\[Epsilon]\
\)A/(\!\(TraditionalForm\`\[Epsilon]\)D+\!\(TraditionalForm\`\[Epsilon]\)A), \
where \!\(TraditionalForm\`\[Epsilon]\)D and \
\!\(TraditionalForm\`\[Epsilon]\)A are the donor and acceptor extinction \
coefficients, respectively, at the wavelength of donor excitation. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973204025365*^9, 
  3.8129732041347456`*^9}},ExpressionUUID->"93008a13-e237-42df-8143-\
c833e6be6eb3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetAnisotropyL1", "  ", "::", "usage"}], "=", 
   "\"\<FGetAnisotropyL1[] returns the anisotropy correction factor L1. \
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973204478507*^9, 
  3.8129732045722604`*^9}},ExpressionUUID->"ee80b64b-d14a-4321-8878-\
1217204dc696"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetAnisotropyL2", "  ", "::", "usage"}], "=", 
   "\"\<FGetAnisotropyL2[] returns the anisotropy correction factor L2. \
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973204916023*^9, 
  3.812973205025403*^9}},ExpressionUUID->"ba8a582c-6634-421c-97cf-\
b397cfe444d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSetAnisotropyL1", "  ", "::", "usage"}], "=", 
   "\"\<FSetAnisotropyL1[value] sets the anisotropy correction factor L1. \
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732053691645`*^9, 
  3.812973205462919*^9}},ExpressionUUID->"290682f7-6902-4957-b77c-\
994f42c3be8d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSetAnisotropyL2", "  ", "::", "usage"}], "=", 
   "\"\<FSetAnisotropyL2[value] sets the anisotropy correction factor L2. \
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732058223066`*^9, 
  3.8129732059160595`*^9}},ExpressionUUID->"6438397b-de78-47fe-9c0e-\
76a89a4510aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSetFRETRoutes", "  ", "::", "usage"}], "=", 
   "\"\<FSetFRETRoutes[\!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"r\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"r\", \"TI\"], \"2\"], \",\", \
SubscriptBox[StyleBox[\"r\", \"TI\"], \"3\"], \",\", \"\[Ellipsis]\"}], \
\"}\"}],TraditionalForm]\)] sets which detection routes are used as donor or \
acceptor detection routes in a FRET measurement. For each detection channel \
\!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\) the possible values \
of \!\(\*FormBox[SubscriptBox[StyleBox[\"r\", \"TI\"], StyleBox[\"i\", \
\"TI\"]],TraditionalForm]\) are: \\\"D\\\", \\\"A\\\", or 0. Example: \
FSetFRETRoutes[\!\(TraditionalForm\`{\[Null]\)\\\"A\\\", \\\"D\\\",\\\"A\\\",\
\\\"D\\\",0 ,0 \!\(\(TraditionalForm\`}\)\)]. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732062754498`*^9, 
  3.8129732064160805`*^9}},ExpressionUUID->"38d52cac-b7c0-46f4-a24b-\
5d12a1498636"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetFRETRoutes", "  ", "::", "usage"}], "=", 
   "\"\<FGetFRETRoutes[] returns \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"r\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"r\", \"TI\"], \"2\"], \",\", \
SubscriptBox[StyleBox[\"r\", \"TI\"], \"3\"], \",\", \"\[Ellipsis]\"}], \
\"}\"}],TraditionalForm]\), where for each detection channel \
\!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\), the possible values \
for \!\(\*FormBox[SubscriptBox[StyleBox[\"r\", \"TI\"], StyleBox[\"i\", \
\"TI\"]],TraditionalForm]\) are: \\\"D\\\", \\\"A\\\", or 0. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973207306744*^9, 
  3.8129732074161224`*^9}},ExpressionUUID->"4f7ea6de-fa1e-4d9f-b6e8-\
35233b3fa5a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetDonorRoutes", "  ", "::", "usage"}], "=", 
   "\"\<FGetDonorRoutes[] returns \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"r\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"r\", \"TI\"], \"2\"], \",\", \
SubscriptBox[StyleBox[\"r\", \"TI\"], \"3\"], \",\", \"\[Ellipsis]\"}], \
\"}\"}],TraditionalForm]\), where for each detection channel \
\!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\), the value of \
\!\(\*FormBox[SubscriptBox[StyleBox[\"r\", \"TI\"], StyleBox[\"i\", \
\"TI\"]],TraditionalForm]\) is 1 if \!\(\*FormBox[StyleBox[\"i\", \
\"TI\"],TraditionalForm]\) is a donor detection route or 0 elsewise. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129732079786453`*^9, 
  3.812973208088023*^9}},ExpressionUUID->"4e984cec-8d59-4071-a21c-\
fd72691ae6a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetAcceptorRoutes", "  ", "::", "usage"}], "=", 
   "\"\<FGetAcceptorRoutes[] returns \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"r\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"r\", \"TI\"], \"2\"], \",\", \
SubscriptBox[StyleBox[\"r\", \"TI\"], \"3\"], \",\", \"\[Ellipsis]\"}], \
\"}\"}],TraditionalForm]\), where for each detection channel \
\!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\), the value of \
\!\(\*FormBox[SubscriptBox[StyleBox[\"r\", \"TI\"], StyleBox[\"i\", \
\"TI\"]],TraditionalForm]\) is 1 if \!\(\*FormBox[StyleBox[\"i\", \
\"TI\"],TraditionalForm]\) is an acceptor detection route or 0 otherwise. \
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.81297320844741*^9, 
  3.8129732085567894`*^9}},ExpressionUUID->"8fcfb83a-7540-43cc-96ce-\
30039a13391c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSetAnisotropyRoutes", "  ", "::", "usage"}], "=", 
   "\"\<FSetAnisotropyRoutes[\!\(TraditionalForm\`{\[Null]\)r1, r2, r3, \
\!\(TraditionalForm\`\(\(\[Ellipsis]\)\(}\)\)\)] sets which detection routes \
are used for parallel (\\\"P\\\") or orthogonal (\\\"S\\\") detection routes \
in a FRET measurement. For each detection channel \
\!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\), the possible values \
for \!\(\*FormBox[SubscriptBox[StyleBox[\"r\", \"TI\"], StyleBox[\"i\", \
\"TI\"]],TraditionalForm]\) are: \\\"P\\\", \\\"S\\\", or 0. Example: \
FSetAnisotropyRoutes[\!\(TraditionalForm\`{\[Null]\)\\\"P\\\", \
\\\"P\\\",\\\"S\\\",\\\"S\\\",0 ,0 \!\(\(TraditionalForm\`}\)\)]. \nIn \
PIE/Alex measurements the polarization of the donor and acceptor excitation \
laser beams may differ. In this case one can use \
FSetAnisotropyRoutes[\!\(TraditionalForm\`{\[Null]\)r1, r2, r3, \
\!\(TraditionalForm\`\(\(\[Ellipsis]\)\(}\)\)\), \
\!\(TraditionalForm\`{\[Null]\)rpie1, rpie2, rpie3, \!\(TraditionalForm\`\(\(\
\[Ellipsis]\)\(}\)\)\)] to set the relative polarization for each laser \
separately. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973208916177*^9, 3.8129732090255566`*^9}, 
   3.862819274429994*^9},ExpressionUUID->"65f75e6f-8eb8-4542-86a9-\
cefbdc9a999d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetAnisotropyRoutes", "  ", "::", "usage"}], "=", 
   "\"\<FGetAnisotropyRoutes[] returns \!\(TraditionalForm\`{\[Null]\)r1, r2, \
r3, \!\(TraditionalForm\`\(\(\[Ellipsis]\)\(}\)\)\), where for each detection \
channel \!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\), the \
possible values for \!\(\*FormBox[SubscriptBox[StyleBox[\"r\", \"TI\"], \
StyleBox[\"i\", \"TI\"]],TraditionalForm]\) are: \\\"P\\\", \\\"S\\\", or 0. \
In PIE/Alex mode these are the assumed settings for the detection of photons \
after donor excitation. Call FGetPIEAnisotropyRoutes[] to get the settings \
for the detection after acceptor excitation. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732101195593`*^9, 
  3.812973210228726*^9}},ExpressionUUID->"1b3ce8c8-f20a-476a-bd47-\
2b3ebfbf6c10"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetPIEAnisotropyRoutes", "  ", "::", "usage"}], "=", 
   "\"\<FGetPIEAnisotropyRoutes[] returns \!\(TraditionalForm\`{\[Null]\)r1, \
r2, r3, \!\(TraditionalForm\`\(\(\[Ellipsis]\)\(}\)\)\), where for each \
detection channel \!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\), \
the possible values for \!\(\*FormBox[SubscriptBox[StyleBox[\"r\", \"TI\"], \
StyleBox[\"i\", \"TI\"]],TraditionalForm]\) are: \\\"P\\\", \\\"S\\\", or 0. \
These settings apply in PIE/Alex mode and define which detection routes are \
considered to be parallel (\\\"P\\\") or orthogonal (\\\"S\\\") with respect \
to the polarization of the acceptor excitation light. Call \
FGetAnisotropyRoutes[] to get the settings for the detection after donor \
excitation. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732107599993`*^9, 
  3.81297321086938*^9}},ExpressionUUID->"1a57d12b-e013-4cc3-9827-\
973e68f7d1ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetMarkerList", "  ", "::", "usage"}], "=", 
   "\"\<FGetMarkerList[] returns a list of the special markers that are \
embedded in the TTTR records of the currently opened TTTR file. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973211588157*^9, 
  3.8129732116819115`*^9}},ExpressionUUID->"1010a60a-49e5-495a-b20b-\
4d491ba1ebfb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FEnableChannelConstraints", "  ", "::", "usage"}], "=", 
   "\"\<FEnableChannelConstraints[boolean] enables/disables \
channel\[Hyphen]constraining depending on whether boolean is True or False. \
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973212025673*^9, 
  3.8129732121350517`*^9}},ExpressionUUID->"4bcdff98-53c6-4dd4-bf95-\
7cd681eb47f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetChannelConstraints", "  ", "::", "usage"}], "=", 
   "\"\<FGetChannelConstraints[route] returns the lifetime channel \
constraints of route.\n FGetChannelConstraints[] returns a list of lifetime \
channel constraints of all detection routes. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973212478815*^9, 
  3.812973212588195*^9}},ExpressionUUID->"2d1510ef-34d4-4ddb-9fb2-\
152d10908727"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSetChannelConstraints", "  ", "::", "usage"}], "=", 
   "\"\<FSetChannelConstraints[route,\!\(TraditionalForm\`{\[Null]\)ch1,ch2\!\
\(\(TraditionalForm\`}\)\)] sets the lifetime channel constraints of route to \
\!\(TraditionalForm\`{\[Null]\)ch1,ch2\!\(\(TraditionalForm\`}\)\).\n \
FSetChannelConstraints[\!\(TraditionalForm\`{\[Null]\)ch1,ch2\!\(\(\
TraditionalForm\`}\)\)] sets the lifetime channel constraints of all \
detection routes to \
\!\(TraditionalForm\`{\[Null]\)ch1,ch2\!\(\(TraditionalForm\`}\)\). \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973212931957*^9, 
  3.8129732130413356`*^9}},ExpressionUUID->"3c85f348-dc4c-49fc-8416-\
e394634da2d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FEnablePie", "  ", "::", "usage"}], "=", 
   "\"\<FEnablePie[boolean] enables/disables pulsed interleaved excitation \
(PIE), depending on whether boolean is True or False. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732134007254`*^9, 
  3.8129732134944806`*^9}},ExpressionUUID->"6b00a06f-54d1-47eb-9c8a-\
64cc31199a68"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetPIERoutes", "  ", "::", "usage"}], "=", 
   "\"\<FGetPIERoutes[] returns the PIE detection route list. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129732138382454`*^9, 
  3.812973213947624*^9}},ExpressionUUID->"265e6c90-cb4a-4904-b259-\
24ef4f5e5eba"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSetPIERoutes", "  ", "::", "usage"}], "=", 
   "\"\<FSetPIERoutes[routelist] sets the PIE detection routes. routelist \
must match the FRouteList pattern. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973214291388*^9, 
  3.8129732144007673`*^9}},ExpressionUUID->"db9a7484-48e6-4729-b21a-\
d861d07bb0d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetPIEChannelConstraints", "  ", "::", "usage"}], "=", 
   "\"\<FGetPIEChannelConstraints[route] returns the PIE lifetime channel \
constraints of route.\n FGetPIEChannelConstraints[] returns a list of PIE \
lifetime channel constraints of all detection routes. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732147445297`*^9, 
  3.8129732148382845`*^9}},ExpressionUUID->"c763a7d3-e582-49ed-9b18-\
dbd269d564e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSetPIEChannelConstraints", "  ", "::", "usage"}], "=", 
   "\"\<FSetPIEChannelConstraints[route,\!\(TraditionalForm\`{\[Null]\)ch1,\
ch2\!\(\(TraditionalForm\`}\)\)] sets the PIE lifetime channel constraints of \
route to \!\(TraditionalForm\`{\[Null]\)ch1,ch2\!\(\(TraditionalForm\`}\)\).\n\
 FSetPIEChannelConstraints[\!\(TraditionalForm\`{\[Null]\)ch1,ch2\!\(\(\
TraditionalForm\`}\)\)] sets the PIE lifetime channel constraints of all \
detection routes to \
\!\(TraditionalForm\`{\[Null]\)ch1,ch2\!\(\(TraditionalForm\`}\)\). \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973215197672*^9, 
  3.8129732153070517`*^9}},ExpressionUUID->"607c8575-5847-4b38-b9ca-\
e0ae473d82c5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSetPIEGamma", "  ", "::", "usage"}], "=", 
   "\"\<FSetPIEGamma[value] sets \!\(TraditionalForm\`\*SubscriptBox[\(\
\[Gamma]\), \(PIE\)]\), the factor by which the PIE channel photon counts are \
weighted in the formula of the stoichiometry ratio and transfer efficiency \
(\!\(\*SubscriptBox[\(S\), \(PIE\)]\) and \!\(\*SubscriptBox[\(E\), \
\(PIE\)]\)). \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973215650813*^9, 3.812973215775818*^9}, {
  3.865071149101824*^9, 
  3.865071152191432*^9}},ExpressionUUID->"c33e4d8e-6933-4a43-a041-\
2d14cbe6e11f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetPIEGamma", "  ", "::", "usage"}], "=", 
   "\"\<FGetPIEGamma[] returns \!\(TraditionalForm\`\*SubscriptBox[\(\[Gamma]\
\), \(PIE\)]\), the factor by which the PIE channel photon counts are \
weighted in the formula of the stoichiometry ratio and transfer efficiency \
(\!\(\*SubscriptBox[\(S\), \(PIE\)]\) and \!\(\*SubscriptBox[\(E\), \
\(PIE\)]\)). \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.865070457825878*^9, 3.8650704760647607`*^9}, {
  3.8650710963813996`*^9, 
  3.865071125408285*^9}},ExpressionUUID->"cdeed580-131a-4e8f-b19f-\
8beb4d7a7893"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FPIEChannelSelector", "  ", "::", "usage"}], "=", 
   "\"\<FPIEChannelSelector[routelist] starts an interactive selection tool \
for setting the lifetime channel constraints used in PIE. routelist is a list \
of detection routes (e.g., routelist\[LongEqual]\!\(TraditionalForm\`{\[Null]\
\)1,2,3,4\!\(\(TraditionalForm\`}\)\) represents detection routes 1,2,3, and \
4.). \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732161195803`*^9, 
  3.8129732162289596`*^9}},ExpressionUUID->"88fd4f69-669c-464a-bcf6-\
85a65df35e04"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FShiftPhotonTimesByPicoseconds", "  ", "::", "usage"}], "=", 
   "\"\<FShiftPhotonTimesByPicoseconds[dt\!\(TraditionalForm\`_\)Integer,\
route\!\(TraditionalForm\`_\)Integer] adds dt picoseconds to the time tags of \
all photons detected in route.\n\
FShiftPhotonTimesByPicoseconds[\!\(TraditionalForm\`{\[Null]\)dt1, dt2 ..\!\(\
\(TraditionalForm\`}\)\)] shifts route 1 by dt1, route 2 by dt2, etc.\n\
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732165883484`*^9, 
  3.8129732166977267`*^9}},ExpressionUUID->"29fbb206-28cb-4691-bb5a-\
3a7810f82a26"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FPCH", "  ", "::", "usage"}], "=", 
   "\"\<FPCH[routelist, binning, opts] returns a photon counting histogram \
(PCH). Only detection routes specified in routelist are used. routelist must \
match the FRouteList pattern. binning is the bin width given in milliseconds.\
\n FPCH[binning, opts] returns a PCH of all photons.\n \
FPCH[\!\(TraditionalForm\`{\*SubscriptBox[\(rl\), \(1\)], \*SubscriptBox[\(rl\
\), \(2\)],  ... }\), binning, opts] returns PCHs for each routelist \
\!\(TraditionalForm\`\*SubscriptBox[\(rl\), \(1\)]\), \
\!\(TraditionalForm\`\*SubscriptBox[\(rl\), \(2\)] ... \)\n If the option \
FOutput is set to FOutput\!\(\(TraditionalForm\` \[Rule] \)\)FGraph \
(default), FPCH returs a plot of the PCH data.\n If \
FOutput\!\(\(TraditionalForm\` \[Rule] \)\)FData, the PCH data are returned \
as lists of \!\(\*FormBox[RowBox[{\"{\", RowBox[{StyleBox[\"x\", \"TI\"], \",\
\", StyleBox[\"y\", \"TI\"]}], \"}\"}],TraditionalForm]\) values.\n With the \
option FTimeWindow\!\(\*FormBox[RowBox[{\"\[Rule]\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"t\", \"TI\"], \"2\"]}], \"}\"}]}],TraditionalForm]\), \
the PCH is calculated for photons measured in time interval \
\!\(\*FormBox[RowBox[{\"(\", RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], \
\"1\"], \",\", SubscriptBox[StyleBox[\"t\", \"TI\"], \"2\"]}], \
\")\"}],TraditionalForm]\).\n With the option \
FChannelConstraints\!\(\*FormBox[RowBox[{\"\[Rule]\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"c\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"c\", \"TI\"], \"2\"]}], \"}\"}]}],TraditionalForm]\), \
only photons in the lifetime channel range \!\(\*FormBox[RowBox[{\"(\", \
RowBox[{SubscriptBox[StyleBox[\"c\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"c\", \"TI\"], \"2\"]}], \")\"}],TraditionalForm]\) \
are used.\n All options of ListLogPlot can be used in FPCH for changing the \
graphical output.\n  \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732170571156`*^9, 
  3.8129732171821213`*^9}},ExpressionUUID->"62326573-2b04-4841-892c-\
6f2b3edb22e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FPCH3DG", "  ", "::", "usage"}], "=", 
   "\"\<FPCH3DG[nmax,\!\(TraditionalForm\`{{\[Null]\)brightness1,nmean1\!\(\(\
TraditionalForm\`}\)\),\!\(TraditionalForm\`{\[Null]\)brightness2,nmean2\!\(\(\
TraditionalForm\`}\)\),..\!\(\(TraditionalForm\`}\)\),\!\(\*FormBox[\
SubscriptBox[StyleBox[\"n\", \"TI\"], \"bg\"],TraditionalForm]\),F1,F2] \
calculates model PCH data assuming a 3D Gaussian confocal volume and a static \
distribution of particles.\nnmax: maximum value of photon counts per bin up \
to which the model PCH is calculated\nbrightnessn: mean number of photons per \
bin for species n if the particle is located at the center of the confocal \
volume\nnmeann: mean number of molecules of species n in the confocal volume\n\
\!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \"TI\"], \
\"bg\"],TraditionalForm]\): mean number of background photons per bin\nF1, \
F2: correction factors (see Bo Huang et al., ChemPhysChem 2004, 5, 1523\
\[Hyphen]1531) \n\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732175571365`*^9, 
  3.8129732176665163`*^9}},ExpressionUUID->"22788bac-9805-4888-bdcf-\
cd0e99b4c6ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FPCHFida", "  ", "::", "usage"}], "=", 
   "\"\<FPCHFida[nmax, \!\(\*FormBox[RowBox[{\"{\", RowBox[{\"{\", \
SubscriptBox[StyleBox[\"B\", \"TI\"], \"1\"]}]}],TraditionalForm]\), \
\!\(\*FormBox[RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], \"1\"], \
\"}\"}],TraditionalForm]\), \!\(\*FormBox[RowBox[{\"{\", \
SubscriptBox[StyleBox[\"B\", \"TI\"], \"2\"]}],TraditionalForm]\), \
\!\(\*FormBox[RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], \"2\"], \
\"}\"}],TraditionalForm]\),..\!\(\(TraditionalForm\`}\)\), \
\!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \"TI\"], \
\"bg\"],TraditionalForm]\), \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"a\", \"TI\"], \
StyleBox[\"i\", \"TI\"]], \",\", StyleBox[\"i\", \"TI\"]}], \"}\"}], \
\"...\"}], \"}\"}],TraditionalForm]\)]\ncalculates a model PCH as introduced \
in FIDA*, where the confocal volume is described generically by the function \
\!\(\*FormBox[RowBox[{StyleBox[\"d\", \"TI\"], StyleBox[\"V\", \"TI\"], \
\"/\", StyleBox[\"d\", \"TI\"], StyleBox[\"x\", \"TI\"], \"\[LongEqual]\", \
UnderscriptBox[\"\[Sum]\", StyleBox[\"i\", \"TI\"],LimitsPositioning->True], \
SubscriptBox[StyleBox[\"a\", \"TI\"], StyleBox[\"i\", \"TI\"]], \
SuperscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"i\", \
\"TI\"]]}],TraditionalForm]\). \nnmax: maximum value of photon counts per bin \
to which the model PCH is calculated\n\!\(\*FormBox[SubscriptBox[StyleBox[\"B\
\", \"TI\"], StyleBox[\"s\", \"TI\"]],TraditionalForm]\): mean number of \
photons per bin for species \!\(\*FormBox[StyleBox[\"s\", \
\"TI\"],TraditionalForm]\) when the particle is located at the center of the \
confocal volume\n\!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \"TI\"], \
StyleBox[\"s\", \"TI\"]],TraditionalForm]\): mean number of molecules of \
species \!\(\*FormBox[StyleBox[\"s\", \"TI\"],TraditionalForm]\) in the \
confocal volume\n\!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \"TI\"], \
\"bg\"],TraditionalForm]\): mean number of background photons per bin\n\
\!\(\*FormBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"a\", \"TI\"], StyleBox[\"i\", \"TI\"]], \
\",\", StyleBox[\"i\", \"TI\"]}], \"}\"}], \"...\"}], \
\"}\"}],TraditionalForm]\) is a list of coefficients and exponents defining \
\!\(\*FormBox[RowBox[{StyleBox[\"d\", \"TI\"], StyleBox[\"V\", \"TI\"], \
\"/\", StyleBox[\"d\", \"TI\"], StyleBox[\"x\", \"TI\"], \"\[LongEqual]\", \
UnderscriptBox[\"\[Sum]\", StyleBox[\"i\", \"TI\"],LimitsPositioning->True], \
SubscriptBox[StyleBox[\"a\", \"TI\"], StyleBox[\"i\", \"TI\"]], \
SuperscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"i\", \
\"TI\"]]}],TraditionalForm]\). Note that \!\(\*FormBox[StyleBox[\"i\", \
\"TI\"],TraditionalForm]\) is not necessarily an integer. For example, \
\!\(\*FormBox[RowBox[{StyleBox[\"d\", \"TI\"], StyleBox[\"V\", \"TI\"], \
\"/\", StyleBox[\"d\", \"TI\"], StyleBox[\"x\", \"TI\"], \"\[LongEqual]\", \
SuperscriptBox[StyleBox[\"x\", \"TI\"], RowBox[{\"1\", \"/\", \
\"2\"}]]}],TraditionalForm]\) describes a 3D Gaussian confocal volume**. \n\n\
Kask, P., Palo, K., Ullman, D., and Gall, K. (1999) Proc. Natl. Acad. Sci. U. \
S. A. 96, 13756\[Hyphen]13761\n* Meng, F., Ma, H. (2006) J.Phys. Chem. B, \
110,25716\[Hyphen]25720\nThe PCH is calculated as described in Gopich, I., \
Szabo, A. (2005) J. Phys. Chem. B, 109, 17683\[Hyphen]17688. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973218041532*^9, 
  3.8129732181665373`*^9}},ExpressionUUID->"e7985b08-06d5-4afd-932d-\
e78d0f74cd66"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FPCHFidaFit", "  ", "::", "usage"}], "=", 
   "\"\<FPCHFidaFit[pchdat, \!\(\*FormBox[RowBox[{\"{\", RowBox[{\"{\", \
SubscriptBox[StyleBox[\"B\", \"TI\"], \"1\"]}]}],TraditionalForm]\), \
\!\(\*FormBox[RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], \"1\"], \
\"}\"}],TraditionalForm]\), \!\(\*FormBox[RowBox[{\"{\", \
SubscriptBox[StyleBox[\"B\", \"TI\"], \"2\"]}],TraditionalForm]\), \
\!\(\*FormBox[RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], \"2\"], \
\"}\"}],TraditionalForm]\),..\!\(\(TraditionalForm\`}\)\), \
\!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \"TI\"], \
\"bg\"],TraditionalForm]\), \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"a\", \"TI\"], \
StyleBox[\"i\", \"TI\"]], \",\", StyleBox[\"i\", \"TI\"]}], \"}\"}], \
\"...\"}], \"}\"}],TraditionalForm]\), guess]\nFPCHFidaFit fits the FIDA \
model to pchdat. \n\!\(\*FormBox[SubscriptBox[StyleBox[\"B\", \"TI\"], \
StyleBox[\"s\", \"TI\"]],TraditionalForm]\): Mean number of photons per bin \
for species \!\(\*FormBox[StyleBox[\"s\", \"TI\"],TraditionalForm]\) when the \
particle is located at the center of the confocal volume\n\
\!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"s\", \
\"TI\"]],TraditionalForm]\): Mean number of molecules of species \
\!\(\*FormBox[StyleBox[\"s\", \"TI\"],TraditionalForm]\) in the confocal \
volume\n\!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \"TI\"], \
\"bg\"],TraditionalForm]\): mean number of background photons per bin\n\
\!\(\*FormBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"a\", \"TI\"], StyleBox[\"i\", \"TI\"]], \
\",\", StyleBox[\"i\", \"TI\"]}], \"}\"}], \"...\"}], \
\"}\"}],TraditionalForm]\): List of coefficients and exponents defining \
\!\(\*FormBox[RowBox[{StyleBox[\"d\", \"TI\"], StyleBox[\"V\", \"TI\"], \
\"/\", StyleBox[\"d\", \"TI\"], StyleBox[\"x\", \"TI\"], \"\[LongEqual]\", \
UnderscriptBox[\"\[Sum]\", StyleBox[\"i\", \"TI\"],LimitsPositioning->True], \
SubscriptBox[StyleBox[\"a\", \"TI\"], StyleBox[\"i\", \"TI\"]], \
SuperscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"i\", \
\"TI\"]]}],TraditionalForm]\).\nSee the documentation of FPCHFida for more \
details. \nThe option FConstraints allows constraints to be applied to the \
fit parameters.\n(Default: FConstraints\!\(\(TraditionalForm\` \[Rule] \
\)\)None)\nAll options of ListLogPlot can be used in FPCH for changing the \
graphical output.\n\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973218541551*^9, 
  3.8129732186509314`*^9}},ExpressionUUID->"e63948e9-c207-47b2-bc27-\
5beeac5e87e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FPCHFidaGlobalFit", "  ", "::", "usage"}], "=", 
   "\"\<FPCHFidaGlobalFit[\!\(TraditionalForm\`{{\[Null]\)pchdat1, \
\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"B\
\", \"TI\"], \"11\"], \",\", SubscriptBox[StyleBox[\"n\", \"TI\"], \"11\"]}], \
\"}\"}]}],TraditionalForm]\), \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"B\", \"TI\"], \"12\"], \",\", \
SubscriptBox[StyleBox[\"n\", \"TI\"], \"12\"]}], \"}\"}],TraditionalForm]\), \
..\!\(\(TraditionalForm\`}\)\), \
\!\(\*FormBox[RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], \"bg1\"], \
\"}\"}],TraditionalForm]\), \!\(TraditionalForm\`{\[Null]\)pchdat2, \
\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"B\
\", \"TI\"], \"21\"], \",\", SubscriptBox[StyleBox[\"n\", \"TI\"], \"21\"]}], \
\"}\"}]}],TraditionalForm]\), \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"B\", \"TI\"], \"22\"], \",\", \
SubscriptBox[StyleBox[\"n\", \"TI\"], \"22\"]}], \"}\"}],TraditionalForm]\), \
..\!\(\(TraditionalForm\`}\)\), \
\!\(\*FormBox[RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], \"bg2\"], \
\"}\"}],TraditionalForm]\), ..\!\(TraditionalForm\`\(\(}\)\(}\)\)\), \
\!\(\*FormBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"a\", \"TI\"], StyleBox[\"i\", \"TI\"]], \
\",\", StyleBox[\"i\", \"TI\"]}], \"}\"}], \"...\"}], \
\"}\"}],TraditionalForm]\), guess]\nFPCHFidaGlobalFit performs a global fit \
of the FIDA model to the PCH data pchdat1, pchdat2,... \nThe model parameters \
are described in the documentation of FPCHFida. \nThe option FConstraints \
allows constraints to be applied to the fit parameters. (Default: \
FConstraints\!\(\(TraditionalForm\` \[Rule] \)\)None)\nAll options of \
ListLogPlot can be used in FPCH for changing the graphical output.\n\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129732190259447`*^9, 
  3.8129732191353235`*^9}},ExpressionUUID->"3f5b81aa-f214-47fc-88ff-\
9032e6ad0a4f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FFindBurstsDeltaT", "  ", "::", "usage"}], "=", 
   "\"\<FFindBurstsDeltaT[\!\(\*FormBox[RowBox[{\"\[CapitalDelta]\", \
SubscriptBox[StyleBox[\"t\", \"TI\"], \"max\"]}],TraditionalForm]\), \
\!\(\*FormBox[SubscriptBox[StyleBox[\"N\", \"TI\"], \"min\"],TraditionalForm]\
\), \!\(\*FormBox[SubscriptBox[StyleBox[\"N\", \"TI\"], \
\"max\"],TraditionalForm]\)] \nreplaces the current burst list. The new \
fluorescence photon bursts are identified using the DeltaT method. This \
algorithm identifies sequences of consecutive photons for which all \
interphoton times \!\(\*FormBox[RowBox[{StyleBox[\"d\", \"TI\"], \
SubscriptBox[StyleBox[\"t\", \"TI\"], StyleBox[\"i\", \
\"TI\"]]}],TraditionalForm]\) are less than \!\(\*FormBox[RowBox[{\"\
\[CapitalDelta]\", SubscriptBox[StyleBox[\"t\", \"TI\"], \
\"max\"]}],TraditionalForm]\) (given in seconds). To correct for different \
quantum yields and detection efficiencies, the interphoton times are weighted \
by the reciprocal diagonal elements of the route correction matrix (RCM), \
i.e., the interphoton time between two photons detected at times \
\!\(\*FormBox[SubscriptBox[StyleBox[\"t\", \"TI\"], RowBox[{StyleBox[\"i\", \
\"TI\"], \"-\", \"1\"}]],TraditionalForm]\) and \
\!\(\*FormBox[SubscriptBox[StyleBox[\"t\", \"TI\"], StyleBox[\"i\", \
\"TI\"]],TraditionalForm]\) is calculated as \
\!\(\*FormBox[RowBox[{StyleBox[\"d\", \"TI\"], SubscriptBox[StyleBox[\"t\", \
\"TI\"], StyleBox[\"i\", \"TI\"]], \"\[LongEqual]\", RowBox[{\"(\", \
RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], StyleBox[\"i\", \"TI\"]], \
\"-\", SubscriptBox[StyleBox[\"t\", \"TI\"], RowBox[{StyleBox[\"i\", \"TI\"], \
\"-\", \"1\"}]]}], \")\"}], \
\"/\"}],TraditionalForm]\)RCM\!\(\*FormBox[SubscriptBox[\"\[Null]\", \
RowBox[{SubscriptBox[StyleBox[\"r\", \"TI\"], StyleBox[\"i\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"r\", \"TI\"], StyleBox[\"i\", \
\"TI\"]]}]],TraditionalForm]\), where RCM\!\(\*FormBox[SubscriptBox[\"\[Null]\
\", RowBox[{SubscriptBox[StyleBox[\"r\", \"TI\"], StyleBox[\"i\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"r\", \"TI\"], StyleBox[\"i\", \
\"TI\"]]}]],TraditionalForm]\) is the diagonal element corresponding to the \
detection route \!\(\*FormBox[SubscriptBox[StyleBox[\"r\", \"TI\"], StyleBox[\
\"i\", \"TI\"]],TraditionalForm]\) of the \!\(\*FormBox[StyleBox[\"i\", \
\"TI\"],TraditionalForm]\)th photon.\nAn identified sequence of consecutive \
photons is classified as a burst if\n\
\!\(\*FormBox[RowBox[{SubscriptBox[StyleBox[\"N\", \"TI\"], \"min\"], \"<\", \
SubsuperscriptBox[StyleBox[\"N\", \"TI\"], \"tot\", \"corr\"], \"<\", \
SubscriptBox[StyleBox[\"N\", \"TI\"], \"max\"]}],TraditionalForm]\),\nwhere \
\!\(\*FormBox[SubsuperscriptBox[StyleBox[\"N\", \"TI\"], \"tot\", \
\"corr\"],TraditionalForm]\) is the corrected total number of photons in the \
sequence given by \n\!\(\*FormBox[RowBox[{SubsuperscriptBox[StyleBox[\"N\", \
\"TI\"], \"tot\", \"corr\"], \"\[LongEqual]\"}],TraditionalForm]\)Total[ RCM.\
\!\(\*FormBox[RowBox[{\"(\", RowBox[{StyleBox[\"n\", \"TI\"], \"-\", \
StyleBox[\"b\", \"TI\"], StyleBox[\"T\", \"TI\"]}], \
\")\"}],TraditionalForm]\) ].\nHere \!\(\*FormBox[RowBox[{StyleBox[\"n\", \
\"TI\"], \"\[LongEqual]\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"n\", \"TI\"], \"2\"], \",\", \"..\"}], \
\"}\"}]}],TraditionalForm]\) is the list of photon counts of the sequence \
detected in routes \!\(\*FormBox[RowBox[{StyleBox[\"r\", \"TI\"], \"\
\[LongEqual]\", \"1\", \",\", \"2\", \",\", \"..\"}],TraditionalForm]\), RCM \
is the route correction matrix, \!\(\*FormBox[RowBox[{StyleBox[\"b\", \
\"TI\"], \"\[LongEqual]\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"b\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"b\", \"TI\"], \"2\"], \",\", \"..\"}], \
\"}\"}]}],TraditionalForm]\) is the list of background count rates of routes \
\!\(\*FormBox[RowBox[{StyleBox[\"r\", \"TI\"], \"\[LongEqual]\", \"1\", \
\",\", \"2\", \",\", \"..\"}],TraditionalForm]\), and \!\(\*FormBox[StyleBox[\
\"T\", \"TI\"],TraditionalForm]\) is the duration of the sequence. The \
background rates need to be set beforehand with FSetBackground or \
FDetermineBackground, and the RCM needs to be set with FSetRCM. A burst \
starts and ends with the first and last photon, respectively, for which \
\!\(\*FormBox[RowBox[{StyleBox[\"d\", \"TI\"], SubscriptBox[StyleBox[\"t\", \
\"TI\"], StyleBox[\"i\", \"TI\"]], \"<\", \"\[CapitalDelta]\", \
SubscriptBox[StyleBox[\"t\", \"TI\"], \"max\"]}],TraditionalForm]\). \nOnly \
photons of active detection routes are used for burst identification (see \
FSetActiveRoutes). If channel constraints are enabled (see \
FEnableChannelConstraints) but PIE mode is not enabled, only photon's within \
the main channel ranges are used for identification (see \
FSetChannelConstraints and FGetChannelConstraints). \nIf PIE is enabled (see \
FEnablePIE), the identification algorithm can be modified using the \
FPIEBurstIdentificationMethod option. Possible settings are:\n \
FPIEBurstIdentificationMethod\!\(\(TraditionalForm\` \[Rule] \
\)\)FMainChannelAboveThreshold (default)\n \
FPIEBurstIdentificationMethod\!\(\(TraditionalForm\` \[Rule] \
\)\)FMainChannelOrPieChannelAboveThreshold\n \
FPIEBurstIdentificationMethod\!\(\(TraditionalForm\` \[Rule] \
\)\)FMainChannelPlusPieChannelAboveThreshold\n \
FPIEBurstIdentificationMethod\!\(\(TraditionalForm\` \[Rule] \
\)\)FPieChannelAboveThreshold\n \
FPIEBurstIdentificationMethod\!\(\(TraditionalForm\` \[Rule] \
\)\)FDualChannelBurstSearch\n\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973219510337*^9, 3.8129732196509676`*^9}, {
  3.860493053827011*^9, 3.8604930736200905`*^9}, {3.865523880339912*^9, 
  3.865523887127028*^9}},ExpressionUUID->"12914c84-e4fb-4c4a-9737-\
8da787dcbe59"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FFindBurstsFromTimeBinnedData", "  ", "::", "usage"}], "=", 
   "\"\<FFindBurstsFromTimeBinnedData[ \
\!\(\*FormBox[SubscriptBox[StyleBox[\"T\", \"TI\"], \
\"binning\"],TraditionalForm]\), \!\(\*FormBox[SubsuperscriptBox[StyleBox[\"N\
\", \"TI\"], \"min\", \"bin\"],TraditionalForm]\), \
\!\(\*FormBox[SubsuperscriptBox[StyleBox[\"N\", \"TI\"], \"min\", \
\"burst\"],TraditionalForm]\), \
\!\(\*FormBox[SubsuperscriptBox[StyleBox[\"N\", \"TI\"], \"max\", \
\"burst\"],TraditionalForm]\), opts]\nreplaces the current burst list. The \
new fluorescence photon bursts are identified using time\[Hyphen]binned data, \
with \!\(\*FormBox[SubscriptBox[StyleBox[\"T\", \"TI\"], \
\"binning\"],TraditionalForm]\) given in milliseconds. For each bin, the \
corrected total number of photons \
\!\(\*FormBox[SubsuperscriptBox[StyleBox[\"N\", \"TI\"], \"tot\", \
\"corr\"],TraditionalForm]\) is calculated from \n\
\!\(\*FormBox[RowBox[{SubsuperscriptBox[StyleBox[\"N\", \"TI\"], \"tot\", \
\"corr\"], \"\[LongEqual]\"}],TraditionalForm]\)Total[ \
RCM.\!\(\*FormBox[RowBox[{\"(\", RowBox[{StyleBox[\"n\", \"TI\"], \"-\", \
StyleBox[\"b\", \"TI\"], StyleBox[\"T\", \"TI\"]}], \
\")\"}],TraditionalForm]\) ].\nHere \!\(\*FormBox[RowBox[{StyleBox[\"n\", \
\"TI\"], \"\[LongEqual]\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"n\", \"TI\"], \"2\"], \",\", \"..\"}], \
\"}\"}]}],TraditionalForm]\) is the list of photon counts of the sequence \
detected in routes \!\(\*FormBox[RowBox[{StyleBox[\"r\", \"TI\"], \"\
\[LongEqual]\", \"1\", \",\", \"2\", \",\", \"..\"}],TraditionalForm]\), RCM \
is the route correction matrix, \!\(\*FormBox[RowBox[{StyleBox[\"b\", \
\"TI\"], \"\[LongEqual]\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"b\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"b\", \"TI\"], \"2\"], \",\", \"..\"}], \
\"}\"}]}],TraditionalForm]\) is the list of background count rates of routes \
\!\(\*FormBox[RowBox[{StyleBox[\"r\", \"TI\"], \"\[LongEqual]\", \"1\", \
\",\", \"2\", \",\", \"..\"}],TraditionalForm]\), and \!\(\*FormBox[StyleBox[\
\"T\", \"TI\"],TraditionalForm]\) is the duration of the sequence. The \
background count rates need to be set beforehand with FSetBackground or \
FDetermineBackground, and the RCM needs to be set with FSetRCM. \nThere are \
two modes that can be selected with the option CombineContiguousBins:\n1. \
CombineContiguousBins\!\(\(TraditionalForm\` \[Rule] \)\)True (default): \
Consecutive bins with \!\(\*FormBox[RowBox[{SubsuperscriptBox[StyleBox[\"N\", \
\"TI\"], \"tot\", \"corr\"], \">\", SubsuperscriptBox[StyleBox[\"N\", \
\"TI\"], \"min\", \"bin\"]}],TraditionalForm]\) photons are combined into one \
photon burst if the total corrected number of photons is greater than \
(\!\(\(TraditionalForm\` > \)\)) \!\(\*FormBox[SubsuperscriptBox[StyleBox[\"N\
\", \"TI\"], \"min\", \"burst\"],TraditionalForm]\).\n2. \
CombineContiguousBins\!\(\(TraditionalForm\` \[Rule] \)\)False: Consecutive \
bins are not combined, so all photon bursts have the maximal duration of one \
time bin. Photon bursts must contain more than \
\!\(\*FormBox[SubsuperscriptBox[StyleBox[\"N\", \"TI\"], \"min\", \
\"bin\"],TraditionalForm]\) photons in a bin. The value of \
\!\(\*FormBox[SubsuperscriptBox[StyleBox[\"N\", \"TI\"], \"min\", \
\"burst\"],TraditionalForm]\) is ignored in this mode, but \
\!\(\*FormBox[SubsuperscriptBox[StyleBox[\"N\", \"TI\"], \"max\", \
\"burst\"],TraditionalForm]\) applies. \n\nPhoton bursts with a total number \
of photons greater than \!\(\*FormBox[SubsuperscriptBox[StyleBox[\"N\", \
\"TI\"], \"max\", \"burst\"],TraditionalForm]\) are excluded.\nNote that in \
Fretica identified bursts start and end with their first and last photons, \
respectively. The start and end times of bursts are therefore not identical \
to the boundaries of the corresponding time bins. These can be calculated \
from the binning interval if needed. \n Options for PIE:\n \
\!\(\(TraditionalForm\`\\\ \\\ \
\)\)FPIEBurstIdentificationMethod\!\(\(TraditionalForm\` \[Rule] \
\)\)FMainChannelAboveThreshold (default)\n \!\(\(TraditionalForm\`\\\ \\\ \
\)\)FPIEBurstIdentificationMethod\!\(\(TraditionalForm\` \[Rule] \
\)\)FMainChannelOrPieChannelAboveThreshold\n  FPIEBurstIdentificationMethod\!\
\(\(TraditionalForm\` \[Rule] \)\)FMainChannelPlusPieChannelAboveThreshold\n  \
FPIEBurstIdentificationMethod\!\(\(TraditionalForm\` \[Rule] \
\)\)FPieChannelAboveThreshold\n  \
FPIEBurstIdentificationMethod\!\(\(TraditionalForm\` \[Rule] \
\)\)FDualChannelBurstSearch\n\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973220025981*^9, 3.8129732201509857`*^9}, {
  3.860493086211934*^9, 3.860493109047324*^9}, {3.8655238304132533`*^9, 
  3.865523849933872*^9}},ExpressionUUID->"ee76c426-1e95-4f39-9c9f-\
a2933648e25f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FReduceToBurstPhotons", "  ", "::", "usage"}], "=", 
   "\"\<FReduceToBurstPhotons[] deletes all photons which are not part of a \
photon burst. The TTTR file has to be reopened for undoing this operation. \>\
\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973220494748*^9, 
  3.812973220604127*^9}},ExpressionUUID->"49a2484d-7847-418e-918c-\
aa0bfe718ef0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FDeleteSelectedBursts", "  ", "::", "usage"}], "=", 
   "\"\<FDeleteSelectedBursts[] deletes all photon bursts from the photon \
burst list with the attribute \\\"Selected\\\" \[LongEqual] 1. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129732209478893`*^9, 
  3.8129732210572696`*^9}},ExpressionUUID->"5a65041b-e96e-425c-9b10-\
e1f9ad181ead"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FDeleteNonSelectedBursts", "  ", "::", "usage"}], "=", 
   "\"\<FDeleteNonSelectedBursts[] deletes all photon bursts from the photon \
burst list with the attribute \\\"Selected\\\" \[LongEqual] 0. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129732214947886`*^9, 
  3.812973221588543*^9}},ExpressionUUID->"5512840f-2835-43a3-8328-\
b838dc535e46"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSplitBursts", "  ", "::", "usage"}], "=", 
   "\"\<FSplitBursts[binwidth] splits all photon bursts into shorter photon \
bursts of length binwidth, with binwidth in milliseconds. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973222057312*^9, 
  3.812973222151067*^9}},ExpressionUUID->"6be63fa3-dbf1-4657-945f-\
57abb9e3b74a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FExpandBurstsSymmetrically", "  ", "::", "usage"}], "=", 
   "\"\<FExpandBurstsSymmetrically[\!\(\*FormBox[StyleBox[RowBox[{\"d\", \
\"t\"}], \"TI\"],TraditionalForm]\)] expands photon bursts by including all \
photons detected in the interval \!\(\*FormBox[RowBox[{\"[\", \
RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], \"0\"], \"-\", StyleBox[\"d\", \
\"TI\"], StyleBox[\"t\", \"TI\"], \",\", SubscriptBox[StyleBox[\"t\", \
\"TI\"], \"0\"], \"+\", StyleBox[\"d\", \"TI\"], StyleBox[\"t\", \"TI\"]}], \
\"]\"}],TraditionalForm]\), where \!\(\*FormBox[SubscriptBox[StyleBox[\"t\", \
\"TI\"], \"0\"],TraditionalForm]\) is the photon burst midpoint in both time \
directions (times in milliseconds). Overlapping photon bursts are merged into \
one photon burst. The photon burst can also shrink if \
\!\(\*FormBox[RowBox[{\"2\", StyleBox[\"d\", \"TI\"], StyleBox[\"t\", \
\"TI\"]}],TraditionalForm]\) is shorter than the original photon burst \
duration. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973222510454*^9, 
  3.8129732226198335`*^9}},ExpressionUUID->"33cd1bae-ea2e-4303-80ac-\
b9ea7865c2a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FCombineContiguousBins", "  ", "::", "usage"}], "=", 
   "\"\<Option for FFindBurstsFromTimeBinnedData. Possible values: True \
(default) or False. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732229635963`*^9, 
  3.812973223072974*^9}},ExpressionUUID->"60f372bf-6f5e-4c4f-9a17-\
fe09dd8a08c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FPIEBurstIdentificationMethod", "  ", "::", "usage"}], "=", 
   "\"\<Option for specifying how photon bursts are identified in PIE \
measurements. See documentation on FFindBurstsFromTimeBinnedData. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129732234167376`*^9, 
  3.8129732235261173`*^9}},ExpressionUUID->"d8d542a3-2882-42ea-b61a-\
348f3cd2e14d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FMainChannelAboveThreshold", "  ", "::", "usage"}], "=", 
   "\"\<Option value of FPIEBurstIdentificationMethod. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129732238698792`*^9, 
  3.8129732239792585`*^9}},ExpressionUUID->"eb26832b-054e-478c-bdd9-\
20a1a700ee10"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FMainChannelOrPieChannelAboveThreshold", "  ", "::", "usage"}], 
   "=", "\"\<Option value of FPIEBurstIdentificationMethod. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129732243230224`*^9, 
  3.812973224432403*^9}},ExpressionUUID->"5af5d4d5-35d0-4c5d-bec2-\
70c7f930a8c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FMainChannelPlusPieChannelAboveThreshold", "  ", "::", "usage"}], 
   "=", "\"\<Option value of FPIEBurstIdentificationMethod. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973224776167*^9, 
  3.8129732248855467`*^9}},ExpressionUUID->"542f14e6-568f-426e-94e5-\
971754a26044"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FPieChannelAboveThreshold", " ", "::", "usage"}], "=", 
   "\"\<Option value of FPIEBurstIdentificationMethod. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8604929932094927`*^9, 
  3.860493008018462*^9}},ExpressionUUID->"5e49d6ed-8689-4564-bc96-\
c270ad3caf02"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FDualChannelBurstSearch", "::", "usage"}], "=", 
   "\"\<Option value of FPIEBurstIdentificationMethod. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.865523945264428*^9, 
  3.8655239627604895`*^9}},ExpressionUUID->"08857b2d-3b77-4313-98cb-\
c83d0c1c1c41"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FUpdateBurstCounts", "  ", "::", "usage"}], "=", 
   "\"\<FUpdateBurstCounts[] recounts for all photon bursts the numbers of \
photons for all detection routes. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973225229311*^9, 
  3.8129732253386908`*^9}},ExpressionUUID->"85e07999-9b35-4e64-b52c-\
3a9307501d6d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FMCStrace", "  ", "::", "usage"}], "=", 
   "\"\<FMCStrace[\!\(TraditionalForm\`{\[Null]\)routelist\!\(TraditionalForm\
\`\*SubscriptBox[\(\[Null]\), \(1\)]\), \
routelist\!\(TraditionalForm\`\*SubscriptBox[\(\[Null]\), \
\(2\)]\),...\!\(\(TraditionalForm\`}\)\), binwidth, \
\!\(\*FormBox[SubscriptBox[StyleBox[\"t\", \"TI\"], \
\"1\"],TraditionalForm]\), \!\(\*FormBox[SubscriptBox[StyleBox[\"t\", \
\"TI\"], \"2\"],TraditionalForm]\)]\nreturns a list of binned photon (multi\
\[Hyphen]channel scaler, MCS) traces. routelist\!\(\*FormBox[SubscriptBox[\"\
\[Null]\", StyleBox[\"i\", \"TI\"]],TraditionalForm]\) defines the \
combination of detection routes and lifetime channels represented in the \!\(\
\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\)th MCS trace.\n\
routelist\!\(\*FormBox[SubscriptBox[\"\[Null]\", StyleBox[\"i\", \
\"TI\"]],TraditionalForm]\) is either of the form \
\!\(\*FormBox[RowBox[{\"{\", SubscriptBox[StyleBox[\"r\", \"TI\"], \
RowBox[{StyleBox[\"i\", \"TI\"], \"1\"}]]}],TraditionalForm]\), \
\!\(\*FormBox[SubscriptBox[StyleBox[\"r\", \"TI\"], RowBox[{StyleBox[\"i\", \
\"TI\"], \"2\"}]],TraditionalForm]\), ...\!\(\(TraditionalForm\`}\)\) or \!\(\
\*FormBox[RowBox[{\"{\", RowBox[{\"{\", SubscriptBox[StyleBox[\"r\", \"TI\"], \
RowBox[{StyleBox[\"i\", \"TI\"], \"1\"}]]}]}],TraditionalForm]\), \
\!\(\*FormBox[SubscriptBox[StyleBox[\"r\", \"TI\"], RowBox[{StyleBox[\"i\", \
\"TI\"], \"2\"}]],TraditionalForm]\), \
...\!\(\(TraditionalForm\`}\)\),\!\(\*FormBox[RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"c\", \"TI\"], RowBox[{StyleBox[\"i\", \
\"TI\"], \"1\"}]], \",\", SubscriptBox[StyleBox[\"c\", \"TI\"], \
RowBox[{StyleBox[\"i\", \"TI\"], \"2\"}]]}], \"}\"}], \
\"}\"}],TraditionalForm]\), where \!\(\*FormBox[RowBox[{\"{\", \
SubscriptBox[StyleBox[\"r\", \"TI\"], RowBox[{StyleBox[\"i\", \"TI\"], \
\"1\"}]]}],TraditionalForm]\), \!\(\*FormBox[SubscriptBox[StyleBox[\"r\", \
\"TI\"], RowBox[{StyleBox[\"i\", \"TI\"], \"2\"}]],TraditionalForm]\), \
...\!\(\(TraditionalForm\`}\)\) is a sequence of ones and zeros defining \
which detector routes are contained or not contained in the \
\!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\)th trace. \
\!\(\*FormBox[RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"c\", \"TI\"], \
RowBox[{StyleBox[\"i\", \"TI\"], \"1\"}]], \",\", \
SubscriptBox[StyleBox[\"c\", \"TI\"], RowBox[{StyleBox[\"i\", \"TI\"], \
\"2\"}]]}], \"}\"}],TraditionalForm]\) define lifetime channel constraints. \
binwidth is the binning in milliseconds. \!\(\*FormBox[SubscriptBox[StyleBox[\
\"t\", \"TI\"], \"1\"],TraditionalForm]\) and \
\!\(\*FormBox[SubscriptBox[StyleBox[\"t\", \"TI\"], \"2\"],TraditionalForm]\) \
(given in seconds) define the start and end times of the MCS traces. \n \
Options:\n \!\(\(TraditionalForm\`\\\ \\\ \)\)FOutput\!\(\(TraditionalForm\` \
\[Rule] \)\)FGraph (default)\n \!\(\(TraditionalForm\`\\\ \\\ \)\)FOutput\!\(\
\(TraditionalForm\` \[Rule] \)\)FData\n\!\(\(TraditionalForm\`\\\ \\\ \)\) \
Weights\!\(\*FormBox[RowBox[{\"\[Rule]\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"w\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"w\", \"TI\"], \"2\"], \",\", \"...\"}], \
\"}\"}]}],TraditionalForm]\) multiplies the first trajectory with \
\!\(\*FormBox[SubscriptBox[StyleBox[\"w\", \"TI\"], \
\"1\"],TraditionalForm]\), the second with \
\!\(\*FormBox[SubscriptBox[StyleBox[\"w\", \"TI\"], \
\"2\"],TraditionalForm]\), etc.\n\!\(\(TraditionalForm\`\\\ \\\ \)\) \
FShowBursts\!\(\(TraditionalForm\` \[Rule] \)\)True (default is False) Start \
and end of each photon burst is indicated by a horizontal line.\n\
\!\(\(TraditionalForm\`\\\ \\\ \)\) FShowBurstsLevel\!\(\(TraditionalForm\` \
\[Rule] \)\)value sets \!\(\*FormBox[StyleBox[\"y\", \"TI\"],TraditionalForm]\
\)\[Hyphen]position of the horizontal lines indicating photon bursts.\n\
\!\(\(TraditionalForm\`\\\ \\\ \)\) FBurstData\!\(\(TraditionalForm\` \[Rule] \
\)\)All (default) All photon bursts are indicated.\n \
\!\(\(TraditionalForm\`\\\ \\\ \)\)FBurstData\!\(\(TraditionalForm\` \[Rule] \
\)\)FSelectedBursts  Only selected photon bursts are indicated.\nAll options \
of ListPlot can be used for modifying the graphical output. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973225713704*^9, 
  3.812973225838709*^9}},ExpressionUUID->"9740b5ed-c211-4018-897c-\
7b4525495b50"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FShowBursts", "  ", "::", "usage"}], "=", 
   "\"\<FShowBursts is an option of FMCStrace. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732261980963`*^9, 
  3.8129732263074765`*^9}},ExpressionUUID->"c93316e5-3955-4b75-85c8-\
0281c8b3465f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FShowBurstsLevel", "  ", "::", "usage"}], "=", 
   "\"\<FShowBurstsLevel is an option of FMCStrace. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973226651238*^9, 
  3.8129732267606173`*^9}},ExpressionUUID->"8a154fd5-71da-4735-8cad-\
3cd65d39e61d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FLifeTimeHisto", "  ", "::", "usage"}], "=", 
   "\"\<FLifeTimeHisto[opts] returns fluorescence lifetime histograms.\n \
Options:\n \!\(\(TraditionalForm\`\\\ \\\ \)\)FOutput\!\(\(TraditionalForm\` \
\[Rule] \)\)FGraph (default)\n \!\(\(TraditionalForm\`\\\ \\\ \)\)FOutput\!\(\
\(TraditionalForm\` \[Rule] \)\)FData\n \n \!\(\(TraditionalForm\`\\\ \\\ \
\)\)FPhotonData\!\(\(TraditionalForm\` \[Rule] \)\)FBursts (only photons in \
photon bursts, default)\n \!\(\(TraditionalForm\`\\\ \\\ \
\)\)FPhotonData\!\(\(TraditionalForm\` \[Rule] \)\)All (all photons)\n \
\!\(\(TraditionalForm\`\\\ \\\ \)\)FPhotonData\!\(\(TraditionalForm\` \[Rule] \
\)\)FNonBursts (all photons not in photon bursts)\n \!\(\(TraditionalForm\`\\\
\ \\\ \)\)FPhotonData\!\(\(TraditionalForm\` \[Rule] \)\)FSelectedBursts (all \
photons in selected photon bursts)\n \n \!\(\(TraditionalForm\`\\\ \\\ \
\)\)FRoutes\!\(\(TraditionalForm\` \[Rule] \)\)All (default)\n \
\!\(\(TraditionalForm\`\\\ \\\ \)\)FRoutes\!\(\(TraditionalForm\` \[Rule] \
\)\)routelist (e.g. \
\!\(TraditionalForm\`{\[Null]\)1,3\!\(\(TraditionalForm\`}\)\) for detection \
route 1 and 3\!\(\(TraditionalForm\`}\)\) \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973227120006*^9, 
  3.8129732272293844`*^9}},ExpressionUUID->"a8536a68-da7d-4769-a780-\
92e093b8ccac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FRoutes", "  ", "::", "usage"}], "=", 
   "\"\<Option for FLifeTimeHisto. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732275887733`*^9, 
  3.8129732276825275`*^9}},ExpressionUUID->"40e5ed86-0cb8-4353-82fd-\
164374e8479d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FCalcBurstLifeTimes", "  ", "::", "usage"}], "=", 
   "\"\<FCalcBurstLifeTimes[route, \!\(\*FormBox[SubscriptBox[StyleBox[\"t\", \
\"TI\"], \"0\"],TraditionalForm]\)] calculates for each photon burst the mean \
microtime of the photons detected in route. \
\!\(\*FormBox[SubscriptBox[StyleBox[\"t\", \"TI\"], \"0\"],TraditionalForm]\) \
is subtracted from the result. \nFCalcBurstLifeTimes[route, \
\!\(\*FormBox[SubscriptBox[StyleBox[\"t\", \"TI\"], \
\"0\"],TraditionalForm]\), \
\!\(\*SubscriptBox[StyleBox[\"t\",FontSlant->\"Italic\"], \"min\"]\), \
\!\(\*SubscriptBox[StyleBox[\"t\",FontSlant->\"Italic\"], \"max\"]\)] limits \
the calculation to the time interval (\!\(\*SubscriptBox[\(t\), \(min\)]\), \
\!\(\*SubscriptBox[\(t\), \(max\)]\)). All times are in nanoseconds. Only \
photons of the main channel range are used, when constraints are enabled.\n\>\
\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973228041915*^9, 3.8129732281669197`*^9}, {
  3.862882272783995*^9, 3.86288244086405*^9}, {3.8628849663280177`*^9, 
  3.8628850055454016`*^9}},ExpressionUUID->"4c4c4439-760a-4a4d-aa30-\
0c2b95fdf635"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FPhotonData", "  ", "::", "usage"}], "=", 
   "\"\<Option for FLifeTimeHisto. Possible values: All, FBursts, FNonBursts, \
and FSelectedBursts. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732285106845`*^9, 
  3.8129732286200647`*^9}},ExpressionUUID->"1740e87b-77df-4a8d-adde-\
af73d8799f67"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FBursts", "  ", "::", "usage"}], "=", 
   "\"\<Option value for FPhotonData. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973228979455*^9, 
  3.8129732290888352`*^9}},ExpressionUUID->"a40a37cf-8380-490c-9351-\
78f1272bb1b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FNonBursts", "  ", "::", "usage"}], "=", 
   "\"\<Option value for FPhotonData. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973229432598*^9, 
  3.812973229541976*^9}},ExpressionUUID->"0700feb5-12db-4dc9-9818-\
87f1be40fbe0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSelectedBursts", "  ", "::", "usage"}], "=", 
   "\"\<Option value for FBurstData and FPhotonData. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732299013643`*^9, 
  3.8129732300107436`*^9}},ExpressionUUID->"71132043-0fbe-4377-a44d-\
93ced5e57ebc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FDetermineBackground", "  ", "::", "usage"}], "=", 
   "\"\<FDetermineBackground[] estimates and sets background count rates for \
all detection routes from the total of all non\[Hyphen]burst photons divided \
by the total measurement time excluding bursts.\nIf applied iteratively \
following photon burst identification, the resulting background rates \
converge to meaningful values. If PIE is enabled, the background rates in the \
PIE channels are also determined (see also: FGetPIEBackground). \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129732303545065`*^9, 
  3.8129732304638853`*^9}},ExpressionUUID->"6f22ad01-2544-4d37-b0eb-\
3174ada2c302"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetBackground", "  ", "::", "usage"}], "=", 
   "\"\<FGetBackground[] returns a list of the background photon count rates \
(in sec\!\(TraditionalForm\`\*SuperscriptBox[\(\[Null]\), \(-1\)]\)) for all \
detection routes. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732308232746`*^9, 
  3.8129732309326534`*^9}},ExpressionUUID->"a5b328d7-624e-427b-bcc8-\
22488d246c13"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSetBackground", "  ", "::", "usage"}], "=", 
   "\"\<FSetBackground[bglist] sets the background photon count rates (in sec\
\!\(TraditionalForm\`\*SuperscriptBox[\(\[Null]\), \(-1\)]\)) for the \
detection routes. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732313076663`*^9, 
  3.8129732314170456`*^9}},ExpressionUUID->"eec4739a-5c77-4fdd-a61e-\
7e6acd914f09"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetPIEBackground", "  ", "::", "usage"}], "=", 
   "\"\<FGetPIEBackground[] returns a list of the background photon count \
rates (in sec\!\(TraditionalForm\`\*SuperscriptBox[\(\[Null]\), \(-1\)]\)) \
for all detection routes for the PIE signal. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973231776434*^9, 
  3.8129732318858128`*^9}},ExpressionUUID->"2614e11e-a4a2-4434-a7ad-\
ec892d545f7d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSetPIEBackground", "  ", "::", "usage"}], "=", 
   "\"\<FSetPIEBackground[bglist] sets the background photon rates (in \
sec\!\(TraditionalForm\`\*SuperscriptBox[\(\[Null]\), \(-1\)]\)) for the \
detection routes for the PIE signal. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732322452016`*^9, 
  3.812973232354582*^9}},ExpressionUUID->"c15ddaca-7bcf-47c0-908a-\
f106a8de6f13"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "FPBurstParameters", ":=", "\[IndentingNewLine]", 
   "\"\<\n\\\"n1\\\", \\\"n2\\\", etc.:   Uncorrected detector counts. \n\
\\\"n1\!\(TraditionalForm\`_\)corr\\\", \
\\\"n2\!\(TraditionalForm\`_\)corr\\\", etc.:   Detector counts corrected for \
background and RCM, but not for acceptor direct excitation, i.e. \
\\\"n\!\(\*FormBox[RowBox[{StyleBox[\"i\", \"TI\"], \
\"_\"}],TraditionalForm]\)corr\\\" represents the \
\!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\)th element of the \
vector \!\(\*FormBox[RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], \
StyleBox[RowBox[{\"c\", \"o\", \"r\", \"r\"}], \"TI\"]], \
\"\[LongEqual]\"}],TraditionalForm]\)RCM.\!\(\*FormBox[RowBox[{\"(\", \
RowBox[{StyleBox[\"n\", \"TI\"], \"-\", StyleBox[\"b\", \"TI\"], StyleBox[\"g\
\", \"TI\"]}], \")\"}],TraditionalForm]\). \n\
\\\"n\!\(TraditionalForm\`_\)corr\\\":   Total photon number in photon burst, \
corrected for background and RCM. \n\\\"nA\!\(TraditionalForm\`_\)raw\\\", \\\
\"nD\!\(TraditionalForm\`_\)raw\\\":   Uncorrected total acceptor and donor \
counts. \n\\\"nA\\\", \\\"nD\\\":   Background\[Hyphen] and \
RCM\[Hyphen]corrected total acceptor and total donor counts, not corrected \
for acceptor direct excitation. \n\n\\\"n1pie\\\", \\\"n2pie\\\", etc.:   \
Counts in the PIE channels. \n\\\"n1pie\!\(TraditionalForm\`_\)corr\\\", \
\\\"n2pie\!\(TraditionalForm\`_\)corr\\\", etc.:   \
Background\[Hyphen]corrected counts in the PIE channels. \n\\\"nApie_raw\\\", \
\\\"nDpie_raw\\\":   Uncorrected total acceptor and donor counts in the PIE \
channels. \n\\\"nApie\\\", \\\"nDpie\\\":   Background corrected total \
acceptor and total donor counts in the PIE channels.\n\n\\\"E\\\" , \
\\\"LogNdOverNa\\\", \\\"Root6NdOverNa\\\":   Transfer efficiency and related \
quantities corrected for background, RCM, and acceptor direct excitation \
\[Alpha]. E is calculated from (nA-\[Alpha](nA+nD))/(nA+nD-\[Alpha](nA+nD))\n\
\\\"Epie\\\":   Transfer efficiency corrected for background, RCM, and \
acceptor direct excitation \!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\). \
\!\(\*StyleBox[\"E\",FontSlant->\"Italic\"]\) is calculated from (nA- \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) \
nA\!\(TraditionalForm\`_\)pie)/(nA+nD- \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) nA\!\(TraditionalForm\`_\)pie) \
with \!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\)=\!\(\*SubscriptBox[\"\
\[Gamma]\", StyleBox[RowBox[{\"p\", \"i\", \"e\"}], \"TI\"]]\)(\[Alpha]/(1-\
\[Alpha]).\n\\\"Spie\\\" or \\\"StoichiometryRatio\\\":   Calculated from \
(nA+nD)/(nA+nD+\!\(\*FormBox[SubscriptBox[\"\[Gamma]\", \
StyleBox[RowBox[{\"p\", \"i\", \"e\"}], \
\"TI\"]],TraditionalForm]\)(nA\!\(TraditionalForm\`_\)pie)). \n\\\"Eapp\\\" \
and \\\"Sapp\\\":   cacluate apparent values from the burst counts that are \
only corrected for background, but not for RCM, \[Alpha] or \[Gamma]pie. \n\\\
\"ProximityRatio\\\":   \
\\\"nA\!\(TraditionalForm\`_\)raw\\\"/(\\\"nA\!\(TraditionalForm\`_\)raw\\\"+\
\\\"nD\!\(TraditionalForm\`_\)raw\\\"). \n\
\\\"BVA_ProximityRatios\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\)\\\":   \
Proximity ratios for burst variance analysis (BVA). \
\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\) is any integer larger 2, \
idnicating the partition of each bursts in segements of \
\!\(\*StyleBox[\"n\",FontSlant->\"Italic\"]\) photons. \n\n\\\"StartTime\\\", \
\\\"EndTime\\\":   Detection times of the first and last photons in a burst, \
respectively (in seconds). \n\\\"BurstDuration\\\":   Durations \
(\\\"EndTime\\\"\[Hyphen]\\\"StartTime\\\") of the photon bursts (in \
seconds). \n\\\"tau1\\\", \\\"tau2\\\", etc.:   Mean fluorescence lifetimes. \
Needs to be calculated by calling FCalcBurstLifeTimes beforehand. \n\\\"tavgD\
\\\", \\\"tavgA\\\":   Mean arrival (detection) times of donor and acceptor \
photons, respectively. \n\\\"BurstAsymmetry\\\":   Equivalent to \
\\\"tavgA\\\"\[Hyphen]\\\"tavgD\\\". \n\\\"tavg\\\":   Mean arrival \
(detection) times. If PIE is enabled, only the photons in the main lifetime \
channels are used. \n\\\"tavg\!\(TraditionalForm\`_\)pie\\\":   Mean arrival \
(detection) times of photons in PIE lifetime channels. \n\
\\\"BurstPIEAsymmetry\\\":   Equivalent to \
\\\"tavg\\\"\[Hyphen]\\\"tavg\!\(TraditionalForm\`_\)pie\\\". \n\
\\\"DonorAnisotropy\\\":   calculates \!\(\*FormBox[RowBox[{RowBox[{\"(\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"p\", \"TI\"]], \
\"-\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"s\", \"TI\"]]}], \
\")\"}], \"/\", RowBox[{\"(\", RowBox[{RowBox[{\"(\", RowBox[{\"1\", \"-\", \
\"3\", SubscriptBox[StyleBox[\"L\", \"TI\"], \"2\"]}], \")\"}], \
SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"p\", \"TI\"]], \"+\", \
RowBox[{\"(\", RowBox[{\"2\", \"-\", \"3\", SubscriptBox[StyleBox[\"L\", \"TI\
\"], \"1\"]}], \")\"}], SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"s\", \
\"TI\"]]}], \")\"}], \")\"}],TraditionalForm]\), where \
\!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"p\", \
\"TI\"]],TraditionalForm]\) and \!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \
\"TI\"], StyleBox[\"s\", \"TI\"]],TraditionalForm]\) are background and RCM\
\[Hyphen]corrected photon counts of the parallel and orthogonal donor \
detection routes, respectively. \!\(\*FormBox[SubscriptBox[StyleBox[\"L\", \
\"TI\"], \"1\"],TraditionalForm]\) and \
\!\(\*FormBox[SubscriptBox[StyleBox[\"L\", \"TI\"], \"2\"],TraditionalForm]\) \
are correction factors set using FSetAnisotropyL1 and FSetAnisotropyL2. \n\
\\\"AcceptorAnisotropy\\\":   calculates \!\(\*FormBox[RowBox[{RowBox[{\"(\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"p\", \"TI\"]], \
\"-\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"s\", \"TI\"]]}], \
\")\"}], \"/\", RowBox[{\"(\", RowBox[{RowBox[{\"(\", RowBox[{\"1\", \"-\", \
\"3\", SubscriptBox[StyleBox[\"L\", \"TI\"], \"2\"]}], \")\"}], \
SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"p\", \"TI\"]], \"+\", \
RowBox[{\"(\", RowBox[{\"2\", \"-\", \"3\", SubscriptBox[StyleBox[\"L\", \"TI\
\"], \"1\"]}], \")\"}], SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"s\", \
\"TI\"]]}], \")\"}], \")\"}],TraditionalForm]\), where \
\!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"p\", \
\"TI\"]],TraditionalForm]\) and \!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \
\"TI\"], StyleBox[\"s\", \"TI\"]],TraditionalForm]\) are background and RCM\
\[Hyphen]corrected photon counts of the parallel and orthogonal acceptor \
detection routes, respectively. \!\(\*FormBox[SubscriptBox[StyleBox[\"L\", \
\"TI\"], \"1\"],TraditionalForm]\) and \
\!\(\*FormBox[SubscriptBox[StyleBox[\"L\", \"TI\"], \"2\"],TraditionalForm]\) \
are correction factors set using FSetAnisotropyL1 and FSetAnisotropyL2. \n\
\\\"PIEAcceptorAnisotropy\\\":   calculates \!\(\*FormBox[RowBox[{RowBox[{\"(\
\", RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"p\", \"TI\"]], \
\"-\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"s\", \"TI\"]]}], \
\")\"}], \"/\", RowBox[{\"(\", RowBox[{RowBox[{\"(\", RowBox[{\"1\", \"-\", \
\"3\", SubscriptBox[StyleBox[\"L\", \"TI\"], \"2\"]}], \")\"}], \
SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"p\", \"TI\"]], \"+\", \
RowBox[{\"(\", RowBox[{\"2\", \"-\", \"3\", SubscriptBox[StyleBox[\"L\", \"TI\
\"], \"1\"]}], \")\"}], SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"s\", \
\"TI\"]]}], \")\"}], \")\"}],TraditionalForm]\), where \
\!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"p\", \
\"TI\"]],TraditionalForm]\) and \!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \
\"TI\"], StyleBox[\"s\", \"TI\"]],TraditionalForm]\) are background and RCM\
\[Hyphen]corrected photon counts of the parallel and orthogonal acceptor \
detection routes, respectively. Only photons with lifetime channels within \
the set PIE channel ranges are used. \
\!\(\*FormBox[SubscriptBox[StyleBox[\"L\", \"TI\"], \"1\"],TraditionalForm]\) \
and \!\(\*FormBox[SubscriptBox[StyleBox[\"L\", \"TI\"], \
\"2\"],TraditionalForm]\) are correction factors set using FSetAnisotropyL1 \
and FSetAnisotropyL2. \n\
\\\"n\!\(TraditionalForm\`_\)tot\!\(TraditionalForm\`_\)asym\\\":   \
Calculated from \!\(\*FormBox[RowBox[{RowBox[{\"(\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], \"2\"], \"-\", \
SubscriptBox[StyleBox[\"n\", \"TI\"], \"1\"]}], \")\"}], \"/\", \
RowBox[{\"(\", RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], \"1\"], \"+\", \
SubscriptBox[StyleBox[\"n\", \"TI\"], \"2\"]}], \")\"}]}],TraditionalForm]\), \
where \!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \"TI\"], RowBox[{\"1\", \
\",\", \"2\"}]],TraditionalForm]\) are the total corrected number of photons \
in the first and second half of the photon burst, respectively. \n\
\\\"Selected\\\":   Value is 1 for selected photon bursts and 0 for non\
\[Hyphen]selected photon bursts. \n  \n\\\"InterPhotonTimes\\\":   List of \
interphoton times, \!\(\*FormBox[RowBox[{StyleBox[\"d\", \"TI\"], \
SubscriptBox[StyleBox[\"t\", \"TI\"], StyleBox[\"i\", \"TI\"]], \
\"\[LongEqual]\", SubscriptBox[StyleBox[\"t\", \"TI\"], StyleBox[\"i\", \
\"TI\"]], \"-\", SubscriptBox[StyleBox[\"t\", \"TI\"], \
RowBox[{StyleBox[\"i\", \"TI\"], \"-\", \"1\"}]]}],TraditionalForm]\) in \
\!\(TraditionalForm\`\[Mu]\)s. \n\\\"PhotonTimes\\\":   List of photon times \
in \!\(TraditionalForm\`\[Mu]\)s with respect to first photon in burst.\n\
\\\"MainChannelPhotonTimes\\\":   List of photon times in \!\(TraditionalForm\
\`\[Mu]\)s with respect to first photon in burst. Only photons in main \
channel range.\n\\\"PieChannelPhotonTimes\\\":   List of photon times in \
\!\(TraditionalForm\`\[Mu]\)s with respect to first photon in burst. Only \
photons in PIE channel range.\n\\\"DetectionChannels\\\":   List of the \
photons' detection routes. \n\\\"LifeTimeChannels\\\":   List of the photons' \
lifetime channels. \n\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.890194787540556*^9, 3.8901948229038854`*^9}, {
   3.8901948668871303`*^9, 3.890194878440074*^9}, 
   3.890194940264786*^9},ExpressionUUID->"38a652b9-5138-426d-8b08-\
8b8bf8c6b408"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetFromBurst", "  ", "::", "usage"}], "=", 
   RowBox[{
   "\"\<FGetFromBurst[expr, \!\(\*FormBox[StyleBox[\"i\", \
\"TI\"],TraditionalForm]\)] evaluates expr for the \!\(\*FormBox[StyleBox[\"i\
\", \"TI\"],TraditionalForm]\)th photon burst.\n expr can contain the same \
strings as in FGetFromBurstList:\>\"", "<>", "FPBurstParameters", "<>", 
    "\"\<   \nEach string in an expression will be replaced by the \
corresponding list of values for all photon bursts. \
\!\(\*StyleBox[\"Hold\",FontSlant->\"Italic\"]\) can be used to prevent the \
expression to be evalutated by Mathematica before the strings are replaced. \
For example: FGetFromBustList[Hold@Transpose[{\\\"Epie\\\",\\\"Spie\\\"}] ]. \
\n  \>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.812973232823352*^9, 3.8129732329639826`*^9}, 
   3.862976774040716*^9, {3.8629863014828434`*^9, 3.862986302172997*^9}, {
   3.862986409750555*^9, 3.8629864378322287`*^9}, {3.862986556511952*^9, 
   3.8629865632042394`*^9}, {3.862987035917924*^9, 3.862987036699794*^9}, {
   3.863754084467725*^9, 3.8637541279156528`*^9}, {3.8637541663702464`*^9, 
   3.863754174064561*^9}, {3.8637543392648335`*^9, 3.8637543497931285`*^9}, {
   3.863754406089551*^9, 3.863754431807398*^9}, {3.8637544649044657`*^9, 
   3.8637544694682627`*^9}, {3.8637545864980755`*^9, 3.863754588408958*^9}, {
   3.8637546343739395`*^9, 3.8637546353453417`*^9}, 3.8637547825893545`*^9, {
   3.8637548250025887`*^9, 3.863754952954526*^9}, {3.863754995730237*^9, 
   3.8637550096573486`*^9}, {3.863755729134512*^9, 3.8637557750625467`*^9}, {
   3.863757593621521*^9, 3.8637576102819457`*^9}, 3.863763295940404*^9, 
   3.8637636584545946`*^9, {3.8654993595288935`*^9, 3.8654994784929605`*^9}, {
   3.89019403410345*^9, 3.8901940357606554`*^9}, {3.8901940694272795`*^9, 
   3.8901940852623167`*^9}, {3.890194168987423*^9, 3.8901943277756176`*^9}, {
   3.890194530409092*^9, 3.890194727625981*^9}, 3.890194925766103*^9, {
   3.89019497861076*^9, 
   3.8901950145872445`*^9}},ExpressionUUID->"b9747e7b-d5f5-48f8-83dc-\
ffb8125c89de"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetFromBurstList", "  ", "::", "usage"}], "=", 
   RowBox[{
   "\"\<FGetFromBurstList[\!\(\*StyleBox[\"expr\", \"TI\"]\)] evaluates \
\!\(\*StyleBox[\"expr\", \"TI\"]\) for each photon burst and returns the \
results in a list.\n\!\(\*StyleBox[\"expr\", \"TI\"]\) can contain the \
following strings:\>\"", "<>", "FPBurstParameters", "<>", 
    "\"\<\nEach string in an expression will be replaced by the corresponding \
list of values for all photon bursts. \
\!\(\*StyleBox[\"Hold\",FontSlant->\"Italic\"]\) can be used to prevent the \
expression to be evalutated by Mathematica before the strings are replaced. \
For example: FGetFromBustList[Hold@Transpose[{\\\"Epie\\\",\\\"Spie\\\"}] ]. \
\nFGetFromBurstList has the following options:\n\
FBurstData\!\(\(TraditionalForm\` \[Rule] \)\)All (default)\n\
FBurstData\!\(\(TraditionalForm\` \[Rule] \)\)FSelectedBursts\n\>\""}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129732385266953`*^9, 3.812973238667326*^9}, {
   3.862976828306614*^9, 3.862976829216323*^9}, {3.862985987210504*^9, 
   3.862986204079244*^9}, {3.8629862453562927`*^9, 3.862986253617249*^9}, {
   3.86298659486236*^9, 3.8629866008694377`*^9}, {3.8629870156800203`*^9, 
   3.8629870168518853`*^9}, 3.8637550699212637`*^9, {3.863755828330847*^9, 
   3.8637558490197716`*^9}, {3.863759499763891*^9, 3.863759509192254*^9}, {
   3.863759545227175*^9, 3.863759612800417*^9}, 3.8637632442664647`*^9, {
   3.8637633859231887`*^9, 3.8637635464227314`*^9}, 3.8637635965957804`*^9, {
   3.8637636400693045`*^9, 3.8637636409688997`*^9}, {3.8654995016908903`*^9, 
   3.865499502294751*^9}, 
   3.8901955252095137`*^9},ExpressionUUID->"a60f5c82-7595-41b3-a175-\
efa614a759a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetPhotonList", "  ", "::", "usage"}], "=", 
   "\"\<FGetPhotonList[t1,t2] returns for all photons recorded between t1 and \
t2 (in seconds) the inter\[Hyphen]photon times (in microseconds), the \
detection routes, and the lifetime channels. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973243901905*^9, 
  3.81297324399566*^9}},ExpressionUUID->"85427433-22e3-4265-8dc6-\
b6af3a8efcbb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetBurstListSize", "  ", "::", "usage"}], "=", 
   "\"\<FGetBurstListSize[] returns the total number of identified photon \
bursts. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973244323797*^9, 
  3.8129732444331765`*^9}},ExpressionUUID->"5cee94d4-a8ed-468e-9b8d-\
c8350c5bf922"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetNirFret2cdeFromBurstList", "  ", "::", "usage"}], "=", 
   "\"\<FGetNirFret2cdeFromBurstList[taums\!\(TraditionalForm\`_\)Real] \
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973244792565*^9, 
  3.812973244886318*^9}},ExpressionUUID->"cc764958-ac50-4f77-a79a-\
c57fafe1f0d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FBurstData", "  ", "::", "usage"}], "=", 
   "\"\<Option for specifying that something is calculated only for the burst \
photons. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732452457066`*^9, 
  3.8129732453394613`*^9}},ExpressionUUID->"33661f04-50d0-460e-ba27-\
13a7b786c7bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FParamHisto", "  ", "::", "usage"}], "=", 
   "\"\<FParamHisto[expr,\!\(TraditionalForm\`{\[Null]\)min,max,step\!\(\(\
TraditionalForm\`}\)\),opts]\n Options:\n \!\(\(TraditionalForm\`\\\ \\\ \
\)\)FOutput\!\(\(TraditionalForm\` \[Rule] \)\)FGraph (default)\n \
\!\(\(TraditionalForm\`\\\ \\\ \)\)FOutput\!\(\(TraditionalForm\` \[Rule] \
\)\)FData\n \!\(\(TraditionalForm\`\\\ \\\ \
\)\)FBurstData\!\(\(TraditionalForm\` \[Rule] \)\)All (default)\n \
\!\(\(TraditionalForm\`\\\ \\\ \)\)FBurstData\!\(\(TraditionalForm\` \[Rule] \
\)\)FSelectedBursts\n All graphical options of Histogram are accepted for \
modifying the graphical appearance.\nInternally, FGetFromBurstList[expr,opts] \
is evaluated to obtain the list of values from which the histogram is built. \
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732456832232`*^9, 
  3.8129732457926016`*^9}},ExpressionUUID->"b36bd0b4-cebf-4a17-8f02-\
58834c3ca285"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FParamHisto2D", "  ", "::", "usage"}], "=", 
   "\"\<FParamHisto2D[expr1,expr2,\!\(TraditionalForm\`{\[Null]\)min1,max1,\
step1\!\(\(TraditionalForm\`}\)\),\!\(TraditionalForm\`{\[Null]\)min2,max2,\
step2\!\(\(TraditionalForm\`}\)\),opts]\n Options:\n \
\!\(\(TraditionalForm\`\\\ \\\ \)\)FOutput\!\(\(TraditionalForm\` \[Rule] \
\)\)FGraph (default)\n \!\(\(TraditionalForm\`\\\ \\\ \
\)\)FOutput\!\(\(TraditionalForm\` \[Rule] \)\)FData\n \
\!\(\(TraditionalForm\`\\\ \\\ \)\)FOutput\!\(\(TraditionalForm\` \[Rule] \
\)\)FGraph3D\n \!\(\(TraditionalForm\`\\\ \\\ \
\)\)FBurstData\!\(\(TraditionalForm\` \[Rule] \)\)All (default)\n \
\!\(\(TraditionalForm\`\\\ \\\ \)\)FBurstData\!\(\(TraditionalForm\` \[Rule] \
\)\)FSelectedBursts\!\(\(TraditionalForm\`\\\ \\\ \)\)\n All options of \
ListContourPlot and ListPlot3D are accepted.\nInternally, \
Transpose[\!\(TraditionalForm\`{\[Null]\)FGetFromBurstList[expr1,opts],\
FGetFromBurstList[expr2,opts]\!\(\(TraditionalForm\`}\)\)] is evaluated to \
obtain the list of value pairs from which the 2D histogram is built. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.81297324615199*^9, 3.8129732462769957`*^9}, {
  3.8901956784649515`*^9, 3.890195692636294*^9}, {3.890195828793315*^9, 
  3.8901958311489415`*^9}},ExpressionUUID->"7ad04603-ea44-4e7b-a1f7-\
8aeeac028da5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGraph3D", "  ", "::", "usage"}], "=", 
   "\"\<Option value for FOutput in Histo2D and FParamHisto2D. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.81297324662076*^9, 
  3.8129732467301397`*^9}},ExpressionUUID->"9ae6a1b6-c525-4b0c-9d18-\
ad3e31fe372a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSelectBurst", "  ", "::", "usage"}], "=", 
   "\"\<FSelectBurst[burstindex\!\(TraditionalForm\`_\)Integer,val\!\(\
TraditionalForm\`_\)Integer]. val can be 0 or 1. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973247073905*^9, 
  3.812973247183285*^9}},ExpressionUUID->"4f2722ba-92f7-42b6-93fa-\
cde288f9e009"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSelectBursts", "  ", "::", "usage"}], "=", 
   "\"\<FSelectBursts[paramlist\!\(TraditionalForm\`_\)List,crit\!\(\
TraditionalForm\`_\)]\nExample: FSelectBursts[\!\(TraditionalForm\`{\[Null]\)\
\\\"StoichiometryRatio\\\"\!\(\(TraditionalForm\`}\)\),(\!\(TraditionalForm\`#\
\)[[1]]\!\(\(TraditionalForm\` < \)\)0.7)\!\(\(TraditionalForm\` &\)\)] \
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973247527047*^9, 
  3.812973247652053*^9}},ExpressionUUID->"774dd088-019c-4242-b099-\
c81ca4761ee0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FLogNormal", "  ", "::", "usage"}], "=", 
   "\"\<FLogNormal[e\!\(TraditionalForm\`_\),pos\!\(TraditionalForm\`_\),ampl\
\!\(TraditionalForm\`_\),width\!\(TraditionalForm\`_\),asym\!\(\
TraditionalForm\`_\)] is an empirical peak function used in \
FFitFretHistogram. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973248136445*^9, 
  3.812973248245825*^9}},ExpressionUUID->"ee2769b9-924f-4b76-aca8-\
723b63aecac2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGaussian", "  ", "::", "usage"}], "=", 
   "\"\<FGaussian[e\!\(TraditionalForm\`_\),pos\!\(TraditionalForm\`_\),ampl\!\
\(TraditionalForm\`_\),width\!\(TraditionalForm\`_\)] is an empirical peak \
function used in FFitFretHistogram. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732486491084`*^9, 
  3.8129732487636423`*^9}},ExpressionUUID->"e8918365-a39c-4595-8a29-\
69e2c5fa50e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FMakeModel", "  ", "::", "usage"}], "=", 
   "\"\<FMakeModel is obsolet. Use FMakeFRETPeakModel instead.\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129732491447554`*^9, 3.8129732492567887`*^9}, {
  3.8599742856688185`*^9, 
  3.8599743228636246`*^9}},ExpressionUUID->"adef3af8-5a9a-4fb7-af93-\
28338f443d0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FMakeFRETPeakModel", "  ", "::", "usage"}], "=", 
   "\"\<FMakeFRETPeakModel[peakmodel] returns the fit model and model \
parameters used in FFitFretHistogram. The model consists of a sum of \
empirical peak functions (Gaussian (\\\"G\\\") or lognormal (\\\"L\\\") \
peaks) specified in the list peakmodel. Example: \
FMakeFRETPeakModel[\!\(TraditionalForm\`{\[Null]\)\\\"L\\\",\\\"G\\\",\\\"L\\\
\"\!\(\(TraditionalForm\`}\)\)]. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8599742651401377`*^9, 
  3.8599742694737806`*^9}},ExpressionUUID->"78e89fe3-c5c9-4f46-8fb0-\
3a968f929808"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FFindGuess", "  ", "::", "usage"}], "=", 
   "\"\<FFindGuess[histodata,peakmodel,peakpositionestimates] makes a \
parameter guess to be used in FFitFretHistogram. For each peak of the model, \
either a single value or an interval are given in peakpositionestimates. If \
an interval is given, the position of the maximum is determined within the \
limits of that interval. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732502155886`*^9, 
  3.8129732503641334`*^9}},ExpressionUUID->"c394d0f9-ce35-496c-a81c-\
38d55ee81930"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FFRETPeakIntegrate", "  ", "::", "usage"}], "=", 
   "\"\<FFRETPeakIntegrate[peakmodel,peakparams,\!\(TraditionalForm\`{\[Null]\
\)E1,E2\!\(\(TraditionalForm\`}\)\)]\n returns the areas under the peaks of \
peakmodel as a list. peakparams needs to be a list of replacement rules, \
usually the list of best\[Hyphen]fit parameters returned from \
FFitFretHistogram. E1 and E2 are the integration limits. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973250804267*^9, 
  3.812973250925187*^9}},ExpressionUUID->"12924aee-7b5c-4357-b334-\
0cfb8f1663bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FPlotFRETFit", "  ", "::", "usage"}], "=", 
   "\"\<FPlotFRETFit[histodata:\!\(TraditionalForm\`{{_\)?NumberQ,\!\(\
TraditionalForm\`_\)?NumberQ,\!\(TraditionalForm\`_\)?NumberQ\!\(\(\
TraditionalForm\`}\)\)..\!\(\(TraditionalForm\`}\)\),peakmodel:\!\(\
TraditionalForm\`{\[Null]\)Repeated[\\\"G\\\"\!\(\(TraditionalForm\` | \)\)\\\
\"L\\\"]\!\(\(TraditionalForm\`}\)\),fitresult\!\(TraditionalForm\`_\),opts:\
OptionsPattern[]] \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732512845807`*^9, 
  3.812973251393958*^9}},ExpressionUUID->"ccc12f12-a2b3-4b71-8b7c-\
680424fba6f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSubPopCurveOptions", "  ", "::", "usage"}], "=", 
   "\"\<Options for FpdaEHisto. Example: \
FSubPopCurveOptions\!\(TraditionalForm\`\(\(\[Rule]\)\({\[Null]\)\)\)\
PlotRange\!\(\(TraditionalForm\` \[Rule] \)\)All, \
PlotStyle\!\(\(TraditionalForm\` \[Rule] \)\)Red, ...\!\(\(TraditionalForm\`}\
\)\) or any other valid option for ListLinePlot. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973251940853*^9, 
  3.812973252034608*^9}},ExpressionUUID->"a938de6a-bcc0-4a19-a2db-\
dafc09607e05"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSubPopOptions", "  ", "::", "usage"}], "=", 
   "\"\<FSubPopOptions\!\(TraditionalForm\`\(\(\[Rule]\)\({\[Null]\)\)\)\
plotoption1, plotoption2, ...\!\(\(TraditionalForm\`}\)\) Options for \
FPlotFRETFit and FFitFretHistogram. plotoptioni can be any valid option of \
Plot. For example, FFitCurveOptions\!\(TraditionalForm\`\(\(\[Rule]\)\({\
\[Null]\)\)\)PlotRange\!\(\(TraditionalForm\` \[Rule] \)\)All, \
Filling\!\(\(TraditionalForm\` \[Rule] \)\)Bottom, \
PlotStyle\!\(\(TraditionalForm\` \[Rule] \)\)Red\!\(\(TraditionalForm\`}\)\) \
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732523783703`*^9, 
  3.812973252487749*^9}},ExpressionUUID->"75dccc36-4010-46cd-90d2-\
1e649ebbd187"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSubPopStyle", "  ", "::", "usage"}], "=", 
   "\"\<FSubPopStyle is an option for FPlotFRETFit, FFitFretHistogram, \
FpdaEHisto, and FpdaEhistoFit. Example: FSubPopStyle\!\(TraditionalForm\`\(\(\
\[Rule]\)\({\[Null]\)\)\)Red,Green,Blue\!\(\(TraditionalForm\`}\)\). \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129732528315115`*^9, 
  3.8129732529408913`*^9}},ExpressionUUID->"8335fc39-83ca-494e-9cc5-\
f903681ec2a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FFitCurveOptions", "  ", "::", "usage"}], "=", 
   "\"\<Option for PDA functions. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732532690277`*^9, 
  3.812973253362781*^9}},ExpressionUUID->"12f0c5ff-b9ed-48ac-8d11-\
ea2749aeb10d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FFitCurveStyle", "  ", "::", "usage"}], "=", 
   "\"\<FFitCurveStyle\!\(TraditionalForm\`\(\(\[Rule]\)\({\[Null]\)\)\)...\!\
\(\(TraditionalForm\`}\)\) Option of FPlotFRETFit, FFitFretHistogram, \
FpdaEHisto, and FpdaEhistoFit. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973253706544*^9, 
  3.8129732538002973`*^9}},ExpressionUUID->"feb3d2e7-abca-4373-af68-\
07d785ff0b8f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FFitFretHistogram", "  ", "::", "usage"}], "=", 
   "\"\<FFitFretHistogram fits FRET efficiency histograms with a sum of \
empirical peak functions (Gaussian (\\\"G\\\") or lognormal (\\\"L\\\") \
peaks). A list of histograms can be fitted globally, with both shared and \
individual fit parameters. \nFFitFretHistogram returns a list containing \
three elements: best\[Hyphen]fit parameters, a plot with data and fit, and \
the FittedModel object returned by NonlinearModelFit.\nFFitFretHistogram can \
be used in different ways:\n \n \
FFitFretHistogram[dat,model,peakpositionestimates] \n \!\(\(TraditionalForm\`\
\\\ \\\ \)\)Example: \n \!\(\(TraditionalForm\`\\\ \\\ \\\ \\\ \)\)dat\
\[LongEqual]FParamHisto[\\\"E\\\",\!\(TraditionalForm\`{\[Null]\)\[Hyphen]0.2,\
1.2,0.03\!\(\(TraditionalForm\`}\)\),FOutput\!\(\(TraditionalForm\` \[Rule] \
\)\)FData];\n \!\(\(TraditionalForm\`\\\ \\\ \\\ \\\ \
\)\)FFitFretHistogram[dat,\!\(TraditionalForm\`{\[Null]\)\\\"L\\\",\\\"G\\\",\
\\\"L\\\"\!\(\(TraditionalForm\`}\)\),\!\(TraditionalForm\`{{\[Null]\)\
\[Hyphen]1.0,0.2\!\(\(TraditionalForm\`}\)\),0.5,\!\(TraditionalForm\`{\[Null]\
\)0.6,1\!\(TraditionalForm\`\(\(}\)\(}\)\)\)]\n \
FFitFretHistogram[dat,model,guess], where guess must have the same form as \
the parameters in NonlinearModelFit (see Mathematica documentation).\n \
\!\(\(TraditionalForm\`\\\ \\\ \)\)Example:\n \!\(\(TraditionalForm\`\\\ \\\ \
\\\ \\\ \)\)dat\[LongEqual]FParamHisto[\\\"E\\\",\!\(TraditionalForm\`{\[Null]\
\)\[Hyphen]0.2,1.2,0.03\!\(\(TraditionalForm\`}\)\),FOutput\!\(\(\
TraditionalForm\` \[Rule] \)\)FData];\n \!\(\(TraditionalForm\`\\\ \\\ \\\ \\\
\ \)\)guess\[LongEqual]FFindGuess[dat,model\[LongEqual]\!\(TraditionalForm\`{\
\[Null]\)\\\"L\\\",\\\"G\\\",\\\"L\\\"\!\(\(TraditionalForm\`}\)\),\!\(\
TraditionalForm\`{{\[Null]\)\[Hyphen]1.0,0.2\!\(\(TraditionalForm\`}\)\),0.5,\
\!\(TraditionalForm\`{\[Null]\)0.6,1\!\(TraditionalForm\`\(\(}\)\(}\)\)\)];\!\
\(\(TraditionalForm\`\\\ \\\ \\\ \\\ \\\ \\\ \\\ \\\ \)\)\n \
\!\(\(TraditionalForm\`\\\ \\\ \\\ \\\ \)\)FFitFretHistogram[dat,model,guess]\
\n FFitFretHistogram[\!\(TraditionalForm\`{\[Null]\)Emin,Emax,\!\(\
TraditionalForm\`\[CapitalDelta]\)E\!\(\(TraditionalForm\`}\)\),model,\
peakestimates]\n \!\(\(TraditionalForm\`\\\ \\\ \)\)Example:\n \
\!\(\(TraditionalForm\`\\\ \\\ \\\ \\\ \
\)\)FFitFretHistogram[\!\(TraditionalForm\`{\[Null]\)\[Hyphen]0.2,1.2,0.02\!\(\
\(TraditionalForm\`}\)\),\!\(TraditionalForm\`{\[Null]\)\\\"L\\\",\\\"G\\\",\\\
\"L\\\"\!\(\(TraditionalForm\`}\)\),\!\(TraditionalForm\`{{\[Null]\)\[Hyphen]\
1.0,0.2\!\(\(TraditionalForm\`}\)\),0.5,\!\(TraditionalForm\`{\[Null]\)0.6,1\!\
\(TraditionalForm\`\(\(}\)\(}\)\)\)]\n or\n \
FFitFretHistogram[\!\(TraditionalForm\`{\[Null]\)Emin,Emax,\!\(\
TraditionalForm\`\[CapitalDelta]\)E\!\(\(TraditionalForm\`}\)\),model,guess] \
\n\n In the last two cases, the histogram is calculated internally using \
FParamHisto[\\\"E\\\", \
\!\(TraditionalForm\`{\[Null]\)Emin,Emax,\!\(TraditionalForm\`\[CapitalDelta]\
\)E\!\(\(TraditionalForm\`}\)\), FOutput \!\(\(TraditionalForm\` \[Rule] \)\) \
FData].\n The graphical output is customizable with the options \
FFitCurveStyle and FSubPopStyle and all options of Histogram.\n Fitting with \
constraints on the parameters can be activated with the option FConstraints.\n\
 Parameters can be kept fixed with the option FFixParams.\n FFitFretHistogram \
accepts all options of NonlinearModelFit, FPlotFRETFit, and FParamHisto.\n \n \
In the examples above, dat can also be a list of histograms: \
dat\[LongEqual]\!\(TraditionalForm\`{\[Null]\)histo1,histo2,...\!\(\(\
TraditionalForm\`}\)\).\n In this case, the histograms are fitted globally. \
Shared parameters can be specified:\n \
FFitFretHistogram[dat,model,globalparams,peakestimates], where globalparams \
is a list of the global fit parameters.\n\!\(\(TraditionalForm\`\\\ \\\ \)\)  \
Example:\n \
FFitFretHistogram[\!\(TraditionalForm\`{\[Null]\)histo1,histo2,histo3\!\(\(\
TraditionalForm\`}\)\),\!\(TraditionalForm\`{\[Null]\)\\\"L\\\",\\\"G\\\",\\\"\
G\\\"\!\(\(TraditionalForm\`}\)\),\!\(TraditionalForm\`{\[Null]\)Pos[2],Width[\
3]\!\(\(TraditionalForm\`}\)\),\!\(TraditionalForm\`{\[Null]\)0.05,0.6,0.8\!\(\
\(TraditionalForm\`}\)\)]\n Here, the position of the second peak and the \
width of the third peak are shared parameters for the fits of all histograms.\
\n\!\(\(TraditionalForm\`\\\ \\\ \\\ \\\ \)\)\n  \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973254222189*^9, 
  3.812973254331568*^9}},ExpressionUUID->"d13d99c0-bb52-442c-b41d-\
da2552da923e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FFixParams", "  ", "::", "usage"}], "=", 
   "\"\<Option for FFitFretHistogram. Example: \
FFixParams\!\(TraditionalForm\`\(\(\[Rule]\)\({\[Null]\)\)\)Pos[1]\!\(\(\
TraditionalForm\` \[Rule] \)\)0.1\!\(\(TraditionalForm\`}\)\). \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973256487903*^9, 
  3.8129732565972824`*^9}},ExpressionUUID->"1d9022aa-c8ac-426a-bcdd-\
3ad76dd72969"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FConstraints", "  ", "::", "usage"}], "=", 
   "\"\<Option for FFitFretHistogram. Example FConstraints\!\(TraditionalForm\
\`\(\(\[Rule]\)\({\[Null]\)\)\)\[Hyphen]0.05\!\(\(TraditionalForm\` < \)\)\
\[LongEqual]Pos[1]\!\(\(TraditionalForm\`}\)\). \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973256941044*^9, 
  3.8129732570347986`*^9}},ExpressionUUID->"367f5442-b7b9-4c12-b8ab-\
503b76aad912"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FDetermineShotNoiseWidths", "  ", "::", "usage"}], "=", 
   "\"\<FDetermineShotNoiseWidths[Erange:\!\(TraditionalForm\`{_\)?NumberQ,\!\
\(TraditionalForm\`_\)?NumberQ,\!\(TraditionalForm\`_\)?NumberQ\!\(\(\
TraditionalForm\`}\)\),peaks:\!\(TraditionalForm\`{\[Null]\)Repeated[\\\"G\\\"\
\!\(\(TraditionalForm\` | \
\)\)\\\"L\\\"]\!\(\(TraditionalForm\`}\)\),peakposguess:\!\(TraditionalForm\`{\
\[Null]\)Repeated[\!\(TraditionalForm\`_\)?NumberQ\!\(TraditionalForm\`\(\(|\)\
\({_\)\)\)?NumberQ,\!\(TraditionalForm\`_\)?NumberQ\!\(\(TraditionalForm\`}\)\
\)]\!\(\(TraditionalForm\`}\)\),opts:OptionsPattern[]] \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973257378562*^9, 
  3.812973257487943*^9}},ExpressionUUID->"73d6c368-98c0-4ae2-a0a4-\
ea8931494e03"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Ampl", "  ", "::", "usage"}], "=", 
   "\"\<Symbol for peak amplitude. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732580660925`*^9, 
  3.8129732582067223`*^9}},ExpressionUUID->"a71b7788-a5dc-4540-823d-\
36649c65104a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Asym", "  ", "::", "usage"}], "=", 
   "\"\<Symbol for peak asymmetry. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732585817366`*^9, 
  3.8129732587223673`*^9}},ExpressionUUID->"b33780ce-f45f-4818-bd26-\
ef5ef87c1b80"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"e", "  ", "::", "usage"}], "=", 
    "\"\<Symbol for transfer efficiency. \>\""}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.812973259066129*^9, 3.8129732591598835`*^9}, {
  3.8595316834433756`*^9, 3.8595316873732476`*^9}, {3.8598797309792004`*^9, 
  3.859879733550658*^9}, {3.8598800912382884`*^9, 
  3.8598800965485673`*^9}},ExpressionUUID->"dcbb2dfa-97e6-4f03-81e3-\
4dc770c7e26c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Pos", "  ", "::", "usage"}], "=", 
   "\"\<Symbol for peak postion. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.81297325948802*^9, 
  3.8129732595973997`*^9}},ExpressionUUID->"771c43a9-e390-4903-a0a4-\
30c4469f8750"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Width", "  ", "::", "usage"}], "=", 
   "\"\<Symbol for peak width. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973259925536*^9, 
  3.812973260034916*^9}},ExpressionUUID->"b3011071-44da-4b8d-80c2-\
aeb7d27700db"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"amplitudepeak", "::", "usage"}], "=", 
   "\"\<Symbol for peak fitting.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x0peak", "::", "usage"}], "=", 
   "\"\<Symbol for peak fitting.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y0peak", "::", "usage"}], "=", 
   "\"\<Symbol for peak fitting.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]xpeak", "::", "usage"}], "=", 
   "\"\<Symbol for peak fitting.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]ypeak", "::", "usage"}], "=", 
   "\"\<Symbol for peak fitting.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"anglepeak", "::", "usage"}], "=", 
   "\"\<Symbol for peak fitting.\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.86549968726593*^9, 
  3.8654997965721416`*^9}},ExpressionUUID->"042dc155-f588-4f04-b69b-\
7e54a2a7104d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FBurstAsymmetry", "  ", "::", "usage"}], "=", 
   "\"\<FBurstAsymmetry[\!\(TraditionalForm\`{\[Null]\)Emin, Emax, \
dE\!\(\(TraditionalForm\`}\)\),\!\(TraditionalForm\`{\[Null]\)Amin, Amax, dA \
\!\(\(TraditionalForm\`}\)\), \!\(\*FormBox[StyleBox[\"n\", \
\"TI\"],TraditionalForm]\)] creates three plots showing photon burst \
asymmetry ( \!\(TraditionalForm\`\*SubscriptBox[\(\[Alpha]\), \(DA\)]\)) \
versus transfer efficiency (\!\(\*FormBox[StyleBox[\"E\", \
\"TI\"],TraditionalForm]\)). The first plot shows for each burst a point, \
where the color depends on \!\(TraditionalForm\`\*SubscriptBox[\(\[Alpha]\), \
\(DA\)]\) being inside (blue) or outside (red) the confidence level \
\!\(\*FormBox[RowBox[{StyleBox[\"n\", \"TI\"], \"\[Cross]\", \
\"\[Sigma]\"}],TraditionalForm]\) . \!\(TraditionalForm\`\[Sigma]\) is \
calculated for each burst from \!\(\*FormBox[RowBox[{\"\[Sigma]\", \"\
\[LongEqual]\", FractionBox[StyleBox[\"T\", \"TI\"], RowBox[{\"2\", \
SqrtBox[\"3\"]}]], SqrtBox[RowBox[{\"1\", \"/\", SubscriptBox[StyleBox[\"N\", \
\"TI\"], StyleBox[\"D\", \"TI\"]], \"+\", \"1\", \"/\", \
SubscriptBox[StyleBox[\"N\", \"TI\"], StyleBox[\"A\", \
\"TI\"]]}]]}],TraditionalForm]\). \!\(\*FormBox[StyleBox[\"T\", \
\"TI\"],TraditionalForm]\) is the burst duration. \
\!\(\*FormBox[SubscriptBox[StyleBox[\"N\", \"TI\"], StyleBox[\"D\", \
\"TI\"]],TraditionalForm]\) and \!\(\*FormBox[SubscriptBox[StyleBox[\"N\", \
\"TI\"], StyleBox[\"A\", \"TI\"]],TraditionalForm]\) are the uncorrected \
photon numbers in the donor and acceptor detection routes, respectively. The \
photon burst asymmetry is defined as \!\(\*FormBox[RowBox[{SubscriptBox[\"\
\[Alpha]\", \"DA\"], \"\[LongEqual]\", RowBox[{\"\[LeftAngleBracket]\", \
SubscriptBox[StyleBox[\"t\", \"TI\"], StyleBox[\"D\", \"TI\"]], \"\
\[RightAngleBracket]\"}], \"-\", RowBox[{\"\[LeftAngleBracket]\", \
SubscriptBox[StyleBox[\"t\", \"TI\"], StyleBox[\"A\", \"TI\"]], \"\
\[RightAngleBracket]\"}]}],TraditionalForm]\), i.e. the difference between \
the mean detection times of the donor photons and acceptor photons of the \
burst (emitted upon donor excitation). The other two plots are contour plots \
showing only the bursts with \!\(\*FormBox[RowBox[{\"|\", SubscriptBox[\"\
\[Alpha]\", \"DA\"], \"|\", \"\[LessEqual]\", StyleBox[\"n\", \"TI\"], \"\
\[Sigma]\"}],TraditionalForm]\) and \!\(\*FormBox[RowBox[{\"|\", \
SubscriptBox[\"\[Alpha]\", \"DA\"], \"|\", \">\", StyleBox[\"n\", \"TI\"], \"\
\[Sigma]\"}],TraditionalForm]\), respectively. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732603943033`*^9, 
  3.812973260519308*^9}},ExpressionUUID->"05c854b7-d91e-42fa-a886-\
3e7636d5427d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FCutAsymmetricBursts", "  ", "::", "usage"}], "=", 
   "\"\<FCutAsymmetricBursts[\!\(\*FormBox[StyleBox[\"n\", \
\"TI\"],TraditionalForm]\)] deletes all photon bursts with a photon burst \
asymmetry, \!\(TraditionalForm\`\*SubscriptBox[\(\[Alpha]\), \(DA\)]\), \
outside the confidence level \!\(\*FormBox[RowBox[{StyleBox[\"n\", \"TI\"], \
\"\[Cross]\", \"\[Sigma]\"}],TraditionalForm]\), where \!\(TraditionalForm\`\
\[Sigma]\) is calculated for each burst from \!\(\*FormBox[RowBox[{\"\[Sigma]\
\", \"\[LongEqual]\", FractionBox[StyleBox[\"T\", \"TI\"], RowBox[{\"2\", \
SqrtBox[\"3\"]}]], SqrtBox[RowBox[{\"1\", \"/\", SubscriptBox[StyleBox[\"N\", \
\"TI\"], StyleBox[\"D\", \"TI\"]], \"+\", \"1\", \"/\", \
SubscriptBox[StyleBox[\"N\", \"TI\"], StyleBox[\"A\", \
\"TI\"]]}]]}],TraditionalForm]\). \!\(\*FormBox[StyleBox[\"T\", \
\"TI\"],TraditionalForm]\) is the burst duration. \
\!\(\*FormBox[SubscriptBox[StyleBox[\"N\", \"TI\"], StyleBox[\"D\", \
\"TI\"]],TraditionalForm]\) and \!\(\*FormBox[SubscriptBox[StyleBox[\"N\", \
\"TI\"], StyleBox[\"A\", \"TI\"]],TraditionalForm]\) are the uncorrected \
photon numbers in the donor and acceptor detection routes, respectively. The \
photon burst asymmetry is defined as \!\(\*FormBox[RowBox[{SubscriptBox[\"\
\[Alpha]\", \"DA\"], \"\[LongEqual]\", RowBox[{\"\[LeftAngleBracket]\", \
SubscriptBox[StyleBox[\"t\", \"TI\"], StyleBox[\"D\", \"TI\"]], \"\
\[RightAngleBracket]\"}], \"-\", RowBox[{\"\[LeftAngleBracket]\", \
SubscriptBox[StyleBox[\"t\", \"TI\"], StyleBox[\"A\", \"TI\"]], \"\
\[RightAngleBracket]\"}]}],TraditionalForm]\), i.e. the difference between \
the mean detection times of the donor photons and acceptor photons of the \
burst (emitted upon donor excitation). \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732608630705`*^9, 
  3.8129732609724503`*^9}},ExpressionUUID->"91da865d-1359-4ed5-826d-\
03300456d0c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FPIEBurstAsymmetry", "  ", "::", "usage"}], "=", 
   "\"\<FPIEBurstAsymmetry[\!\(TraditionalForm\`{\[Null]\)Emin, Emax, \
dE\!\(\(TraditionalForm\`}\)\),\!\(TraditionalForm\`{\[Null]\)Amin, Amax, dA \
\!\(\(TraditionalForm\`}\)\), \!\(\*FormBox[StyleBox[\"n\", \
\"TI\"],TraditionalForm]\)] creates three plots showing photon burst \
asymmetry ( \!\(TraditionalForm\`\*SubscriptBox[\(\[Alpha]\), \(PIE\)]\)) \
versus transfer efficiency (\!\(\*FormBox[StyleBox[\"E\", \
\"TI\"],TraditionalForm]\)). The first plot shows for each burst a point, \
where the color depends on \!\(TraditionalForm\`\*SubscriptBox[\(\[Alpha]\), \
\(PIE\)]\) being inside (blue) or outside (red) the confidence level \
\!\(\*FormBox[RowBox[{StyleBox[\"n\", \"TI\"], \"\[Cross]\", \
\"\[Sigma]\"}],TraditionalForm]\) \!\(TraditionalForm\`\[Sigma]\) is \
calculated for each burst from \!\(\*FormBox[RowBox[{\"\[Sigma]\", \"\
\[LongEqual]\", FractionBox[StyleBox[\"T\", \"TI\"], RowBox[{\"2\", \
SqrtBox[\"3\"]}]], SqrtBox[RowBox[{\"1\", \"/\", RowBox[{\"(\", \
RowBox[{SubscriptBox[StyleBox[\"N\", \"TI\"], \"DD\"], \"+\", \
SubscriptBox[StyleBox[\"N\", \"TI\"], \"DA\"]}], \")\"}], \"+\", \"1\", \
\"/\", SubscriptBox[StyleBox[\"N\", \"TI\"], \"AA\"]}]]}],TraditionalForm]\). \
\!\(\*FormBox[StyleBox[\"T\", \"TI\"],TraditionalForm]\) is the burst \
duration. \!\(\*FormBox[SubscriptBox[StyleBox[\"N\", \"TI\"], \
\"DD\"],TraditionalForm]\) and \!\(\*FormBox[SubscriptBox[StyleBox[\"N\", \
\"TI\"], \"DA\"],TraditionalForm]\) are the uncorrected photon numbers in the \
donor and acceptor detection routes emitted upon donor excitation. \
\!\(\*FormBox[SubscriptBox[StyleBox[\"N\", \"TI\"], \
\"AA\"],TraditionalForm]\) is the uncorrected photon numbers in acceptor \
detection routes emitted upon acceptor excitation. The PIE photon burst \
asymmetry is defined as \!\(\*FormBox[RowBox[{SubscriptBox[\"\[Alpha]\", \
\"PIE\"], \"\[LongEqual]\", RowBox[{\"\[LeftAngleBracket]\", \
SubscriptBox[StyleBox[\"t\", \"TI\"], \"Dex\"], \"\[RightAngleBracket]\"}], \
\"-\", RowBox[{\"\[LeftAngleBracket]\", SubscriptBox[StyleBox[\"t\", \"TI\"], \
\"Aex\"], \"\[RightAngleBracket]\"}]}],TraditionalForm]\), i.e. the \
difference between the mean detection times of the photons emitted upon donor \
excitation and acceptor excitation, respectively. The other two plots are \
contour plots showing only the bursts with \!\(\*FormBox[RowBox[{\"|\", \
SubscriptBox[\"\[Alpha]\", \"PIE\"], \"|\", \"\[LessEqual]\", StyleBox[\"n\", \
\"TI\"], \"\[Sigma]\"}],TraditionalForm]\) and \!\(\*FormBox[RowBox[{\"|\", \
SubscriptBox[\"\[Alpha]\", \"PIE\"], \"|\", \">\", StyleBox[\"n\", \"TI\"], \
\"\[Sigma]\"}],TraditionalForm]\), respectively. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973261331839*^9, 
  3.8129732614412193`*^9}},ExpressionUUID->"e80c81bc-3b43-4382-9c54-\
79750bc49a4e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FPIECutAsymmetricBursts", "  ", "::", "usage"}], "=", 
   "\"\<FPIECutAsymmetricBursts[\!\(\*FormBox[StyleBox[\"n\", \
\"TI\"],TraditionalForm]\)] deletes all photon bursts with a PIE photon burst \
asymmetry, \!\(TraditionalForm\`\*SubscriptBox[\(\[Alpha]\), \(PIE\)]\), \
outside the confidence level \!\(\*FormBox[RowBox[{StyleBox[\"n\", \"TI\"], \
\"\[Cross]\", \"\[Sigma]\"}],TraditionalForm]\), where \!\(TraditionalForm\`\
\[Sigma]\) is calculated for each burst from \!\(\*FormBox[RowBox[{\"\[Sigma]\
\", \"\[LongEqual]\", FractionBox[StyleBox[\"T\", \"TI\"], RowBox[{\"2\", \
SqrtBox[\"3\"]}]], SqrtBox[RowBox[{\"1\", \"/\", RowBox[{\"(\", \
RowBox[{SubscriptBox[StyleBox[\"N\", \"TI\"], \"DD\"], \"+\", \
SubscriptBox[StyleBox[\"N\", \"TI\"], \"DA\"]}], \")\"}], \"+\", \"1\", \
\"/\", SubscriptBox[StyleBox[\"N\", \"TI\"], \"AA\"]}]]}],TraditionalForm]\). \
\!\(\*FormBox[StyleBox[\"T\", \"TI\"],TraditionalForm]\) is the burst \
duration. \!\(\*FormBox[SubscriptBox[StyleBox[\"N\", \"TI\"], \
\"DD\"],TraditionalForm]\) and \!\(\*FormBox[SubscriptBox[StyleBox[\"N\", \
\"TI\"], \"DA\"],TraditionalForm]\) are the uncorrected photon numbers in the \
donor and acceptor detection routes emitted upon donor excitation. \
\!\(\*FormBox[SubscriptBox[StyleBox[\"N\", \"TI\"], \
\"AA\"],TraditionalForm]\) is the uncorrected photon numbers in acceptor \
detection routes emitted upon acceptor excitation. The PIE photon burst \
asymmetry is defined as \!\(\*FormBox[RowBox[{SubscriptBox[\"\[Alpha]\", \
\"PIE\"], \"\[LongEqual]\", RowBox[{\"\[LeftAngleBracket]\", \
SubscriptBox[StyleBox[\"t\", \"TI\"], \"Dex\"], \"\[RightAngleBracket]\"}], \
\"-\", RowBox[{\"\[LeftAngleBracket]\", SubscriptBox[StyleBox[\"t\", \"TI\"], \
\"Aex\"], \"\[RightAngleBracket]\"}]}],TraditionalForm]\), i.e. the \
difference between the mean detection times of the photons emitted upon donor \
excitation and acceptor excitation, respectively. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732617849846`*^9, 
  3.8129732618943634`*^9}},ExpressionUUID->"56dc789f-87d9-495e-ae07-\
d9a3369b501d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FUseMicrotime", "  ", "::", "usage"}], "=", 
   "\"\<Option used in FFCS. If FUseMicrotime\!\(\(TraditionalForm\` \[Rule] \
\)\)True, the microtime will be added to the macrotime in T3 mode. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973262253753*^9, 
  3.8129732623631325`*^9}},ExpressionUUID->"a48cee3a-8466-4c15-9c07-\
c4f3db738d18"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CorrelikonG12", "  ", "::", "usage"}], "=", 
   "\"\<Private symbol. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.81297326269127*^9, 
  3.8129732627850246`*^9}},ExpressionUUID->"ef4b402f-bf8d-4b00-a784-\
3a50b15122e8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CorrelikonG123", "  ", "::", "usage"}], "=", 
   "\"\<Private symbol. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.81297326311316*^9, 
  3.81297326322254*^9}},ExpressionUUID->"853f2f74-1891-4445-9340-\
180a84824a53"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CorrelikonN12", "  ", "::", "usage"}], "=", 
   "\"\<Private symbol. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732635506763`*^9, 
  3.8129732636444297`*^9}},ExpressionUUID->"fe11a467-7e84-4e14-ae5c-\
01161317eb4c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CorrelikonTauBins", "  ", "::", "usage"}], "=", 
   "\"\<Private symbol. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732639881926`*^9, 
  3.8129732640975723`*^9}},ExpressionUUID->"8c29b4c1-381e-4ff9-824e-\
7d6a124b3b3a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CorrelikonTauBins1", "  ", "::", "usage"}], "=", 
   "\"\<Private symbol. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732644413347`*^9, 
  3.8129732645507135`*^9}},ExpressionUUID->"25a4c101-6ff6-4eb8-98f8-\
6e0752866ab2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CorrelikonTauBins2", "  ", "::", "usage"}], "=", 
   "\"\<Private symbol. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973264894476*^9, 
  3.8129732650038548`*^9}},ExpressionUUID->"e1dcd959-660b-4749-b2cd-\
dbfd99fcdaa0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CorrelikonTimeUnitSec", "  ", "::", "usage"}], "=", 
   "\"\<Private symbol. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973265347619*^9, 
  3.812973265441373*^9}},ExpressionUUID->"b765ae1f-57ec-4ed9-9aae-\
9336a85f43e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CorrelikonTmeasure", "  ", "::", "usage"}], "=", 
   "\"\<Private symbol. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732658320155`*^9, 
  3.81297326592577*^9}},ExpressionUUID->"8c3e7bd2-5468-43c5-b5ee-\
fa5d920a9d63"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FFCS", "  ", "::", "usage"}], "=", 
   "\"\<FFCS[lagtimes,route1,route2]\n \
FFCS[lagtimes,route1,route2,tstart,tstop]\n \
FFCS[lagtimes,route1,route2,\!\(TraditionalForm\`{\[Null]\)c11,c12\!\(\(\
TraditionalForm\`}\)\),\!\(TraditionalForm\`{\[Null]\)c21,c22\!\(\(\
TraditionalForm\`}\)\)]  \
(\!\(TraditionalForm\`{\[Null]\)c11,c12\!\(\(TraditionalForm\`}\)\) and \
\!\(TraditionalForm\`{\[Null]\)c21,c22\!\(\(TraditionalForm\`}\)\) are \
lifetime channel constraints)\n \
FFCS[lagtimes,route1,route2,\!\(TraditionalForm\`{\[Null]\)c11,c12\!\(\(\
TraditionalForm\`}\)\),\!\(TraditionalForm\`{\[Null]\)c21,c22\!\(\(\
TraditionalForm\`}\)\),tstart,tstop]\n \nFFCS calculates and displays FCS \
curves. The algorithm described by Laurence et al. \
(https://doi.org/10.1364/OL.31.000829) is used for calculating the FCS \
curves.\n lagtimes can be provided as\n 1. a list of lag times, e.g., FFCS[\!\
\(TraditionalForm\`{\[Null]\)t1,t2,t3,...\!\(\(TraditionalForm\`}\)\), ...]. \
lagtimes are given in seconds.\n 2. three numbers, indicating the decimal \
logarithms of the shortest and the longest lag times and the step size. For \
example, in FFCS[\[Hyphen]6,1,0.1,route1,route2], the correlation is \
calculated for lag times given by \
Table[(10\!\(TraditionalForm\`\*SuperscriptBox[\(\[Null]\), \
\(\[Wedge]\)]\)logt),\!\(TraditionalForm\`{\[Null]\)logt,\[Hyphen]6,0,0.1\!\(\
\(TraditionalForm\`}\)\)]\n.\n Detection routes (labeled as \\\"route1\\\",\\\
\"route2\\\",\\\"r11\\\",\\\"r21\\\", etc.) are given as lists of ones and \
zeros.\n For example \n \
FFCS[lagtimes,\!\(TraditionalForm\`{\[Null]\)1,0,1,0\!\(\(TraditionalForm\`}\)\
\),\!\(TraditionalForm\`{\[Null]\)0,1,0,1\!\(\(TraditionalForm\`}\)\)] \n \
correlates photons from detectors 1 and 3 with photons from detectors 2 and \
4.\n If the parameters tstart and tstop are used, the correlation is \
calculated only from the photons detected in the time interval (tstart, \
tstop). tstart, tstop are given in seconds.\n\n\nSeveral FCS curves can be \
calculated in parallel on multi\[Hyphen]core CPUs using the following \
functions.\n\n Multiple correlations between different detection route pairs \
\!\(TraditionalForm\`{\[Null]\)ri1,ri2\!\(\(TraditionalForm\`}\)\), i\
\[LongEqual]1,2,3,...\n FFCS[lagtimes, \!\(TraditionalForm\`{\[Null]\) \
\!\(TraditionalForm\`{\[Null]\)r11,r12\!\(\(TraditionalForm\`}\)\), \
\!\(TraditionalForm\`{\[Null]\)r21,r22\!\(\(TraditionalForm\`}\)\), \
...\!\(\(TraditionalForm\`}\)\)]\n FFCS[lagtimes, \!\(TraditionalForm\`{\
\[Null]\) \!\(TraditionalForm\`{\[Null]\)r11,r12\!\(\(TraditionalForm\`}\)\), \
\!\(TraditionalForm\`{\[Null]\)r21,r22\!\(\(TraditionalForm\`}\)\), \
...\!\(\(TraditionalForm\`}\)\), tstart, tstop]\n FFCS[lagtimes, \
\!\(TraditionalForm\`{\[Null]\) \
\!\(TraditionalForm\`{\[Null]\)r11,r12\!\(\(TraditionalForm\`}\)\), \
\!\(TraditionalForm\`{\[Null]\)r21,r22\!\(\(TraditionalForm\`}\)\), \
...\!\(\(TraditionalForm\`}\)\), \
\!\(TraditionalForm\`{\[Null]\)c11,c12\!\(\(TraditionalForm\`}\)\), \
\!\(TraditionalForm\`{\[Null]\)c21,c22\!\(\(TraditionalForm\`}\)\)]\n \
FFCS[lagtimes, \!\(TraditionalForm\`{\[Null]\) \
\!\(TraditionalForm\`{\[Null]\)r11,r12\!\(\(TraditionalForm\`}\)\), \
\!\(TraditionalForm\`{\[Null]\)r21,r22\!\(\(TraditionalForm\`}\)\), \
...\!\(\(TraditionalForm\`}\)\), \
\!\(TraditionalForm\`{\[Null]\)c11,c12\!\(\(TraditionalForm\`}\)\), \
\!\(TraditionalForm\`{\[Null]\)c21,c22\!\(\(TraditionalForm\`}\)\), tstart, \
tstop]\n\n Multiple correlations between different detection route and \
lifetime channel constraint pairs \
pi\[LongEqual]\!\(TraditionalForm\`{{\[Null]\)ri1,\!\(TraditionalForm\`{\
\[Null]\)ci1a,ci1b\!\(TraditionalForm\`\(\(}\)\(}\)\)\),\!\(TraditionalForm\`{\
\[Null]\)ri2,\!\(TraditionalForm\`{\[Null]\)ci2a,ci2b\!\(TraditionalForm\`\(\(\
\(}\)\(}\)\)\(}\)\)\), i\[LongEqual]1,2,3,..\n FFCS[lagtimes, \
\!\(TraditionalForm\`{\[Null]\) p1, p2, ...\!\(\(TraditionalForm\`}\)\) ]\n \
FFCS[lagtimes, \!\(TraditionalForm\`{\[Null]\) p1, p2, \
...\!\(\(TraditionalForm\`}\)\), tstart, tstop]\n\nOptions:\n\
\!\(\(TraditionalForm\`\\\ \\\ \)\)FPhotonData\!\(\(TraditionalForm\` \[Rule] \
\)\)All (default) or FPhotonData\!\(\(TraditionalForm\` \[Rule] \
\)\)FSelectedBursts\n\!\(\(TraditionalForm\`\\\ \\\ \
\)\)FOutput\!\(\(TraditionalForm\` \[Rule] \)\)FData (default) or FOutput\!\(\
\(TraditionalForm\` \[Rule] \)\)FGraph or FOutput\!\(\(TraditionalForm\` \
\[Rule] \)\)FRawData\n\!\(\(TraditionalForm\`\\\ \\\ \
\)\)FUseMicrotime\!\(\(TraditionalForm\` \[Rule] \)\)False (default) If \
FUseMicrotime\!\(\(TraditionalForm\` \[Rule] \)\)True, the microtime is added \
to the macrotime for each T3 record, otherwise only the macrotime is used.\n\
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732663476605`*^9, 3.812973266472666*^9}, {
  3.8583263786872787`*^9, 
  3.858326396352435*^9}},ExpressionUUID->"b2dd57f1-7204-447a-a729-\
05338730b420"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"FFCSModel", "  ", "::", "usage"}], "=", 
    "\"\<FFCSModel[logtaus:\!\(TraditionalForm\`{_\)?NumberQ..\!\(\(\
TraditionalForm\`}\)\),diffs:\!\(TraditionalForm\`{_\)?NumberQ..\!\(\(\
TraditionalForm\`}\)\),velocities:\!\(TraditionalForm\`{\[Null]\)vy\!\(\
TraditionalForm\`_\)?NumberQ,vz\!\(TraditionalForm\`_\)?NumberQ\!\(\(\
TraditionalForm\`}\)\),w0\!\(TraditionalForm\`_\)?NumberQ,R0\!\(\
TraditionalForm\`_\)?NumberQ,nrefractive\!\(TraditionalForm\`_\)?NumberQ,opts:\
OptionsPattern[]] \>\""}], ";"}], "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.812973267300821*^9, 3.812973267394574*^9}, {
  3.8655004156707525`*^9, 
  3.865500433362953*^9}},ExpressionUUID->"f5c668fe-1fcb-44c9-9c6e-\
fd5df970cbca"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FBunch", "  ", "::", "usage"}], "=", 
   "\"\<Legacy code. Use of FBunch is discouraged. Use FnsFCS instead. \
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732677539625`*^9, 
  3.8129732678477173`*^9}},ExpressionUUID->"84af59c4-20f3-44f5-849a-\
1c4acf66e468"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FFCSW", "  ", "::", "usage"}], "=", 
   "\"\<FFCSW[log10tmin, log10tmax, \!\(TraditionalForm\`{\[Null]\)route1, \
channelweights1\!\(\(TraditionalForm\`}\)\), \
\!\(TraditionalForm\`{\[Null]\)route2, \
channelweights2\!\(\(TraditionalForm\`}\)\)]\n FFCSW[log10tmin, log10tmax, \!\
\(TraditionalForm\`{\[Null]\)route1, \
channelweights1\!\(\(TraditionalForm\`}\)\), \
\!\(TraditionalForm\`{\[Null]\)route2, \
channelweights2\!\(\(TraditionalForm\`}\)\), tstart, tstop]\n \
FFCSW[log10tmin, log10tmax, route1, route2] (applies weight 1 to all lifetime \
channels)\n FFCSW[log10tmin, log10tmax, route1, route2, tstart, tstop] \
(applies weight 1 to all lifetime channels)\n\nFFCSW correlates the \
macrotimes between photons of route1 with those of route2, with each photon \
weighted according to its microtime (or \\\"lifetime\\\") channel and/or \
detection route. The weights for the microtime channels are given as lists in \
channelweights1 and channelweights2, respectively. FFCSW uses the algorithm \
described by Wahl et al. (https://doi.org/10.1364/OE.11.003583). The Fretica \
implementation of the algorithm uses parallel computation on multicore CPUs.\n\
\!\(\(TraditionalForm\`\\\ \\\ \)\)FCSW can be used for Fluorescence Lifetime \
Correlation Spectroscopy (FLCS) (see for example: \
https://doi.org/10.1016/j.ymeth.2018.02.009).\n\nIf no weights are given, \
weight 1 is applied throughout. In this case, FFCSW is an alternative to FFCS \
with the advantage of parallel execution on multi\[Hyphen]core CPUs.\n \n \
Detection routes route1 and route2 are given as lists of ones and zeros.\n \
For example, with \
route1\[LongEqual]\!\(TraditionalForm\`{\[Null]\)1,0,0,0\!\(\(TraditionalForm\
\`}\)\) and \
route2\[LongEqual]\!\(TraditionalForm\`{\[Null]\)0,1,0,0\!\(\(TraditionalForm\
\`}\)\), photons from detector 1 are correlated with photons from detector 2.\
\n With the parameters tstart and tstop, the correlation is calculated only \
from the photons detected in the time interval (tstart,tstop). tstart, tstop \
are given in seconds.\n channelweights1 and channelweights2 can be either \
lists of real numbers. Or, more general, both of the form: \
{r1\[Rule]weights1, r2->weights2, ...}. This allows to give diferent weights \
(weights1, weights2, ...) to different detection routes (r1, r2,...). For \
example one can write FFCSW[log10tmin, log10tmax, \!\(TraditionalForm\`{\
\[Null]\) {1,0,1,0}, { 1\[Rule]{...}, \
3\[Rule]{...}\!\(TraditionalForm\`\(\(\\\ \)\(}\)\)\), {{0,1,0,1}, { \
2\[Rule]{...}, 4\[Rule]{...}\!\(TraditionalForm\`\(\(\(\\\ \)\(}\)\)\(\\\ \
\)\(}\)\)\)]   \n\nOptions:\n\!\(\(TraditionalForm\`\\\ \\\ \)\)FPhotonData\!\
\(\(TraditionalForm\` \[Rule] \)\)All (default) or \
FPhotonData\!\(\(TraditionalForm\` \[Rule] \)\)FSelectedBursts\n\
\!\(\(TraditionalForm\`\\\ \\\ \)\)FOutput\!\(\(TraditionalForm\` \[Rule] \
\)\)FData (default) or FOutput\!\(\(TraditionalForm\` \[Rule] \)\)FGraph or \
FOutput\!\(\(TraditionalForm\` \[Rule] \)\)FRawData\n\
\!\(\(TraditionalForm\`\\\ \\\ \
\)\)FNumberOfStepsInCascade\!\(\(TraditionalForm\` \[Rule] \)\)10 (default) \
or any other integer value \!\(\(TraditionalForm\` > \)\)0\n\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129732682071047`*^9, 3.8129732683164854`*^9}, {
   3.858326415270549*^9, 3.8583264165799584`*^9}, {3.865521273738621*^9, 
   3.8655212772755547`*^9}, {3.8901968350577536`*^9, 3.890197005676861*^9}, 
   3.890197089193676*^9, {3.890197119660638*^9, 3.890197260876526*^9}, {
   3.8901973082192774`*^9, 3.8901977069985485`*^9}, {3.890197984968983*^9, 
   3.8901979898724027`*^9}, {3.8901981631517806`*^9, 
   3.890198175932864*^9}},ExpressionUUID->"b263856d-fd19-44fd-b458-\
8706a6560ae9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FnsFCS", "  ", "::", "usage"}], "=", 
   "\"\<FnsFCS[routelist1, routelist2, \!\(TraditionalForm\`{\[Null]\)taumin, \
taumax, dtau\!\(\(TraditionalForm\`}\)\)]  or \n FnsFCS[routelist1, \
routelist2 , \!\(TraditionalForm\`{\[Null]\)taumin, taumax, \
dtau\!\(\(TraditionalForm\`}\)\),tstart,tstop] \ncalculate an FCS curve for a \
linear range of lag times spanning from taumin to taumax in steps of dtau. \
Lag times are given in microseconds. \ntstart and tstop (in seconds) limits \
the calculation to the photons detected in the corresponding time interval.  \
If a list of detection\[Hyphen]route pairs is provided, i.e. \
\!\(\*FormBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", RowBox[{StyleBox[\"r\", \
\"TI\"], \"11\", \",\", StyleBox[\"r\", \"TI\"], \"12\"}], \"}\"}], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"r\", \"TI\"], \"21\", \",\", \
StyleBox[\"r\", \"TI\"], \"22\"}], \"}\"}], \",\", \"...\"}], \
\"}\"}],TraditionalForm]\), the corresponding correlations are calculated in \
parallel.\n Options:\n FOutput\!\(\(TraditionalForm\` \[Rule] \)\)FData \
(default) or FOutput\!\(\(TraditionalForm\` \[Rule] \)\)FRawData\n\
\!\(\(TraditionalForm\`\\\ \\\ \)\)FPhotonData\!\(\(TraditionalForm\` \[Rule] \
\)\)All (default) or FPhotonData\!\(\(TraditionalForm\` \[Rule] \
\)\)FSelectedBursts\n\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732687696295`*^9, 3.8129732688790092`*^9}, {
  3.8583265103534994`*^9, 
  3.858326525248814*^9}},ExpressionUUID->"4e8d1531-917c-4b3c-ad68-\
60f08527422e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FnsFCSSecondOrder", "  ", "::", "usage"}], "=", 
   "\"\<FnsFCSSecondOrder[routelist1, routelist2, routelist3, \
\!\(TraditionalForm\`{\[Null]\)tau1min, tau1max, \
dtau1\!\(\(TraditionalForm\`}\)\), \!\(TraditionalForm\`{\[Null]\)tau2min, \
tau2max, dtau2\!\(\(TraditionalForm\`}\)\)]. Lag times are given in \
microseconds.\n or \n FnsFCSSecondOrder[routelist1, routelist2, routelist3, \
\!\(TraditionalForm\`{\[Null]\)tau1min, tau1max, \
dtau1\!\(\(TraditionalForm\`}\)\), \!\(TraditionalForm\`{\[Null]\)tau2min, \
tau2max, dtau2\!\(\(TraditionalForm\`}\)\),tstart,tstop], with tstart and \
tstop in seconds.\n \n If a list of detection\[Hyphen]route pairs is \
provided, i.e.\!\(\*FormBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{StyleBox[\"r\", \"TI\"], \"11\", \",\", StyleBox[\"r\", \"TI\"], \"12\
\"}], \"}\"}], \",\", RowBox[{\"{\", RowBox[{StyleBox[\"r\", \"TI\"], \"21\", \
\",\", StyleBox[\"r\", \"TI\"], \"22\"}], \"}\"}], \",\", \"...\"}], \
\"}\"}],TraditionalForm]\), the corresponding correlations are calculated in \
parallel. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732692383986`*^9, 
  3.812973269347779*^9}},ExpressionUUID->"64bc11f3-96af-46d7-a9c7-\
af9709109cff"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"F2DFLCSLifeTimeChannelMap", "  ", "::", "usage"}], "=", 
   "\"\<F2DFLCSLifeTimeChannelMap[tstart\!\(TraditionalForm\`_\)?NumericQ,\
tstop\!\(TraditionalForm\`_\)?NumericQ,tau:\!\(TraditionalForm\`{_\)?NumericQ.\
.\!\(\(TraditionalForm\`}\)\),route1:FRouteList,route2:FRouteList,\
channelranges:\!\(TraditionalForm\`{{_\)?FValidChannelQ \
,\!\(TraditionalForm\`_\)?FValidChannelQ\!\(\(TraditionalForm\`}\)\)..\!\(\(\
TraditionalForm\`}\)\)] \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732696915407`*^9, 
  3.812973269785295*^9}},ExpressionUUID->"2a34f9ed-e876-4665-89fa-\
cf248b76009c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"F2fFCSFit", "  ", "::", "usage"}], "=", 
   "\"\<F2fFCSFit[ fcsdata, \!\(\*FormBox[RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"D\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"D\", \"TI\"], \"2\"], \"...\"}], \"}\"}], \",\", \
RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"x\", \
\"TI\"]], \",\", SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"y\", \
\"TI\"]], \",\", SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"z\", \
\"TI\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"k\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"k\", \"TI\"], \"2\"], \",\", \"...\"}], \"}\"}], \
\",\", SubscriptBox[StyleBox[\"w\", \"TI\"], \"0\"], \",\", \
SubscriptBox[StyleBox[\"R\", \"TI\"], \"0\"], \",\", StyleBox[\"n\", \
\"TI\"]}],TraditionalForm]\),guess] \nfits the four 2fFCS curves in fcsdata \
with the model for a mixture of particles with diffusion coefficients \
\!\(\*FormBox[RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"D\", \"TI\"], \
\"1\"], \",\", SubscriptBox[StyleBox[\"D\", \"TI\"], \"2\"], \"...\"}], \
\"}\"}],TraditionalForm]\) (given in \
\!\(TraditionalForm\`\[Mu]\)m\!\(TraditionalForm\`\*SuperscriptBox[\(\[Null]\)\
, \(2\)]\)/ms) in a fluid with flow velocity \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"x\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"y\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"z\", \"TI\"]]}], \
\"}\"}],TraditionalForm]\) in \!\(TraditionalForm\`\[Mu]\)m/ms. \nThe inter\
\[Hyphen]focus vector is expected to be aligned along the x\[Hyphen]axis. \
\!\(\*FormBox[RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"k\", \"TI\"], \
\"1\"], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], \"2\"], \",\", \
\"...\"}], \"}\"}],TraditionalForm]\) are rates (in units of 1/ms) for \
describing additional correlation components (e.g. triplet blinking). \nThe \
parameters \!\(\*FormBox[SubscriptBox[StyleBox[\"w\", \"TI\"], \
\"0\"],TraditionalForm]\) and \!\(\*FormBox[SubscriptBox[StyleBox[\"R\", \"TI\
\"], \"0\"],TraditionalForm]\) (in units of \!\(TraditionalForm\`\[Mu]\)m) \
are related but not identical to the waist and Rayleigh length of the laser \
foci. \!\(\*FormBox[StyleBox[\"n\", \"TI\"],TraditionalForm]\) is the \
refractive index of the solution. \nAll parameters must either be given as \
numbers or as symbolic expressions that evaluate to numbers when the fit \
parameters \!\(\*FormBox[RowBox[{SubscriptBox[StyleBox[\"p\", \"TI\"], \
\"1\"], \",\", SubscriptBox[StyleBox[\"p\", \"TI\"], \"2\"], \",\", \
\"...\"}],TraditionalForm]\) are replaced by numbers. Guess values for these \
parameters are provided in the form \
guess\[LongEqual]\!\(\*FormBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"p\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"g\", \"TI\"], \"1\"]}], \"}\"}], \",\", \
RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"p\", \"TI\"], \"2\"], \",\", \
SubscriptBox[StyleBox[\"g\", \"TI\"], \"2\"]}], \"}\"}], \",\", \"...\"}], \
\"}\"}],TraditionalForm]\), where \!\(\*FormBox[SubscriptBox[StyleBox[\"g\", \
\"TI\"], StyleBox[\"i\", \"TI\"]],TraditionalForm]\) are initial guess values \
used for the least\[Hyphen]square minimization.\nThe function returns a list \
with the minimal \!\(TraditionalForm\`\*SuperscriptBox[\(\[Chi]\), \(2\)]\) \
found, the best\[Hyphen]fit parameters, and a graph of the fcs data and the \
fits. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973270160309*^9, 
  3.8129732702696867`*^9}},ExpressionUUID->"4c371a5d-4de7-4f8b-9d00-\
5b573a514191"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"F2fFCSfocidistance", "  ", "::", "usage"}], "=", 
   "\"\<Option of F2fFCSGetModel and F2fFCSFit. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732706134496`*^9, 
  3.812973270707203*^9}},ExpressionUUID->"c9eb7797-dd18-45c9-984c-\
2bc21dc092db"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"F2fFCSFromTTTR", "  ", "::", "usage"}], "=", 
   "\"\<F2fFCSFromTTTR[logtaumin, logtaumax, dlogtau, route1, route2, \
channelrange1, channelrange2, tstart, tend]\nor \nF2fFCSFromTTTR[logtaumin, \
logtaumax, dlogtau, route1, route2, channelrange1, channelrange2] calculates \
and returns the four FCS curves derived from the currently open 2fFCS \
meaurement in a format suitable for F2fFCSFit, F2fFCSGetModel, and \
F2fFCSGetLinearCoefficients. route1 and route2 are route lists defining the \
parallel and orthogonal detection routes. channelrange1 and channelrange2 are \
the lifetime channel ranges used for PIE. \n\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732710665913`*^9, 
  3.812973271160345*^9}},ExpressionUUID->"ed3ebb54-9089-4e8a-942c-\
f01043d7f3c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"F2fFCSGetLinearCoefficients", "  ", "::", "usage"}], "=", 
   "\"\<F2fFCSGetLinearCoefficients[ fcsdata, \
\!\(\*FormBox[RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"D\", \
\"TI\"], \"1\"], \",\", SubscriptBox[StyleBox[\"D\", \"TI\"], \"2\"], \
\"...\"}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"x\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"y\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"z\", \"TI\"]]}], \"}\"}], \
\",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"k\", \"TI\"], \"1\"], \
\",\", SubscriptBox[StyleBox[\"k\", \"TI\"], \"2\"], \",\", \"...\"}], \
\"}\"}], \",\", SubscriptBox[StyleBox[\"w\", \"TI\"], \"0\"], \",\", \
SubscriptBox[StyleBox[\"R\", \"TI\"], \"0\"], \",\", StyleBox[\"n\", \
\"TI\"]}],TraditionalForm]\),guess] \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732715041075`*^9, 
  3.8129732715978613`*^9}},ExpressionUUID->"78bfa249-49ab-4f0b-9312-\
90a77f8d6da9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"F2fFCSGetModel", "  ", "::", "usage"}], "=", 
   "\"\<F2fFCSGetModel[ fcsdata, \!\(\*FormBox[RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"D\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"D\", \"TI\"], \"2\"], \"...\"}], \"}\"}], \",\", \
RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"x\", \
\"TI\"]], \",\", SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"y\", \
\"TI\"]], \",\", SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"z\", \
\"TI\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"k\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"k\", \"TI\"], \"2\"], \",\", \"...\"}], \"}\"}], \
\",\", SubscriptBox[StyleBox[\"w\", \"TI\"], \"0\"], \",\", \
SubscriptBox[StyleBox[\"R\", \"TI\"], \"0\"], \",\", StyleBox[\"n\", \
\"TI\"]}],TraditionalForm]\),guess] evaluates the 2fFCS model for the given \
parameters for the lag times given in fcsdata. Note that the linear \
coefficients are optimized to maximize \!\(TraditionalForm\`\*SuperscriptBox[\
\(\[Chi]\), \(2\)]\). \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973271957249*^9, 
  3.8129732720666285`*^9}},ExpressionUUID->"f7585db8-d333-4c7e-b052-\
0b1c04524d27"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"F2fFCSGlobalFit", "  ", "::", "usage"}], "=", 
   "\"\<F2fFCSGlobalFit[ \!\(\*FormBox[RowBox[{\"{\", RowBox[{\"{\", \
RowBox[{SubscriptBox[\"fcsdata\", \"1\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"D\", \"TI\"], RowBox[{\"1\", \",\", \"1\"}]], \
\",\", SubscriptBox[StyleBox[\"D\", \"TI\"], RowBox[{\"1\", \",\", \"2\"}]], \
\"...\"}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"v\", \"TI\"], RowBox[{StyleBox[\"x\", \
\"TI\"], \"1\"}]], \",\", SubscriptBox[StyleBox[\"v\", \"TI\"], \
RowBox[{StyleBox[\"y\", \"TI\"], \"1\"}]], \",\", \
SubscriptBox[StyleBox[\"v\", \"TI\"], RowBox[{StyleBox[\"z\", \"TI\"], \
\"1\"}]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"k\", \"TI\"], RowBox[{\"1\", \",\", \"1\"}]], \
\",\", SubscriptBox[StyleBox[\"k\", \"TI\"], RowBox[{\"1\", \",\", \"2\"}]], \
\",\", \"...\"}], \"}\"}], \",\", SubscriptBox[StyleBox[\"w\", \"TI\"], \
RowBox[{\"0\", \",\", \"1\"}]], \",\", SubscriptBox[StyleBox[\"R\", \"TI\"], \
RowBox[{\"0\", \",\", \"1\"}]], \",\", SubscriptBox[StyleBox[\"n\", \"TI\"], \
\"1\"]}], \"}\"}]}],TraditionalForm]\), \!\(\*FormBox[RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[\"fcsdata\", \"2\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"D\", \"TI\"], RowBox[{\"2\", \",\", \"1\"}]], \
\",\", SubscriptBox[StyleBox[\"D\", \"TI\"], RowBox[{\"2\", \",\", \"2\"}]], \
\"...\"}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"v\", \"TI\"], RowBox[{StyleBox[\"x\", \
\"TI\"], \"2\"}]], \",\", SubscriptBox[StyleBox[\"v\", \"TI\"], \
RowBox[{StyleBox[\"y\", \"TI\"], \"2\"}]], \",\", \
SubscriptBox[StyleBox[\"v\", \"TI\"], RowBox[{StyleBox[\"z\", \"TI\"], \
\"2\"}]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"k\", \"TI\"], RowBox[{\"2\", \",\", \"1\"}]], \
\",\", SubscriptBox[StyleBox[\"k\", \"TI\"], RowBox[{\"2\", \",\", \"2\"}]], \
\",\", \"...\"}], \"}\"}], \",\", SubscriptBox[StyleBox[\"w\", \"TI\"], \
RowBox[{\"0\", \",\", \"2\"}]], \",\", SubscriptBox[StyleBox[\"R\", \"TI\"], \
RowBox[{\"0\", \",\", \"2\"}]], \",\", SubscriptBox[StyleBox[\"n\", \"TI\"], \
\"2\"]}], \"}\"}], \"...\", \"}\", \",\", \"guess\", \"}\"}],TraditionalForm]\
\). Give shared parameters the same name in each block, and \
non\[Hyphen]shared parameters individual names. For example, if \
\!\(\*FormBox[SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"x\", \
\"TI\"]],TraditionalForm]\) is supposed to be the same for all data sets, \
then replace \!\(\*FormBox[RowBox[{SubscriptBox[StyleBox[\"v\", \"TI\"], \
RowBox[{StyleBox[\"x\", \"TI\"], \"1\"}]], \",\", \
SubscriptBox[StyleBox[\"v\", \"TI\"], RowBox[{StyleBox[\"x\", \"TI\"], \
\"2\"}]], \"...\"}],TraditionalForm]\) by \
\!\(\*FormBox[SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"x\", \
\"TI\"]],TraditionalForm]\) and include \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"v\", \"TI\"], StyleBox[\"x\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"v\", \"TI\"], \"guess\"]}], \
\"}\"}],TraditionalForm]\) in guess. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973272410393*^9, 
  3.8129732725197725`*^9}},ExpressionUUID->"135edb3d-459f-4662-8d16-\
10cf10b3f6cc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"F2fFCSmagnification", "  ", "::", "usage"}], "=", 
   "\"\<Option of F2fFCSGetModel and F2fFCSFit. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732728635373`*^9, 
  3.812973272957291*^9}},ExpressionUUID->"8dc4a523-b80f-47fa-b0cb-\
1a5631ad11a0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"F2fFCSpinhole", "  ", "::", "usage"}], "=", 
   "\"\<Option of F2fFCSGetModel and F2fFCSFit. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973273269804*^9, 
  3.8129732733635573`*^9}},ExpressionUUID->"74732cbb-ed15-4a6d-9ec3-\
5807f712b283"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"F2fFCSSettings", "  ", "::", "usage"}], "=", 
   "\"\<F2fFCSSettings[\!\(TraditionalForm\`{\[Lambda]\)ex,\!\(\
TraditionalForm\`\[Lambda]\)em,focidistance,pinhole,magnification\!\(\(\
TraditionalForm\`}\)\)] sets the parameters for 2fFCS. The excitation and \
emission wavelengths, the distance between the foci, and the pinhole diameter \
must be given in units of micrometers. magnification is the magnification of \
the microscope objective. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732737229457`*^9, 
  3.8129732738166995`*^9}},ExpressionUUID->"b689139e-523a-43e0-8491-\
680b2a00c178"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"F2fFCSLambdaem", "  ", "::", "usage"}], "=", 
   "\"\<Option of F2fFCSGetModel and F2fFCSFit. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973274160463*^9, 
  3.8129732742542152`*^9}},ExpressionUUID->"28fd0e94-6b66-4fab-82f2-\
e0556b5d949d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"F2fFCSLambdaex", "  ", "::", "usage"}], "=", 
   "\"\<Option of F2fFCSGetModel and F2fFCSFit. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732745979776`*^9, 
  3.8129732746917324`*^9}},ExpressionUUID->"b1d5dcbb-b5b6-4acb-9736-\
7f867ee27073"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"F2focusFCSChiSqr", "  ", "::", "usage"}], "=", 
   "\"\<F2focusFCSChiSqr[diffs:\!\(TraditionalForm\`{_\)?FRealNumberQ..\!\(\(\
TraditionalForm\`}\)\),kTs:\!\(TraditionalForm\`{_\)?FRealNumberQ..\!\(\(\
TraditionalForm\`}\)\),w0\!\(TraditionalForm\`_\)?FRealNumberQ,R0\!\(\
TraditionalForm\`_\)?FRealNumberQ,Diff\!\(TraditionalForm\`_\)?FRealNumberQ,\!\
\(TraditionalForm\`{\[Null]\)vx\!\(TraditionalForm\`_\)?FRealNumberQ,vy\!\(\
TraditionalForm\`_\)?FRealNumberQ,vz\!\(TraditionalForm\`_\)?FRealNumberQ\!\(\
\(TraditionalForm\`}\)\)] \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973275035495*^9, 
  3.812973275144873*^9}},ExpressionUUID->"451454b6-e4c0-4fe5-b28f-\
4f73f7626e6e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTimeCorrelate", "  ", "::", "usage"}], "=", 
   "\"\<FTimeCorrelate[lagtimes:\!\(TraditionalForm\`{_\)?NumberQ..\!\(\(\
TraditionalForm\`}\)\),t1:\!\(TraditionalForm\`{_\)?NumberQ..\!\(\(\
TraditionalForm\`}\)\),t2:\!\(TraditionalForm\`{_\)?NumberQ..\!\(\(\
TraditionalForm\`}\)\)] correlates arbitrary time events. Lag times are given \
in a list. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973275488636*^9, 
  3.812973275598016*^9}},ExpressionUUID->"becfea16-2b4f-40ef-8a19-\
99d527a5818e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FNumberOfStepsInCascade", "  ", "::", "usage"}], "=", 
   "\"\<FNumberOfStepsInCascade is an option of FFCSW. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129732759417777`*^9, 
  3.8129732760355315`*^9}},ExpressionUUID->"1e2fbfa8-ef6d-4aff-86aa-\
89f2e690cc2d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FCorrelateBinnedData", "  ", "::", "usage"}], "=", 
   "\"\<FCorrelateBinnedData[dat1\!\(TraditionalForm\`_\)List,dat2\!\(\
TraditionalForm\`_\)List,n\!\(TraditionalForm\`_\)Integer]\n \
\!\(\(TraditionalForm\`\\\ \\\ \)\)dat1 and dat2 must be of equal lengths.\n \
\!\(\(TraditionalForm\`\\\ \\\ \)\)The first n correlation values are \
returned. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732763792953`*^9, 
  3.812973276488675*^9}},ExpressionUUID->"648bb260-4ea7-4aa9-9171-\
e29dd3c351a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FRecurrenceHisto", "  ", "::", "usage"}], "=", 
   "\"\<FRecurrenceHisto[bl,\!\(TraditionalForm\`{\[Null]\)E1,E2\!\(\(\
TraditionalForm\`}\)\),\!\(TraditionalForm\`{\[Null]\)t1,t2\!\(\(\
TraditionalForm\`}\)\),\!\(TraditionalForm\`{\[Null]\)Emin,Emax,dE\!\(\(\
TraditionalForm\`}\)\),opts] returns the recurrence histogram generated from \
the photon burst list bl using the initial transfer efficiency range \
\!\(TraditionalForm\`{\[Null]\)E1,E2\!\(\(TraditionalForm\`}\)\) and the \
recurrence time interval \
\!\(TraditionalForm\`{\[Null]\)t1,t2\!\(\(TraditionalForm\`}\)\). The \
histogram categories to be used are given by \
\!\(TraditionalForm\`{\[Null]\)Emin,Emax,dE\!\(\(TraditionalForm\`}\)\).\n\
Options:\n\!\(\(TraditionalForm\`\\\ \\\ \)\)FOutput\!\(\(TraditionalForm\` \
\[Rule] \)\)FGraph (default)\n\!\(\(TraditionalForm\`\\\ \\\ \
\)\)FOutput\!\(\(TraditionalForm\` \[Rule] \)\)FData\n\!\(\(TraditionalForm\`\
\\\ \\\ \)\)All options of Histogram \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973276848066*^9, 
  3.8129732769418206`*^9}},ExpressionUUID->"09986239-2fd1-4fd3-a009-\
4e962768310f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FRecurrenceHisto2D", "  ", "::", "usage"}], "=", 
   "\"\<FRecurrenceHisto2D[bl, \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"E\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"E\", \"TI\"], \"2\"]}], \"}\"}],TraditionalForm]\), \
\!\(\*FormBox[RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], \
\"1\"], \",\", SubscriptBox[StyleBox[\"t\", \"TI\"], \"2\"]}], \
\"}\"}],TraditionalForm]\), \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"E\", \"TI\"], \"min\"], \",\", \
SubscriptBox[StyleBox[\"E\", \"TI\"], \"max\"], \",\", StyleBox[\"d\", \
\"TI\"], StyleBox[\"E\", \"TI\"]}], \"}\"}],TraditionalForm]\), opts] returns \
the 2D recurrence histogram generated from the photon burst list bl using the \
initial transfer efficiency range \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"E\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"E\", \"TI\"], \"2\"]}], \"}\"}],TraditionalForm]\) \
and the recurrence time interval \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"t\", \"TI\"], \"2\"]}], \"}\"}],TraditionalForm]\).\n\
The histogram categories to be used are given by\!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"E\", \"TI\"], \"min\"], \",\", \
SubscriptBox[StyleBox[\"E\", \"TI\"], \"max\"], \",\", StyleBox[\"d\", \
\"TI\"], StyleBox[\"E\", \"TI\"]}], \"}\"}],TraditionalForm]\).\nOptions:\n\!\
\(\(TraditionalForm\`\\\ \\\ \)\)All options of Histo2D \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129732773012094`*^9, 
  3.812973277410589*^9}},ExpressionUUID->"f023bf28-3a59-4cce-b124-\
b26df530e373"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FRecurrenceHistoN", "  ", "::", "usage"}], "=", 
   "\"\<FRecurrenceHistoN[bl, \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"E\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"E\", \"TI\"], \"2\"]}], \"}\"}],TraditionalForm]\), \
\!\(\*FormBox[RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], \
\"1\"], \",\", SubscriptBox[StyleBox[\"t\", \"TI\"], \"2\"]}], \
\"}\"}],TraditionalForm]\), \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"E\", \"TI\"], \"min\"], \",\", \
SubscriptBox[StyleBox[\"E\", \"TI\"], \"max\"], \",\", StyleBox[\"d\", \
\"TI\"], StyleBox[\"E\", \"TI\"]}], \"}\"}],TraditionalForm]\), opts] returns \
the normalized recurrence histogram generated from the photon burst list bl \
using the initial transfer efficiency range \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"E\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"E\", \"TI\"], \"2\"]}], \"}\"}],TraditionalForm]\) \
and the recurrence time interval \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"t\", \"TI\"], \"2\"]}], \"}\"}],TraditionalForm]\).\n\
The histogram categories to be used are given by\!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"E\", \"TI\"], \"min\"], \",\", \
SubscriptBox[StyleBox[\"E\", \"TI\"], \"max\"], \",\", StyleBox[\"d\", \
\"TI\"], StyleBox[\"E\", \"TI\"]}], \"}\"}],TraditionalForm]\).\nIn addition \
to the recurrence histogram, the full FRET efficiency histogram is shown. \
Both are normalized to their maxima. The initial E\[Hyphen]range and the \
recurrence interval are indicated.\n\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732777543507`*^9, 
  3.81297327786373*^9}},ExpressionUUID->"1ffa8208-1ba3-406d-a7be-\
d7e510ec1c16"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FRecurrenceList", "  ", "::", "usage"}], "=", 
   "\"\<FRecurrenceList[burstlist\!\(TraditionalForm\`_\)List,\!\(\
TraditionalForm\`{\[Null]\)E1\!\(TraditionalForm\`_\)?NumberQ,E2\!\(\
TraditionalForm\`_\)?NumberQ\!\(\(TraditionalForm\`}\)\),\!\(TraditionalForm\`\
{\[Null]\)t1\!\(TraditionalForm\`_\)?NumberQ,t2\!\(TraditionalForm\`_\)?\
NumberQ\!\(\(TraditionalForm\`}\)\),opt\!\(TraditionalForm\`___\)] \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129732782231183`*^9, 
  3.8129732783168716`*^9}},ExpressionUUID->"ad38aac8-2a4a-4afe-92d4-\
871a6965c680"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSameMoleculeProbability", "  ", "::", "usage"}], "=", 
   "\"\<FSameMoleculeProbability[\!\(TraditionalForm\`{\[Null]\)tmin,tmax\!\(\
\(TraditionalForm\`}\)\),\!\(TraditionalForm\`{\[Null]\)bursttimes1,\
bursttimes2\!\(\(TraditionalForm\`}\)\),opts] calculates \
psame(\!\(TraditionalForm\`\[Tau]\)) using the cross\[Hyphen]correlation of \
the photon burst times listed in bursttimes1 and bursttimes2.\n\
FSameMoleculeProbability[\!\(TraditionalForm\`{\[Null]\)tmin,tmax\!\(\(\
TraditionalForm\`}\)\),bursttimes\!\(\(TraditionalForm\`}\)\),opts] \
calculates psame(\!\(TraditionalForm\`\[Tau]\)) using the autocorrelation of \
the photon burst times listed in bursttimes.\n\nThe lagtimes used are \
\!\(TraditionalForm\`{\[Null]\)tmin,2 tmin,4 tmin,...,10 tmin,12 tmin,14 \
tmin,...,30 tmin, 34tmin, 38tmin...tmax\!\(\(TraditionalForm\`}\)\).\nFor a \
linear spacing of the lagtimes, use \
\!\(TraditionalForm\`{\[Null]\)tmin,tmax,dt\!\(\(TraditionalForm\`}\)\) \
instead of \!\(TraditionalForm\`{\[Null]\)tmin,tmax\!\(\(TraditionalForm\`}\)\
\).\n\n\nOptions:\n\!\(\(TraditionalForm\`\\\ \\\ \
\)\)FOutput\!\(\(TraditionalForm\` \[Rule] \)\)FGraph (default)\n\
\!\(\(TraditionalForm\`\\\ \\\ \)\)FOutput\!\(\(TraditionalForm\` \[Rule] \
\)\)FData (The output is a ListLogLinearPlot or ListPlot, depending on the \
definition of the lagtimes.)\n\!\(\(TraditionalForm\`\\\ \\\ \)\)All options \
of ListLogLinearPlot and ListPlot\n\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.81297327867626*^9, 
  3.81297327878564*^9}},ExpressionUUID->"f9f0a90d-c05d-41e7-8322-\
2bf604010f65"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetFromPiezoScan", "  ", "::", "usage"}], "=", 
   "\"\<FGetFromPiezoScan[expr] or FGetFromPiezoScan[expr, frame] evaluates \
expr for each pixel of a scan image and returns the results in an array.\n \
expr can contain the following strings: \n  \n\\\"n1\\\", \\\"n2\\\", etc.:   \
Uncorrected detector counts. \n\\\"n1\!\(TraditionalForm\`_\)corr\\\", \\\"n2\
\!\(TraditionalForm\`_\)corr\\\", etc.:   Detector counts corrected for \
background and RCM, but not for acceptor direct excitation, i.e. \
\\\"n\!\(\*FormBox[RowBox[{StyleBox[\"i\", \"TI\"], \
\"_\"}],TraditionalForm]\)corr\\\" represents the \
\!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\)th element of the \
vector \!\(\*FormBox[RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], \
StyleBox[RowBox[{\"c\", \"o\", \"r\", \"r\"}], \"TI\"]], \
\"\[LongEqual]\"}],TraditionalForm]\)RCM.\!\(\*FormBox[RowBox[{\"(\", \
RowBox[{StyleBox[\"n\", \"TI\"], \"-\", StyleBox[\"b\", \"TI\"], StyleBox[\"g\
\", \"TI\"]}], \")\"}],TraditionalForm]\). \n\
\\\"n\!\(TraditionalForm\`_\)corr\\\":   Total photon number in photon burst, \
corrected for background and RCM. \n\\\"nA\!\(TraditionalForm\`_\)raw\\\", \\\
\"nD\!\(TraditionalForm\`_\)raw\\\":   Uncorrected total acceptor and donor \
counts. \n\\\"nA\\\", \\\"nD\\\":   Background\[Hyphen] and \
RCM\[Hyphen]corrected total acceptor and total donor counts, not corrected \
for acceptor direct excitation. \n\n\\\"n1pie\\\", \\\"n2pie\\\", etc.:   \
Counts in the PIE channels. \n\\\"n1pie\!\(TraditionalForm\`_\)corr\\\", \
\\\"n2pie\!\(TraditionalForm\`_\)corr\\\", etc.:   \
Background\[Hyphen]corrected counts in the PIE channels. \n\\\"nApie_raw\\\", \
\\\"nDpie_raw\\\":   Uncorrected total acceptor and donor counts in the PIE \
channels. \n\\\"nApie\\\", \\\"nDpie\\\":   Background corrected total \
acceptor and total donor counts in the PIE channels.\n\n\\\"E\\\" , \
\\\"LogNdOverNa\\\", \\\"Root6NdOverNa\\\":   Transfer efficiency and related \
quantities corrected for background, RCM, and acceptor direct excitation \
\[Alpha]. E is calculated from (nA-\[Alpha](nA+nD))/(nA+nD-\[Alpha](nA+nD))\n\
\\\"Epie\\\":   Transfer efficiency corrected for background, RCM, and \
acceptor direct excitation \!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\). \
\!\(\*StyleBox[\"E\",FontSlant->\"Italic\"]\) is calculated from (nA- \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) \
nA\!\(TraditionalForm\`_\)pie)/(nA+nD- \
\!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\) nA\!\(TraditionalForm\`_\)pie) \
with \!\(\*StyleBox[\"d\",FontSlant->\"Italic\"]\)=\!\(\*SubscriptBox[\"\
\[Gamma]\", StyleBox[RowBox[{\"p\", \"i\", \"e\"}], \"TI\"]]\)(\[Alpha]/(1-\
\[Alpha]).\n\\\"Spie\\\" or \\\"StoichiometryRatio\\\":   Calculated from \
(nA+nD)/(nA+nD+\!\(\*FormBox[SubscriptBox[\"\[Gamma]\", \
StyleBox[RowBox[{\"p\", \"i\", \"e\"}], \
\"TI\"]],TraditionalForm]\)(nA\!\(TraditionalForm\`_\)pie)). \n\\\"Eapp\\\" \
and \\\"Sapp\\\":   cacluate apparent values from the burst counts that are \
only corrected for background, but not for RCM, \[Alpha] or \[Gamma]pie. \n\\\
\"ProximityRatio\\\":   \
\\\"nA\!\(TraditionalForm\`_\)raw\\\"/(\\\"nA\!\(TraditionalForm\`_\)raw\\\"+\
\\\"nD\!\(TraditionalForm\`_\)raw\\\"). \n\n\\\"StartTime\\\", \
\\\"EndTime\\\":   Detection times of the first and last photons in a burst, \
respectively (in seconds). \n\\\"BurstDuration\\\":   Durations \
(\\\"EndTime\\\"\[Hyphen]\\\"StartTime\\\") of the photon bursts (in \
seconds). \n\\\"tau1\\\", \\\"tau2\\\", etc.:   Mean fluorescence lifetimes. \
Needs to be calculated by calling FCalcBurstLifeTimes beforehand. \n\\\"tavgD\
\\\", \\\"tavgA\\\":   Mean arrival (detection) times of donor and acceptor \
photons, respectively. \n\\\"BurstAsymmetry\\\":   Equivalent to \
\\\"tavgA\\\"\[Hyphen]\\\"tavgD\\\". \n\\\"tavg\\\":   Mean arrival \
(detection) times. If PIE is enabled, only the photons in the main lifetime \
channels are used. \n\\\"tavg\!\(TraditionalForm\`_\)pie\\\":   Mean arrival \
(detection) times of photons in PIE lifetime channels. \n\
\\\"BurstPIEAsymmetry\\\":   Equivalent to \
\\\"tavg\\\"\[Hyphen]\\\"tavg\!\(TraditionalForm\`_\)pie\\\". \n\
\\\"DonorAnisotropy\\\":   calculates \!\(\*FormBox[RowBox[{RowBox[{\"(\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"p\", \"TI\"]], \
\"-\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"s\", \"TI\"]]}], \
\")\"}], \"/\", RowBox[{\"(\", RowBox[{RowBox[{\"(\", RowBox[{\"1\", \"-\", \
\"3\", SubscriptBox[StyleBox[\"L\", \"TI\"], \"2\"]}], \")\"}], \
SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"p\", \"TI\"]], \"+\", \
RowBox[{\"(\", RowBox[{\"2\", \"-\", \"3\", SubscriptBox[StyleBox[\"L\", \"TI\
\"], \"1\"]}], \")\"}], SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"s\", \
\"TI\"]]}], \")\"}], \")\"}],TraditionalForm]\), where \
\!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"p\", \
\"TI\"]],TraditionalForm]\) and \!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \
\"TI\"], StyleBox[\"s\", \"TI\"]],TraditionalForm]\) are background and RCM\
\[Hyphen]corrected photon counts of the parallel and orthogonal donor \
detection routes, respectively. \!\(\*FormBox[SubscriptBox[StyleBox[\"L\", \
\"TI\"], \"1\"],TraditionalForm]\) and \
\!\(\*FormBox[SubscriptBox[StyleBox[\"L\", \"TI\"], \"2\"],TraditionalForm]\) \
are correction factors set using FSetAnisotropyL1 and FSetAnisotropyL2. \n\
\\\"AcceptorAnisotropy\\\":   calculates \!\(\*FormBox[RowBox[{RowBox[{\"(\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"p\", \"TI\"]], \
\"-\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"s\", \"TI\"]]}], \
\")\"}], \"/\", RowBox[{\"(\", RowBox[{RowBox[{\"(\", RowBox[{\"1\", \"-\", \
\"3\", SubscriptBox[StyleBox[\"L\", \"TI\"], \"2\"]}], \")\"}], \
SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"p\", \"TI\"]], \"+\", \
RowBox[{\"(\", RowBox[{\"2\", \"-\", \"3\", SubscriptBox[StyleBox[\"L\", \"TI\
\"], \"1\"]}], \")\"}], SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"s\", \
\"TI\"]]}], \")\"}], \")\"}],TraditionalForm]\), where \
\!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"p\", \
\"TI\"]],TraditionalForm]\) and \!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \
\"TI\"], StyleBox[\"s\", \"TI\"]],TraditionalForm]\) are background and RCM\
\[Hyphen]corrected photon counts of the parallel and orthogonal acceptor \
detection routes, respectively. \!\(\*FormBox[SubscriptBox[StyleBox[\"L\", \
\"TI\"], \"1\"],TraditionalForm]\) and \
\!\(\*FormBox[SubscriptBox[StyleBox[\"L\", \"TI\"], \"2\"],TraditionalForm]\) \
are correction factors set using FSetAnisotropyL1 and FSetAnisotropyL2. \n\
\\\"PIEAcceptorAnisotropy\\\":   calculates \!\(\*FormBox[RowBox[{RowBox[{\"(\
\", RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"p\", \"TI\"]], \
\"-\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"s\", \"TI\"]]}], \
\")\"}], \"/\", RowBox[{\"(\", RowBox[{RowBox[{\"(\", RowBox[{\"1\", \"-\", \
\"3\", SubscriptBox[StyleBox[\"L\", \"TI\"], \"2\"]}], \")\"}], \
SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"p\", \"TI\"]], \"+\", \
RowBox[{\"(\", RowBox[{\"2\", \"-\", \"3\", SubscriptBox[StyleBox[\"L\", \"TI\
\"], \"1\"]}], \")\"}], SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"s\", \
\"TI\"]]}], \")\"}], \")\"}],TraditionalForm]\), where \
\!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"p\", \
\"TI\"]],TraditionalForm]\) and \!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \
\"TI\"], StyleBox[\"s\", \"TI\"]],TraditionalForm]\) are background and RCM\
\[Hyphen]corrected photon counts of the parallel and orthogonal acceptor \
detection routes, respectively. Only photons with lifetime channels within \
the set PIE channel ranges are used. \
\!\(\*FormBox[SubscriptBox[StyleBox[\"L\", \"TI\"], \"1\"],TraditionalForm]\) \
and \!\(\*FormBox[SubscriptBox[StyleBox[\"L\", \"TI\"], \
\"2\"],TraditionalForm]\) are correction factors set using FSetAnisotropyL1 \
and FSetAnisotropyL2. \n\
\\\"n\!\(TraditionalForm\`_\)tot\!\(TraditionalForm\`_\)asym\\\":   \
Calculated from \!\(\*FormBox[RowBox[{RowBox[{\"(\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], \"2\"], \"-\", \
SubscriptBox[StyleBox[\"n\", \"TI\"], \"1\"]}], \")\"}], \"/\", \
RowBox[{\"(\", RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], \"1\"], \"+\", \
SubscriptBox[StyleBox[\"n\", \"TI\"], \"2\"]}], \")\"}]}],TraditionalForm]\), \
where \!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \"TI\"], RowBox[{\"1\", \
\",\", \"2\"}]],TraditionalForm]\) are the total corrected number of photons \
in the first and second half of the photon burst, respectively. \n\
\\\"Selected\\\":   Value is 1 for selected photon bursts and 0 for non\
\[Hyphen]selected photon bursts. \n  \n\\\"InterPhotonTimes\\\":   List of \
interphoton times, \!\(\*FormBox[RowBox[{StyleBox[\"d\", \"TI\"], \
SubscriptBox[StyleBox[\"t\", \"TI\"], StyleBox[\"i\", \"TI\"]], \
\"\[LongEqual]\", SubscriptBox[StyleBox[\"t\", \"TI\"], StyleBox[\"i\", \
\"TI\"]], \"-\", SubscriptBox[StyleBox[\"t\", \"TI\"], \
RowBox[{StyleBox[\"i\", \"TI\"], \"-\", \"1\"}]]}],TraditionalForm]\) in \
\!\(TraditionalForm\`\[Mu]\)s. \n\\\"DetectionChannels\\\":   List of the \
photons' detection routes. \n\\\"LifeTimeChannels\\\":   List of the photons' \
lifetime channels. \nEach string in an expression will be replaced by the \
corresponding array of values for all pixels. Each string in an expression \
will be replaced by the corresponding list of values for all photon bursts. \
\!\(\*StyleBox[\"Hold\",FontSlant->\"Italic\"]\) can be used to prevent the \
expression to be evalutated by Mathematica before the strings are replaced.\n \
Internally, Fretica organizes the pixels of a scan like a list of photon \
bursts. Hence, after applying FGetFromPiezoScan, one can perform the same \
operations on the pixels as on photon bursts. \n\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973279238781*^9, 3.812973279363787*^9}, 
   3.8732617332324*^9, {3.87326188155545*^9, 
   3.873261882801255*^9}},ExpressionUUID->"3d4edad9-0758-4aa3-b6c4-\
e6d59564b30e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetScanImage", "  ", "::", "usage"}], "=", 
   "\"\<Obsolete function. Use FGetFromPiezoScan and FScanImage.\n\
FGetScanImage[] returns the image information of a piezo scan in the form \
\!\(TraditionalForm\`{\[Null]\)ScanImageX0\!\(\(TraditionalForm\` \[Rule] \
\)\)val,ScanImageY0\!\(\(TraditionalForm\` \[Rule] \
\)\)val,ScanImagePixelResol\!\(\(TraditionalForm\` \[Rule] \)\)val, \
ScanImageData\!\(\(TraditionalForm\` \[Rule] \
\)\)pixcounts\!\(\(TraditionalForm\`}\)\). \n pixcounts is a \
two\[Hyphen]dimensional pixel array in which the photon counts on the \
detectors are stored as a list. The origin of the image scan and the image \
resolution are given in units of micrometers. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732846608686`*^9, 
  3.8129732847546225`*^9}},ExpressionUUID->"a1a6f05c-bee0-41af-aeab-\
d093d2696cc4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGetScanImageCoordinatesFromTime", "  ", "::", "usage"}], "=", 
   "\"\<FGetScanImageCoordinatesFromTime[time\!\(TraditionalForm\`_\)?NumberQ]\
 returns the frame and the coordinate corresponding to time in the form \
\!\(TraditionalForm\`{\[Null]\)frame,\!\(TraditionalForm\`{\[Null]\)x,y\!\(\
TraditionalForm\`\(\(}\)\(}\)\)\). An empty list is returned if time is \
outside the available frames or outside the scan area. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973285098385*^9, 
  3.8129732852077637`*^9}},ExpressionUUID->"b88c469a-c7de-4901-8b6a-\
181becdcb58e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FScanImage", "  ", "::", "usage"}], "=", 
   "\"\<FScanImage[intensityarray,\!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], \"2\"]}], \
\"}\"}],TraditionalForm]\),opt] \nor \
FScanImage[intensityarray,\!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], \"2\"]}], \"}\"}],TraditionalForm]\),\!\
\(\*FormBox[RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], \
\"0\"], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], \"0\"], \",\", \"\
\[CapitalDelta]\", StyleBox[\"x\", \"TI\"], \",\", \"\[CapitalDelta]\", \
StyleBox[\"y\", \"TI\"]}], \"}\"}],TraditionalForm]\), opt] \nor \
FScanImage[parameterarray,\!\(\*FormBox[RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], \"2\"]}], \"}\"}], \",\", \
RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"p\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"p\", \"TI\"], \"2\"]}], \
\"}\"}]}],TraditionalForm]\),opt] \nor \
FScanImage[parameterarray,\!\(\*FormBox[RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], \"2\"]}], \"}\"}], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"p\", \"TI\"], \"1\", \",\", StyleBox[\"p\", \
\"TI\"], \"2\"}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], \"0\"], \",\", \
SubscriptBox[StyleBox[\"y\", \"TI\"], \"0\"], \",\", \"\[CapitalDelta]\", \
StyleBox[\"x\", \"TI\"], \",\", \"\[CapitalDelta]\", StyleBox[\"y\", \
\"TI\"]}], \"}\"}]}],TraditionalForm]\),opt] \nFScanImage is used to display \
data returned by FGetFromPiezoScan. The array data need to match one of two \
possible forms denoted above as intensityarray or parameterarray. \n\
intensityarray must be a two\[Hyphen]dimensional array of numbers, typically \
obtained from expressions like FGetFromPiezoScan[\\\"n1\\\"+\\\"n2\\\"]. \n\
parameterarray must be a two\[Hyphen]dimensional array of pairs of numbers of \
the form \!\(\*FormBox[RowBox[{\"{\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", \
StyleBox[\"p\", \"TI\"]}], \"}\"}],TraditionalForm]\), typically obtained \
from expressions like FGetFromPiezoScan[ Hold@\!\(TraditionalForm\`{\[Null]\)\
\\\"n1\\\"+\\\"n2\\\",\\\"E\\\"\!\(\*FormBox[SuperscriptBox[\"}\", \
StyleBox[\"T\",FontSlant->\"Plain\"]],TraditionalForm]\)]. \nIf an intensity \
array is supplied, FScanImage displays a grayscale image of the pixels in the \
array. In case of a parameter array, the image is colored. \
\!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\) and \
\!\(\*FormBox[StyleBox[\"p\", \"TI\"],TraditionalForm]\) are displayed as \
brightness and color hue, respectively. \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], \"2\"]}], \"}\"}],TraditionalForm]\) \
defines the brightness range from darkest (black) to brightest. All intensity \
values below \!\(\*FormBox[SubscriptBox[StyleBox[\"i\", \"TI\"], \
\"1\"],TraditionalForm]\) are displayed in black, all intensities above \
\!\(\*FormBox[SubscriptBox[StyleBox[\"i\", \"TI\"], \"2\"],TraditionalForm]\) \
are displayed with maximal brightness. \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"p\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"p\", \"TI\"], \"2\"]}], \"}\"}],TraditionalForm]\) \
defines the hue range from blue to red. All pixels with a parameter value \
below \!\(\*FormBox[SubscriptBox[StyleBox[\"p\", \"TI\"], \
\"1\"],TraditionalForm]\) are displayed in blue, all values above \
\!\(\*FormBox[SubscriptBox[StyleBox[\"p\", \"TI\"], \"2\"],TraditionalForm]\) \
are displayed in red.\nThe values of \!\(\*FormBox[StyleBox[\"i\", \
\"TI\"],TraditionalForm]\) and \!\(\*FormBox[StyleBox[\"p\", \
\"TI\"],TraditionalForm]\) for each pixel can be read with the coordinate \
tool. (Select the image and press the \\\".\\\"\[Hyphen]key.)\n\
\!\(\*FormBox[RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], \
\"0\"], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], \"0\"], \",\", \"\
\[CapitalDelta]\", StyleBox[\"x\", \"TI\"], \",\", \"\[CapitalDelta]\", \
StyleBox[\"y\", \"TI\"]}], \"}\"}],TraditionalForm]\) is used to label the \
axes ticks. \!\(\*FormBox[SubscriptBox[StyleBox[\"x\", \"TI\"], \
\"0\"],TraditionalForm]\) and \!\(\*FormBox[SubscriptBox[StyleBox[\"y\", \"TI\
\"], \"0\"],TraditionalForm]\) define the bottom left corner of the image. \!\
\(\*FormBox[RowBox[{\"\[CapitalDelta]\", StyleBox[\"x\", \
\"TI\"]}],TraditionalForm]\) and\!\(\*FormBox[RowBox[{\"\[CapitalDelta]\", \
StyleBox[\"y\", \"TI\"]}],TraditionalForm]\) are the pixel resolution in \!\(\
\*FormBox[StyleBox[\"x\", \"TI\"],TraditionalForm]\) and \
\!\(\*FormBox[StyleBox[\"y\", \"TI\"],TraditionalForm]\) direction, \
respectively.\nThese numbers are automatically taken from the TTTR file \
header in case they are not given explicitly.\nThe graphical output of \
FScanImage can be changed by applying the options of Graphics.\nA color \
legend can be obtained from FScanImageColorLegend.\n \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732855671515`*^9, 3.812973285676531*^9}, {
  3.8732617816726446`*^9, 
  3.8732617844862156`*^9}},ExpressionUUID->"df35ea37-e96d-43cb-bc95-\
ecdc11a0a96c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FScanImageColorLegend", "  ", "::", "usage"}], "=", 
   "\"\<FScanImageColorLegend[\!\(TraditionalForm\`{\[Null]\)i1\!\(\
TraditionalForm\`_\),i2\!\(TraditionalForm\`\(\(_\)\(}\)\)\),\!\(\
TraditionalForm\`{\[Null]\)p1\!\(TraditionalForm\`_\),p2\!\(TraditionalForm\`\
\(\(_\)\(}\)\)\)] \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973286676568*^9, 
  3.812973286785948*^9}},ExpressionUUID->"b001cb14-5bd2-4ed9-ae31-\
e796f6088ac7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FScanImageParamName", "  ", "::", "usage"}], "=", 
   "\"\<FScanImageParamName is an option of FScanImage. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129732871297436`*^9, 
  3.812973287223464*^9}},ExpressionUUID->"453ee3fe-ecff-4f9d-84ce-\
b9f209100ba9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FCalculateBurstListFromScanImagePixels", "  ", "::", "usage"}], 
   "=", "\"\<FCalculateBurstListFromScanImagePixels[] or \
FCalculateBurstListFromScanImagePixels[frame\!\(TraditionalForm\`_\)Integer] \
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732875672293`*^9, 
  3.812973287676608*^9}},ExpressionUUID->"6a1b11de-f074-41ad-b94a-\
b334e7f22f2c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FFastFLIM", "  ", "::", "usage"}], "=", 
   "\"\<FastFLIM[routes, \!\(\*FormBox[SubscriptBox[StyleBox[\"t\", \"TI\"], \
\"0\"],TraditionalForm]\), \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], \"2\"]}], \"}\"}],TraditionalForm]\), \
\!\(TraditionalForm\`{\*SubscriptBox[\(\[Tau]\), \(1\)], \*SubscriptBox[\(\
\[Tau]\), \(2\)]}\), opts] or\nFastFLIM[routes, \
\!\(\*FormBox[SubscriptBox[StyleBox[\"t\", \"TI\"], \
\"0\"],TraditionalForm]\), \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], \"2\"]}], \"}\"}],TraditionalForm]\), \
\!\(TraditionalForm\`{\*SubscriptBox[\(\[Tau]\), \(1\)], \*SubscriptBox[\(\
\[Tau]\), \(2\)]}\), frame, opts]\nreturn data and and an image resulting \
from a fast FLIM calculation, where for each pixel the mean of the photon \
micro times minus \!\(\*FormBox[SubscriptBox[StyleBox[\"t\", \"TI\"], \
\"0\"],TraditionalForm]\) is determined.\nExample:\n\!\(TraditionalForm\`{\
\[Null]\)flimdata, flimimage\!\(\(TraditionalForm\`}\)\) \[LongEqual] \
FFastFLIM[ \!\(TraditionalForm\`{\[Null]\)1,0,0,1,0,0\!\(\(TraditionalForm\`}\
\)\), \!\(\*FormBox[SubscriptBox[StyleBox[\"t\", \"TI\"], \
\"0\"],TraditionalForm]\), \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], \"2\"]}], \"}\"}],TraditionalForm]\), \
\!\(TraditionalForm\`{\*SubscriptBox[\(\[Tau]\), \(1\)], \*SubscriptBox[\(\
\[Tau]\), \(2\)]}\), opts]\nflimdata is an array of \!\(TraditionalForm\`{\
\[Null]\)intensity, mean arrival time\!\(\(TraditionalForm\`}\)\) pairs for \
each pixel.\n\!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"i\", \"TI\"], \"2\"]}], \"}\"}],TraditionalForm]\) \
and \!\(TraditionalForm\`{\*SubscriptBox[\(\[Tau]\), \(1\)], \
\*SubscriptBox[\(\[Tau]\), \(2\)]}\) define the brightness and hue range as \
described in FScanImage.\n\!\(\*FormBox[SubscriptBox[StyleBox[\"t\", \"TI\"], \
\"0\"],TraditionalForm]\) is subtracted from all mean micro times. \nThe \
graphical output can be modified with the options of Graphics.\n\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129732880359993`*^9, 
  3.812973288161004*^9}},ExpressionUUID->"06ec5f80-1efd-4777-92b9-\
d3fbe6c42f9d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FDeleteTTTRTimeInterval", "  ", "::", "usage"}], "=", 
   "\"\<FDeleteTTTRTimeInterval[\!\(TraditionalForm\`{{\[Null]\)t1,t2\!\(\(\
TraditionalForm\`}\)\), ...\!\(\(TraditionalForm\`}\)\),opts] deletes all \
photons between t1 and t2 (given in seconds). Note that the TTTR file needs \
to be reopened for undoing this operation.\nOption: \
FCloseGap\!\(\(TraditionalForm\` \[Rule] \)\)True (Default\[LongEqual]True) \
By default, the time stamps of the remaining photons are shifted by t1\
\[Hyphen]t2 to eliminate the gaps resulting from photon deletion. Set to \
False to keep gaps.\n\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732885203924`*^9, 
  3.812973288629772*^9}},ExpressionUUID->"8874f18a-f094-4d6b-bdb2-\
4a213d382d09"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FCloseGap", "  ", "::", "usage"}], "=", 
   "\"\<Option of FDeleteTTTRTimeInterval. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973288973534*^9, 
  3.812973289067288*^9}},ExpressionUUID->"392e2d95-ebaf-42d0-880f-\
7f12f34df40d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"WGdx", "  ", "::", "usage"}], "=", 
   "\"\<No help available. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973289411051*^9, 
  3.812973289520429*^9}},ExpressionUUID->"f0712649-deac-48cd-9ca9-\
62e259144f90"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"WGx0", "  ", "::", "usage"}], "=", 
   "\"\<No help available. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973289864192*^9, 
  3.8129732899735713`*^9}},ExpressionUUID->"cd512b29-9d53-484e-b60c-\
890c03f1460c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"YGraph", "  ", "::", "usage"}], "=", 
   "\"\<No help available. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973290317334*^9, 
  3.8129732904110894`*^9}},ExpressionUUID->"e4546962-73ab-4cc5-ab7b-\
416dd90a70ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FAExplambdat", "  ", "::", "usage"}], "=", 
   "\"\<FAExplambdat[A:\!\(TraditionalForm\`{_\)?NumberQ..\!\(\(\
TraditionalForm\`}\)\),lambda:\!\(TraditionalForm\`{_\)?NumberQ..\!\(\(\
TraditionalForm\`}\)\),times:\!\(TraditionalForm\`{_\)?NumberQ..\!\(\(\
TraditionalForm\`}\)\)] \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973290754854*^9, 
  3.8129732908642335`*^9}},ExpressionUUID->"fa6caeb2-0779-49b2-880d-\
ac56c03c3d20"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FExpkAbst", "  ", "::", "usage"}], "=", 
   "\"\<FExpkAbst[k\!\(TraditionalForm\`_\)?NumberQ,times:\!\(TraditionalForm\
\`{_\)?NumberQ..\!\(\(TraditionalForm\`}\)\)] \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732912236233`*^9, 
  3.8129732913173776`*^9}},ExpressionUUID->"6ad1a14f-180a-40cf-8ba6-\
898a24d6883e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FOneMinusExpkAbst", "  ", "::", "usage"}], "=", 
   "\"\<FOneMinusExpkAbst[k\!\(TraditionalForm\`_\)?NumberQ,times:\!\(\
TraditionalForm\`{_\)?NumberQ..\!\(\(TraditionalForm\`}\)\)] \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129732916767654`*^9, 
  3.8129732917705183`*^9}},ExpressionUUID->"063a1ce6-b2b0-4ebe-a687-\
8b4d8e44c21d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FV2expKtV1pss", "  ", "::", "usage"}], "=", 
   "\"\<FV2expKtV1pss[K:\!\(TraditionalForm\`{{_\)?NumberQ,\!\(\
TraditionalForm\`_\)?NumberQ\!\(\(TraditionalForm\`}\)\)..\!\(\(\
TraditionalForm\`}\)\),V1pss:\!\(TraditionalForm\`{_\)?NumberQ..\!\(\(\
TraditionalForm\`}\)\),TotV2:\!\(TraditionalForm\`{_\)?NumberQ..\!\(\(\
TraditionalForm\`}\)\),times:\!\(TraditionalForm\`{_\)?NumberQ..\!\(\(\
TraditionalForm\`}\)\)] \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973292161159*^9, 
  3.812973292270537*^9}},ExpressionUUID->"2bbc919b-7161-45d7-a333-\
53118bb3e57f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FEigenSystem", "  ", "::", "usage"}], "=", 
   "\"\<FEigenSystem[Km\!\(TraditionalForm\`_\)?MatrixQ[NumberQ]] \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129732926143*^9, 
  3.8129732927236795`*^9}},ExpressionUUID->"cfe77e38-1d0c-45f2-951b-\
ec23775cff18"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTSClearStateTrajectories", "  ", "::", "usage"}], "=", 
   "\"\<FTSClearStateTrajectories[SpeciesIndex\!\(TraditionalForm\`_\)Integer]\
\nFTSClearStateTrajectories[] \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973293067442*^9, 
  3.8129732931768208`*^9}},ExpressionUUID->"7d0a45ae-a761-4491-849c-\
cf4ba41751fb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTSDistanceTrajectory", "  ", "::", "usage"}], "=", 
   "\"\<FTSDistanceTrajectory[ trlist ] transforms particle coordinates \
contained in trlist to distances to the center of origin. trlist can be any \
output of FTSGetTrajectories. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973293520583*^9, 
  3.8129732936143365`*^9}},ExpressionUUID->"45826822-fa17-481a-89fe-\
c58a4fd77077"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTSGetIntensityTrajectory", "  ", "::", "usage"}], "=", 
   "\"\<FTSGetIntensityTrajectory[bg:FTSRateList,rmax\!\(TraditionalForm\`_\)?\
NumberQ,w0\!\(TraditionalForm\`_\)?NumberQ,start\!\(TraditionalForm\`_\)\
Integer, bincount\!\(TraditionalForm\`_\)Integer] \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732939737244`*^9, 
  3.812973294083104*^9}},ExpressionUUID->"bb3dffd7-a05e-45b6-a894-\
3a4ba2091c76"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTSGetNumberOfParticleTrajectory", "  ", "::", "usage"}], "=", 
   "\"\<FTSGetNumberOfParticleTrajectory[speciesindex\!\(TraditionalForm\`_\)\
Integer,binwidth\!\(TraditionalForm\`_\)Integer, \
rmax\!\(TraditionalForm\`_\)?NumberQ] \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.81297329445812*^9, 
  3.8129732945675015`*^9}},ExpressionUUID->"9fa96333-6b7c-4734-bc42-\
6634aa447ee8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTSGetNumberOfSpecies", "  ", "::", "usage"}], "=", 
   "\"\<FTSGetNumberOfSpecies[] returns the value set by \
FTSSetNumberOfSpecies. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.81297329492689*^9, 
  3.812973295020644*^9}},ExpressionUUID->"82b78652-14c8-44b1-880e-\
67b0dec10b1c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTSGetRDistribution", "  ", "::", "usage"}], "=", 
   "\"\<FTSGetRDistribution[speciesindex\!\(TraditionalForm\`_\)Integer,\
binwidth\!\(TraditionalForm\`_\)?NumberQ, \
bincount\!\(TraditionalForm\`_\)Integer] \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973295380034*^9, 
  3.8129732954894123`*^9}},ExpressionUUID->"72c9a070-7e8e-4985-9d6a-\
e40d1eb64810"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTSGetTrajectories", "  ", "::", "usage"}], "=", 
   "\"\<\!\(\*StyleBox[\"FTSGetTrajectories\", \
\"TB\"]\)\!\(\*FormBox[RowBox[{\"[\", RowBox[{SubscriptBox[StyleBox[\"i\", \
\"TI\"], StyleBox[\"s\", \"TI\"]], \",\", StyleBox[\"k\", \"TI\"], \";\", \";\
\", StyleBox[\"l\", \"TI\"], \",\", \"\[CapitalDelta]\", \",\", \
SubscriptBox[StyleBox[\"r\", \"TI\"], \"max\"]}], \"]\"}],TraditionalForm]\) \
returns a list of simulated trajectories of species \
\!\(\*FormBox[SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \
\"TI\"]],TraditionalForm]\)  \n\!\(\*FormBox[SubscriptBox[StyleBox[\"i\", \
\"TI\"], StyleBox[\"s\", \"TI\"]],TraditionalForm]\):   species index \n\
\!\(\*FormBox[RowBox[{StyleBox[\"k\", \"TI\"], \";\", \";\", StyleBox[\"l\", \
\"TI\"]}],TraditionalForm]\):   Trajectories \!\(\*FormBox[StyleBox[\"k\", \
\"TI\"],TraditionalForm]\) to \!\(\*FormBox[StyleBox[\"l\", \
\"TI\"],TraditionalForm]\) are returned. With \!\(\*FormBox[RowBox[{\"1\", \
\";\", \";\", StyleBox[\"A\", \"TI\"], StyleBox[\"l\", \"TI\"], \
StyleBox[\"l\", \"TI\"]}],TraditionalForm]\), all trajectories are returned. \
\n\!\(TraditionalForm\`\[CapitalDelta]\):   For each trajectory, only every \
\!\(TraditionalForm\`\[CapitalDelta]  th\) particle position is returned. \n\
\!\(\*FormBox[SubscriptBox[StyleBox[\"r\", \"TI\"], \"max\"],TraditionalForm]\
\):   Only positions with \!\(\*FormBox[RowBox[{StyleBox[\"r\", \"TI\"], \
\"<\", SubscriptBox[StyleBox[\"r\", \"TI\"], \"max\"]}],TraditionalForm]\) \
are returned. With \!\(\*FormBox[RowBox[{SubscriptBox[StyleBox[\"r\", \
\"TI\"], \"max\"], \"<\", \"0\"}],TraditionalForm]\), all positions are \
returned. \nThe output of FTSGetTrajectories is of the form \
\!\(\*FormBox[RowBox[{\"{\", RowBox[{StyleBox[\"h\", \"TI\"], StyleBox[\"e\", \
\"TI\"], StyleBox[\"a\", \"TI\"], StyleBox[\"d\", \"TI\"], StyleBox[\"e\", \
\"TI\"], StyleBox[\"r\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"t\", \"TI\"], StyleBox[\"r\", \"TI\"], \"1\", \",\", \
StyleBox[\"t\", \"TI\"], StyleBox[\"r\", \"TI\"], \"2\", \",\", \"...\"}], \
\"}\"}]}], \"}\"}],TraditionalForm]\). It can be passed on to \
FTSDistanceTrajectory or FTSIntensityTrajectory  \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732958644266`*^9, 
  3.812973295989432*^9}},ExpressionUUID->"31f771b5-ef4c-45f3-8dbb-\
b3a1ef7a9d20"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTSIntensityTrajectory", "  ", "::", "usage"}], "=", 
   "\"\<\!\(\*StyleBox[\"FTSIntensityTrajectory\", \
\"TB\"]\)[trlist,\!\(\*FormBox[RowBox[{SubscriptBox[StyleBox[\"I\", \"TI\"], \
\"0\"], \",\", SubscriptBox[StyleBox[\"w\", \"TI\"], \"0\"], \",\", \
SubscriptBox[StyleBox[\"z\", \"TI\"], \"0\"], \"]\"}],TraditionalForm]\) \
returns a list of trajectories with pairs of time and intensity assuming a \
Gaussian\[Hyphen]shaped confocal volume centered at the origin.  \ntrlist:   \
This can be any output of FTSGetTrajectories. \n\
\!\(\*FormBox[SubscriptBox[StyleBox[\"I\", \"TI\"], \
\"0\"],TraditionalForm]\):   Intensity detected from a particle located at \
the origin. \n\!\(\*FormBox[SubscriptBox[StyleBox[\"w\", \"TI\"], \
\"0\"],TraditionalForm]\):   Lateral dimension (semi\[Hyphen]minor axis) of \
the confocal volume in micrometers. \n\!\(\*FormBox[SubscriptBox[StyleBox[\"z\
\", \"TI\"], \"0\"],TraditionalForm]\):   Axial dimension (semi\[Hyphen]major \
axis) of the confocal volume in micrometers. \nDepending on the data format \
in trlist, the intensity as a function of particle position is calculated in \
cylindrical coordinates according to \!\(\*FormBox[RowBox[{StyleBox[\"I\", \
\"TI\"], RowBox[{\"(\", RowBox[{\"\[Rho]\", \",\", StyleBox[\"z\", \"TI\"]}], \
\")\"}], \"\[LongEqual]\", SubscriptBox[StyleBox[\"I\", \"TI\"], \"0\"], \
\"exp\", RowBox[{\"(\", RowBox[{\"-\", FractionBox[RowBox[{\"2\", \
SuperscriptBox[\"\[Rho]\", \"2\"]}], SubsuperscriptBox[StyleBox[\"w\", \
\"TI\"], \"0\", \"2\"]], \"-\", FractionBox[RowBox[{\"2\", \
SuperscriptBox[StyleBox[\"z\", \"TI\"], \"2\"]}], SubsuperscriptBox[StyleBox[\
\"z\", \"TI\"], \"0\", \"2\"]]}], \")\"}]}],TraditionalForm]\) or in \
spherical coordinates according to \!\(\*FormBox[RowBox[{StyleBox[\"I\", \"TI\
\"], RowBox[{\"(\", StyleBox[\"r\", \"TI\"], \")\"}], \"\[LongEqual]\", \
SubscriptBox[StyleBox[\"I\", \"TI\"], \"0\"], \"exp\", RowBox[{\"(\", \
RowBox[{\"-\", FractionBox[RowBox[{\"2\", SuperscriptBox[StyleBox[\"r\", \"TI\
\"], \"2\"]}], SubsuperscriptBox[StyleBox[\"w\", \"TI\"], \"0\", \"2\"]]}], \
\")\"}]}],TraditionalForm]\).  \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732964225864`*^9, 
  3.812973296516614*^9}},ExpressionUUID->"9eebf652-3aed-4094-b702-\
90e2d434e0b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTSMeanNewParticelNumberInSphere", "  ", "::", "usage"}], "=", 
   "\"\<FTSMeanNewParticelNumberInSphere[ShpereRadius\!\(TraditionalForm\`_\)\
Real,DiffConstant\!\(TraditionalForm\`_\)Real,ParticleConcentration\!\(\
TraditionalForm\`_\)Real,time\!\(TraditionalForm\`_\)Real] \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973296908231*^9, 
  3.812973297022265*^9}},ExpressionUUID->"fbb35911-99a5-4b7a-888b-\
afe42d9d2b2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTSNewParticleConcentration", "  ", "::", "usage"}], "=", 
   "\"\<FTSNewParticleConcentration[SphereRadius\!\(TraditionalForm\`_\)Real,\
DiffConstant\!\(TraditionalForm\`_\)Real,ParticleConcentration\!\(\
TraditionalForm\`_\)Real,Radius\!\(TraditionalForm\`_\)Real,Time\!\(\
TraditionalForm\`_\)Real] \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973297416882*^9, 
  3.8129732975284157`*^9}},ExpressionUUID->"bc18c1b0-aec5-4368-ae39-\
fb416acfbd0d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTSPIEify", "  ", "::", "usage"}], "=", 
   "\"\<Use of FTSPIEify is discouraged. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973297924033*^9, 
  3.8129732980365667`*^9}},ExpressionUUID->"46d0e86d-8948-46fa-9a8b-\
195c3b33fff6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTSRandomPositionInSphere", "  ", "::", "usage"}], "=", 
   "\"\<FTSRandomPositionInSphere[SphereRadius\!\(TraditionalForm\`_\)?\
NumberQ,DiffConstant\!\(TraditionalForm\`_\)?NumberQ,ParticleConcentration\!\(\
TraditionalForm\`_\)?NumberQ,time\!\(TraditionalForm\`_\)?NumberQ] \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973298428685*^9, 
  3.812973298540221*^9}},ExpressionUUID->"25859ed6-77c9-4ace-8405-\
2f99cc1f0bda"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTSRateList", "  ", "::", "usage"}], "=", 
   "\"\<Pattern of the form \
\!\(TraditionalForm\`{\[Null]\)Repeated[\!\(TraditionalForm\`_\)?NumberQ,\!\(\
TraditionalForm\`{\[Null]\)FNumberOfRoutes\!\(\(TraditionalForm\`}\)\)]\!\(\(\
TraditionalForm\`}\)\) \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973298911123*^9, 
  3.812973299020502*^9}},ExpressionUUID->"93292966-2132-4d69-bc04-\
350ffecce035"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTSSetNumberOfSpecies", "  ", "::", "usage"}], "=", 
   "\"\<\!\(\*StyleBox[\"FTSSetNumberOfSpecies\", \
\"TB\"]\)\!\(\*FormBox[RowBox[{\"[\", SubscriptBox[StyleBox[\"N\", \"TI\"], \
StyleBox[\"s\", \"TI\"]], \"]\"}],TraditionalForm]\) sets the number \
\!\(\*FormBox[SubscriptBox[StyleBox[\"N\", \"TI\"], StyleBox[\"s\", \
\"TI\"]],TraditionalForm]\) of species to be simulated. \n\
\!\(\*StyleBox[\"FTSGetNumberOfSpecies\", \
\"TB\"]\)\!\(TraditionalForm\`\([]\)\) returns the value set by \
FTSSetNumberOfSpecies.  \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732993798914`*^9, 
  3.8129732994892697`*^9}},ExpressionUUID->"9df39e9a-61b6-47fd-a3c8-\
bfa773de6c74"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTSSimulateImmobilizedParticle", "  ", "::", "usage"}], "=", 
   "\"\<\!\(\*StyleBox[\"FTSSimulateImmobilizedParticle\", \
\"TB\"]\)\!\(\*FormBox[RowBox[{\"[\", RowBox[{StyleBox[\"T\", \"TI\"], \",\", \
\"\[CapitalDelta]\", StyleBox[\"t\", \"TI\"]}], \"]\"}],TraditionalForm]\) \
generates a trajectory of a particle that is immobilized at the origin, i.e., \
at the center of the confocal volume.  \n\!\(\*FormBox[StyleBox[\"T\", \
\"TI\"],TraditionalForm]\):   Total length of the simulation in units of \!\(\
\*FormBox[RowBox[{\"\[CapitalDelta]\", StyleBox[\"t\", \
\"TI\"]}],TraditionalForm]\). \!\(\*FormBox[StyleBox[\"T\", \
\"TI\"],TraditionalForm]\) is an integer and defines the total number of \
simulations steps. \n\!\(\*FormBox[RowBox[{\"\[CapitalDelta]\", \
StyleBox[\"t\", \"TI\"]}],TraditionalForm]\):   Simulation step size in \
microseconds. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129732999151497`*^9, 
  3.812973300031685*^9}},ExpressionUUID->"21184a59-b51a-4c18-ac00-\
b7ff498c8206"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTSSimulateParticleDiffusion", "  ", "::", "usage"}], "=", 
   "\"\<\!\(\*StyleBox[\"FTSSimulateParticleDiffusion\", \
\"TB\"]\)\!\(\*FormBox[RowBox[{\"[\", RowBox[{SubscriptBox[StyleBox[\"i\", \
\"TI\"], StyleBox[\"s\", \"TI\"]], \",\", StyleBox[\"R\", \"TI\"], \",\", \
StyleBox[\"D\", \"TI\"], \",\", SubscriptBox[StyleBox[\"c\", \"TI\"], \"0\"], \
\",\", StyleBox[\"T\", \"TI\"], \",\", \"\[CapitalDelta]\", StyleBox[\"t\", \
\"TI\"], \",\", SubscriptBox[StyleBox[\"T\", \"TI\"], \"new\"], \",\", \
SubscriptBox[StyleBox[\"T\", \"TI\"], \"min\"], \",\", SubscriptBox[StyleBox[\
\"R\", \"TI\"], \"save\"]}], \"]\"}],TraditionalForm]\) simulates Brownian \
motion of particles in an open sphere. Particles are simulated until they \
leave the sphere. Periodically, new particles appear at the inner boundary of \
the sphere to maintain a constant concentration within the sphere.  \n\
\!\(\*FormBox[SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \
\"TI\"]],TraditionalForm]\):   The species index \
\!\(\*FormBox[SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \
\"TI\"]],TraditionalForm]\) defines the species that will be simulated. \
\!\(\*FormBox[SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \
\"TI\"]],TraditionalForm]\) can run from \!\(\*FormBox[RowBox[{RowBox[{\"1\", \
\"...\"}], StyleBox[\"N\", \"TI\"]}],TraditionalForm]\), if \
FTSSetNumberOfSpecies[\!\(\*FormBox[StyleBox[\"N\", \
\"TI\"],TraditionalForm]\)] was executed before. \n\!\(\*FormBox[StyleBox[\"R\
\", \"TI\"],TraditionalForm]\):   Radius of the simulation sphere in \
micrometers. \n\!\(\*FormBox[StyleBox[\"D\", \"TI\"],TraditionalForm]\):   \
Diffusion coefficient in \!\(TraditionalForm\`\[Mu] \*SuperscriptBox[\(m\), \
\(2\)]/\[Mu]  s\). \n\!\(\*FormBox[SubscriptBox[StyleBox[\"c\", \"TI\"], \
\"0\"],TraditionalForm]\):   Number concentration of particles in \
\!\(TraditionalForm\`1/\[Mu] \*SuperscriptBox[\(m\), \(3\)]\). \n\
\!\(\*FormBox[StyleBox[\"T\", \"TI\"],TraditionalForm]\):   Total length of \
the simulation in units of \!\(\*FormBox[RowBox[{\"\[CapitalDelta]\", \
StyleBox[\"t\", \"TI\"]}],TraditionalForm]\). \!\(\*FormBox[StyleBox[\"T\", \
\"TI\"],TraditionalForm]\) is an integer and defines the total number of \
simulations steps. \n\!\(\*FormBox[RowBox[{\"\[CapitalDelta]\", \
StyleBox[\"t\", \"TI\"]}],TraditionalForm]\):   Simulation step size in \
microseconds. \n\!\(\*FormBox[SubscriptBox[StyleBox[\"T\", \"TI\"], \
\"new\"],TraditionalForm]\):   Period of time steps after which new particles \
appear randomly inside the sphere. \!\(\*FormBox[SubscriptBox[StyleBox[\"T\", \
\"TI\"], StyleBox[RowBox[{\"n\", \"e\", \"w\"}], \"TI\"]],TraditionalForm]\) \
in units of \!\(\*FormBox[RowBox[{\"\[CapitalDelta]\", StyleBox[\"t\", \
\"TI\"]}],TraditionalForm]\) is an integer. \n\
\!\(\*FormBox[SubscriptBox[StyleBox[\"T\", \"TI\"], \"min\"],TraditionalForm]\
\):   Only particle trajectories longer than \
\!\(\*FormBox[SubscriptBox[StyleBox[\"T\", \"TI\"], \"min\"],TraditionalForm]\
\) are saved to memory. \!\(\*FormBox[SubscriptBox[StyleBox[\"T\", \"TI\"], \
\"min\"],TraditionalForm]\) in units of \!\(\*FormBox[RowBox[{\"\
\[CapitalDelta]\", StyleBox[\"t\", \"TI\"]}],TraditionalForm]\) is an \
integer. \n\!\(\*FormBox[SubscriptBox[StyleBox[\"R\", \"TI\"], \
\"save\"],TraditionalForm]\):   Only those particle trajectories are saved to \
memory that go below \!\(\*FormBox[SubscriptBox[StyleBox[\"R\", \"TI\"], \
StyleBox[RowBox[{\"s\", \"a\", \"v\", \"e\"}], \"TI\"]],TraditionalForm]\) \
for at least one simulation step. Of those trajectories, only the segments \
for which \!\(\*FormBox[RowBox[{StyleBox[\"r\", \"TI\"], RowBox[{\"(\", \
StyleBox[\"t\", \"TI\"], \")\"}], \"<\", SubscriptBox[StyleBox[\"R\", \
\"TI\"], \"save\"]}],TraditionalForm]\) and the durations of the gaps between \
such segments are saved. \nFTSSimulateParticleDiffusion has the options \
\!\(\*StyleBox[\"Method\", \"TB\"]\)\!\(\(TraditionalForm\` \[Rule] \
\)\)\\\"1D\\\" (default) or \!\(\*StyleBox[\"Method\", \
\"TB\"]\)\!\(\(TraditionalForm\` \[Rule] \)\)\\\"2D\\\". Correspondingly only \
the radial distances to the origin (\\\"1D\\\") or the distances to the z\
\[Hyphen]axis and the z coordinates (\\\"2D\\\") are simulated and saved to \
memory.  \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733004794645`*^9, 
  3.8129733006070023`*^9}},ExpressionUUID->"ba6a6e4f-d32a-4741-a2a2-\
4b1801072840"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "FTSSimulateParticleDiffusionInClosedSphere", "  ", "::", "usage"}], "=", 
   "\"\<\!\(\*StyleBox[\"FTSSimulateParticleDiffusionInClosedSphere\", \
\"TB\"]\)\!\(\*FormBox[RowBox[{\"[\", RowBox[{SubscriptBox[StyleBox[\"i\", \
\"TI\"], StyleBox[\"s\", \"TI\"]], \",\", StyleBox[\"R\", \"TI\"], \",\", \
StyleBox[\"D\", \"TI\"], \",\", SubscriptBox[StyleBox[\"n\", \"TI\"], \"0\"], \
\",\", StyleBox[\"T\", \"TI\"], \",\", \"\[CapitalDelta]\", StyleBox[\"t\", \
\"TI\"], \",\"}]}],TraditionalForm]\) \
\!\(\*FormBox[RowBox[{SubscriptBox[StyleBox[\"R\", \"TI\"], \"save\"], \
\",\"}],TraditionalForm]\) \!\(\*FormBox[RowBox[{SubscriptBox[StyleBox[\"p\", \
\"TI\"], \"absorb\"], \"]\"}],TraditionalForm]\) simulates Brownian motion of \
particles in a closed sphere.  \n\!\(\*FormBox[SubscriptBox[StyleBox[\"i\", \
\"TI\"], StyleBox[\"s\", \"TI\"]],TraditionalForm]\):   The species index \
\!\(\*FormBox[SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \
\"TI\"]],TraditionalForm]\) defines the species that will be simulated. \
\!\(\*FormBox[SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \
\"TI\"]],TraditionalForm]\) can run from \!\(\*FormBox[RowBox[{RowBox[{\"1\", \
\"...\"}], SubscriptBox[StyleBox[\"N\", \"TI\"], StyleBox[\"s\", \
\"TI\"]]}],TraditionalForm]\), if \
FTSSetNumberOfSpecies[\!\(\*FormBox[StyleBox[\"N\", \
\"TI\"],TraditionalForm]\)] was executed before. \n\!\(\*FormBox[StyleBox[\"R\
\", \"TI\"],TraditionalForm]\):   Radius of the simulation sphere in \
micrometers. \n\!\(\*FormBox[StyleBox[\"D\", \"TI\"],TraditionalForm]\):   \
Diffusion coefficient in \!\(TraditionalForm\`\[Mu] \*SuperscriptBox[\(m\), \
\(2\)]/\[Mu]  s\) \n\!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \"TI\"], \
\"0\"],TraditionalForm]\):   Initial number of particles in the sphere. \n\
\!\(\*FormBox[StyleBox[\"T\", \"TI\"],TraditionalForm]\):   Total length of \
the simulation in units of \!\(\*FormBox[RowBox[{\"\[CapitalDelta]\", \
StyleBox[\"t\", \"TI\"]}],TraditionalForm]\). \!\(\*FormBox[StyleBox[\"T\", \
\"TI\"],TraditionalForm]\) is an integer and defines the total number of \
simulations steps. \n\!\(\*FormBox[RowBox[{\"\[CapitalDelta]\", \
StyleBox[\"t\", \"TI\"]}],TraditionalForm]\):   Simulation step size in \
microseconds. \n\!\(\*FormBox[SubscriptBox[StyleBox[\"R\", \"TI\"], \
\"save\"],TraditionalForm]\):   Only parts with \
\!\(\*FormBox[RowBox[{StyleBox[\"r\", \"TI\"], RowBox[{\"(\", StyleBox[\"t\", \
\"TI\"], \")\"}], \"<\", SubscriptBox[StyleBox[\"R\", \"TI\"], \
\"save\"]}],TraditionalForm]\) and the lengths of the gaps between such parts \
are saved. \n\!\(\*FormBox[SubscriptBox[StyleBox[\"p\", \"TI\"], \
\"stick\"],TraditionalForm]\) The probability (\!\(TraditionalForm\`\(0 ... \
\) 1\)) that a particle that hits the boundary is absorbed. If it is not \
absorbed, it is reflected. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733015426893`*^9, 
  3.812973301667227*^9}},ExpressionUUID->"10f788d8-5238-43ba-9e49-\
9f4b013b8c91"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "FTSSimulateParticleDiffusionInClosedCylinder", "  ", "::", "usage"}], 
   "=", "\"\<\!\(\*StyleBox[\"FTSSimulateParticleDiffusionInClosedCylinder\", \
\"TB\"]\)\!\(\*FormBox[RowBox[{\"[\", RowBox[{SubscriptBox[StyleBox[\"i\", \
\"TI\"], StyleBox[\"s\", \"TI\"]], \",\", StyleBox[\"R\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"l\", \"TI\"], RowBox[{\"1\", \"/\", \"2\"}]], \",\", \
StyleBox[\"D\", \"TI\"], \",\", SubscriptBox[StyleBox[\"n\", \"TI\"], \"0\"], \
\",\", StyleBox[\"T\", \"TI\"], \",\"}]}],TraditionalForm]\) \
\!\(\*FormBox[RowBox[{\"\[CapitalDelta]\", StyleBox[\"t\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"R\", \"TI\"], \"save\"], \",\", \
SubscriptBox[StyleBox[\"p\", \"TI\"], \"stick\"], \"]\"}],TraditionalForm]\) \
simulates Brownian motion of particles in a closed cylinder.  \n\
\!\(\*FormBox[SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \
\"TI\"]],TraditionalForm]\):   The species index \
\!\(\*FormBox[SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \
\"TI\"]],TraditionalForm]\) defines the species that will be simulated. \
\!\(\*FormBox[SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \
\"TI\"]],TraditionalForm]\) can run from \!\(\*FormBox[RowBox[{RowBox[{\"1\", \
\"...\"}], SubscriptBox[StyleBox[\"N\", \"TI\"], StyleBox[\"s\", \
\"TI\"]]}],TraditionalForm]\), if \
FTSSetNumberOfSpecies[\!\(\*FormBox[StyleBox[\"N\", \
\"TI\"],TraditionalForm]\)] was executed before. \n\!\(\*FormBox[StyleBox[\"R\
\", \"TI\"],TraditionalForm]\):   Radius of the simulation cylinder in \
micrometers. \n\!\(\*FormBox[SubscriptBox[StyleBox[\"l\", \"TI\"], \
RowBox[{\"1\", \"/\", \"2\"}]],TraditionalForm]\):   Half\[Hyphen]length of \
the simulation cylinder in micrometers. \n\!\(\*FormBox[StyleBox[\"D\", \
\"TI\"],TraditionalForm]\):   Diffusion coefficient in \!\(TraditionalForm\`\
\[Mu] \*SuperscriptBox[\(m\), \(2\)]/\[Mu]  s\) \n\
\!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \"TI\"], \
\"0\"],TraditionalForm]\):   Initial number of particles in the cylinder. \n\
\!\(\*FormBox[StyleBox[\"T\", \"TI\"],TraditionalForm]\):   Total length of \
the simulation in units of \!\(\*FormBox[RowBox[{\"\[CapitalDelta]\", \
StyleBox[\"t\", \"TI\"]}],TraditionalForm]\). \!\(\*FormBox[StyleBox[\"T\", \
\"TI\"],TraditionalForm]\) is an integer and defines the total number of \
simulations steps. \n\!\(\*FormBox[RowBox[{\"\[CapitalDelta]\", \
StyleBox[\"t\", \"TI\"]}],TraditionalForm]\):   Simulation step size in \
microseconds. \n\!\(\*FormBox[SubscriptBox[StyleBox[\"R\", \"TI\"], \
\"save\"],TraditionalForm]\):   Only segments with \
\!\(\*FormBox[RowBox[{StyleBox[\"r\", \"TI\"], RowBox[{\"(\", StyleBox[\"t\", \
\"TI\"], \")\"}], \"<\", SubscriptBox[StyleBox[\"R\", \"TI\"], \
\"save\"]}],TraditionalForm]\) and the durations of the gaps between such \
segments are saved. \n\!\(\*FormBox[SubscriptBox[StyleBox[\"p\", \"TI\"], \
\"stick\"],TraditionalForm]\):   The probability (\!\(TraditionalForm\`\(0 \
... \) 1\)) that a particle that hits the boundary is absorbed. If it is not \
absorbed, it is reflected. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733021188774`*^9, 
  3.8129733022439327`*^9}},ExpressionUUID->"ba7ff808-769f-49b9-929e-\
f9c4c769ec7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTSSimulateStateTrajectories", "  ", "::", "usage"}], "=", 
   "\"\<\!\(\*StyleBox[\"FTSSimulateStateTrajectories\", \
\"TB\"]\)\!\(\*FormBox[RowBox[{\"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \"TI\"]], \
\",\", StyleBox[\"B\",FontSlant->\"Bold\"], \",\", \
SubscriptBox[StyleBox[\"p\",FontSlant->\"Bold\"], \"0\"], \",\", \
SubscriptBox[StyleBox[\"K\",FontSlant->\"Bold\"], \"0\"]}], \"}\"}], \
\"]\"}],TraditionalForm]\) or \n\!\(\*StyleBox[\"FTSSimulateStateTrajectories\
\", \"TB\"]\)\!\(\*FormBox[RowBox[{\"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \"TI\"]], \
\",\", StyleBox[\"B\",FontSlant->\"Bold\"], \",\", \
SubscriptBox[StyleBox[\"p\",FontSlant->\"Bold\"], \"0\"], \",\", \
StyleBox[RowBox[{\"K_\", \"0\"}],FontSlant->\"Bold\"], \",\", \
SubscriptBox[StyleBox[\"K\",FontSlant->\"Bold\"], \"1\"]}], \"}\"}], \",\", \
SubscriptBox[StyleBox[\"w\", \"TI\"], \"0\"], \",\", \
SubscriptBox[StyleBox[\"z\", \"TI\"], \"0\"], \",\", \
SubscriptBox[StyleBox[\"r\", \"TI\"], \"max\"]}], \"]\"}],TraditionalForm]\) \
defines mean photon detection rates of internal states and simulates internal\
\[Hyphen]state dynamics for all particles of species \
\!\(\*FormBox[SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \
\"TI\"]],TraditionalForm]\). The kinetics are given by the rate equation \!\(\
\*FormBox[RowBox[{FractionBox[StyleBox[\"d\", \"TI\"], \
StyleBox[RowBox[{\"d\", \"t\"}], \"TI\"]], \
StyleBox[\"p\",FontSlant->\"Bold\"], \"\[LongEqual]\", \
StyleBox[\"K\",FontSlant->\"Bold\"], \
StyleBox[\"p\",FontSlant->\"Bold\"]}],TraditionalForm]\), where the \
(\!\(\*FormBox[RowBox[{SubscriptBox[StyleBox[\"N\", \"TI\"], \
StyleBox[RowBox[{\"s\", \"t\"}], \"TI\"]], \"\[Cross]\", \
SubscriptBox[StyleBox[\"N\", \"TI\"], StyleBox[RowBox[{\"s\", \"t\"}], \
\"TI\"]]}],TraditionalForm]\)) rate matrix \
\!\(\*FormBox[StyleBox[\"K\",FontSlant->\"Bold\"],TraditionalForm]\) is given \
by \!\(\*FormBox[RowBox[{StyleBox[\"K\",FontSlant->\"Bold\"], \
\"\[LongEqual]\", SubscriptBox[StyleBox[\"K\",FontSlant->\"Bold\"], \
\"0\"]}],TraditionalForm]\) or \
\!\(\*FormBox[RowBox[{StyleBox[\"K\",FontSlant->\"Bold\"], \"\[LongEqual]\", \
SubscriptBox[StyleBox[\"K\",FontSlant->\"Bold\"], \"0\"], \"+\", StyleBox[\"I\
\", \"TI\"], RowBox[{\"(\", StyleBox[\"r\",FontSlant->\"Bold\"], \")\"}], \
SubscriptBox[StyleBox[\"K\",FontSlant->\"Bold\"], \
\"1\"]}],TraditionalForm]\). The vector \
\!\(\*FormBox[StyleBox[\"p\",FontSlant->\"Bold\"],TraditionalForm]\) \
describes the population of states \!\(\*FormBox[RowBox[{RowBox[{\"1\", \"...\
\"}], SubscriptBox[StyleBox[\"N\", \"TI\"], StyleBox[RowBox[{\"s\", \"t\"}], \
\"TI\"]]}],TraditionalForm]\) as a function of time.  \n\
\!\(\*FormBox[SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \
\"TI\"]],TraditionalForm]\):   species index \n\
\!\(\*FormBox[StyleBox[\"B\",FontSlant->\"Bold\"],TraditionalForm]\):   This \
\!\(\*FormBox[RowBox[{SubscriptBox[StyleBox[\"N\", \"TI\"], StyleBox[RowBox[{\
\"s\", \"t\"}], \"TI\"]], \"\[Cross]\", SubscriptBox[StyleBox[\"N\", \"TI\"], \
StyleBox[\"d\", \"TI\"]]}],TraditionalForm]\) matrix defines the mean photon \
detection rates for a particle that is located at the origin. \
\!\(\*FormBox[SubscriptBox[StyleBox[\"N\", \"TI\"], StyleBox[RowBox[{\"s\", \
\"t\"}], \"TI\"]],TraditionalForm]\) is the number of states and \
\!\(\*FormBox[SubscriptBox[StyleBox[\"N\", \"TI\"], StyleBox[\"D\", \
\"TI\"]],TraditionalForm]\) the number of detection routes. The matrix \
element \!\(\*FormBox[SubscriptBox[StyleBox[\"b\", \"TI\"], StyleBox[RowBox[{\
\"s\", \"d\"}], \"TI\"]],TraditionalForm]\) defines the mean photon detection \
rate on detector \!\(\*FormBox[StyleBox[\"d\", \"TI\"],TraditionalForm]\) of \
a particle in state \!\(\*FormBox[StyleBox[\"s\", \"TI\"],TraditionalForm]\). \
\n\!\(\*FormBox[SubscriptBox[StyleBox[\"p\",FontSlant->\"Bold\"], \
\"0\"],TraditionalForm]\):   vector of length \
\!\(\*FormBox[SubscriptBox[StyleBox[\"N\", \"TI\"], StyleBox[RowBox[{\"s\", \
\"t\"}], \"TI\"]],TraditionalForm]\) containing the initial relative \
probabilities of a particle to be in state \
\!\(\*FormBox[RowBox[{RowBox[{\"1\", \"...\"}], SubscriptBox[StyleBox[\"N\", \
\"TI\"], StyleBox[RowBox[{\"s\", \"t\"}], \"TI\"]]}],TraditionalForm]\) at \
the start of the trajectory. \n\
\!\(\*FormBox[SubscriptBox[StyleBox[\"K\",FontSlant->\"Bold\"], \
\"0\"],TraditionalForm]\):   The part of the rate matrix that is independent \
of the particle position. \n\
\!\(\*FormBox[SubscriptBox[StyleBox[\"K\",FontSlant->\"Bold\"], \
\"1\"],TraditionalForm]\):   The second version of the command allows \
position\[Hyphen]dependent processes such as photobleaching to be modeled. \
The total rate matrix is then given by \
\!\(\*FormBox[RowBox[{StyleBox[\"K\",FontSlant->\"Bold\"], \"\[LongEqual]\", \
SubscriptBox[StyleBox[\"K\",FontSlant->\"Bold\"], \"0\"], \"+\", StyleBox[\"I\
\", \"TI\"], RowBox[{\"(\", StyleBox[\"r\",FontSlant->\"Bold\"], \")\"}], \
SubscriptBox[StyleBox[\"K\",FontSlant->\"Bold\"], \
\"1\"]}],TraditionalForm]\), where \!\(\*FormBox[RowBox[{StyleBox[\"I\", \"TI\
\"], \"(\", StyleBox[\"r\",FontSlant->\"Bold\"], \")\"}],TraditionalForm]\) \
is the excitation intensity distribution of the confocal volume. Depending on \
the format of the trajectories, \!\(\*FormBox[RowBox[{StyleBox[\"I\", \
\"TI\"], \"(\", StyleBox[\"r\",FontSlant->\"Bold\"], \")\"}],TraditionalForm]\
\) is calculated in cylindrical coordinates according to \
\!\(\*FormBox[RowBox[{StyleBox[\"I\", \"TI\"], RowBox[{\"(\", \
RowBox[{\"\[Rho]\", \",\", StyleBox[\"z\", \"TI\"]}], \")\"}], \"\[LongEqual]\
\", \"exp\", RowBox[{\"(\", RowBox[{\"-\", FractionBox[RowBox[{\"2\", \
SuperscriptBox[\"\[Rho]\", \"2\"]}], SubsuperscriptBox[StyleBox[\"w\", \
\"TI\"], \"0\", \"2\"]], \"-\", FractionBox[RowBox[{\"2\", \
SuperscriptBox[StyleBox[\"z\", \"TI\"], \"2\"]}], SubsuperscriptBox[StyleBox[\
\"z\", \"TI\"], \"0\", \"2\"]]}], \")\"}]}],TraditionalForm]\) or in \
spherical coordinates according to \!\(\*FormBox[RowBox[{StyleBox[\"I\", \"TI\
\"], RowBox[{\"(\", StyleBox[\"r\", \"TI\"], \")\"}], \"\[LongEqual]\", \"exp\
\", RowBox[{\"(\", RowBox[{\"-\", FractionBox[RowBox[{\"2\", \
SuperscriptBox[StyleBox[\"r\", \"TI\"], \"2\"]}], SubsuperscriptBox[StyleBox[\
\"w\", \"TI\"], \"0\", \"2\"]]}], \")\"}]}],TraditionalForm]\). \n\
\!\(\*FormBox[SubscriptBox[StyleBox[\"w\", \"TI\"], \
\"0\"],TraditionalForm]\):   Lateral dimension (semi\[Hyphen]minor axis) of \
the confocal volume in micrometers. \n\!\(\*FormBox[SubscriptBox[StyleBox[\"z\
\", \"TI\"], \"0\"],TraditionalForm]\):   Axial dimension (semi\[Hyphen]major \
axis) of the confocal volume in micrometers. \n\
\!\(\*FormBox[SubscriptBox[StyleBox[\"r\", \"TI\"], \"max\"],TraditionalForm]\
\):   For distances to the origin with \!\(\*FormBox[RowBox[{\"|\", StyleBox[\
\"r\",FontSlant->\"Bold\"], \"|\", \">\", SubscriptBox[StyleBox[\"r\", \
\"TI\"], \"max\"]}],TraditionalForm]\), the excitation intensity is set to \
zero, \!\(\*FormBox[RowBox[{StyleBox[\"I\", \"TI\"], RowBox[{\"(\", StyleBox[\
\"r\",FontSlant->\"Bold\"], \")\"}], \"\[LongEqual]\", \
\"0\"}],TraditionalForm]\). \n\
\!\(\*StyleBox[\"FTSSimulateStateTrajectories\", \
\"TB\"]\)\!\(\*FormBox[RowBox[{\"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \"TI\"]], \
\",\", StyleBox[\"B\",FontSlant->\"Bold\"], \",\", \
SubscriptBox[StyleBox[\"p\",FontSlant->\"Bold\"], \"0\"]}], \"}\"}], \
\"]\"}],TraditionalForm]\) is equivalent to calling \
FTSSimulateStateTrajectories\!\(\*FormBox[RowBox[{\"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \"TI\"]], \
\",\", StyleBox[\"B\",FontSlant->\"Bold\"], \",\", \
SubscriptBox[StyleBox[\"p\",FontSlant->\"Bold\"], \"0\"], \",\", \
SubscriptBox[StyleBox[\"K\",FontSlant->\"Bold\"], \"0\"]}], \"}\"}], \
\"]\"}],TraditionalForm]\) with \
\!\(\*FormBox[SubscriptBox[StyleBox[\"K\",FontSlant->\"Bold\"], \
\"0\"],TraditionalForm]\) set to the zero matrix of suitable dimension. \
Calling \!\(\*StyleBox[\"FTSSimulateStateTrajectories\", \
\"TB\"]\)\!\(\*FormBox[RowBox[{\"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \"TI\"]], \
\",\", StyleBox[\"B\",FontSlant->\"Bold\"]}], \"}\"}], \
\"]\"}],TraditionalForm]\) is equivalent to \
FTSSimulateStateTrajectories\!\(\*FormBox[RowBox[{\"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \"TI\"]], \
\",\", StyleBox[\"B\",FontSlant->\"Bold\"], \",\", RowBox[{\"{\", RowBox[{\"1\
\", \",\", \"1\", \",\", \"..\"}], \"}\"}]}], \"}\"}], \
\"]\"}],TraditionalForm]\) .  \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733027207212`*^9, 
  3.8129733028747673`*^9}},ExpressionUUID->"bba682d9-dd03-49da-a4bb-\
ed30d5725ddc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTSSimulateFRETStateTrajectories", "  ", "::", "usage"}], "=", 
   "\"\<\!\(\*StyleBox[\"FTSSimulateFRETStateTrajectories\", \
\"TB\"]\)\!\(\*FormBox[RowBox[{\"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \"TI\"]], \
\",\", \"fretmodel\", \",\", \
SubscriptBox[StyleBox[\"p\",FontSlant->\"Bold\"], \"0\"], \",\", \
SubscriptBox[StyleBox[\"K\",FontSlant->\"Bold\"], \"0\"], \",\", \
StyleBox[\"rcm\", \"TB\"], \",\", \"\[Alpha]\"}], \"}\"}], \
\"]\"}],TraditionalForm]\) or \n\
\!\(\*StyleBox[\"FTSSimulateFRETStateTrajectories\", \
\"TB\"]\)\!\(\*FormBox[RowBox[{\"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \"TI\"]], \
\",\", \"fretmodel\", \",\", \
SubscriptBox[StyleBox[\"p\",FontSlant->\"Bold\"], \"0\"], \",\", \
StyleBox[RowBox[{\"K_\", \"0\"}],FontSlant->\"Bold\"], \",\", \
SubscriptBox[StyleBox[\"K\",FontSlant->\"Bold\"], \
\"1\"]}]}]}],TraditionalForm]\), \!\(\*FormBox[RowBox[{StyleBox[\"rcm\", \"TB\
\"], \",\", \"\[Alpha]\", \"}\", \",\", SubscriptBox[StyleBox[\"w\", \"TI\"], \
\"0\"], \",\", SubscriptBox[StyleBox[\"z\", \"TI\"], \"0\"], \",\", \
SubscriptBox[StyleBox[\"r\", \"TI\"], \"max\"], \"]\"}],TraditionalForm]\) \n\
defines photon statistics of internal states and simulates \
internal\[Hyphen]state dynamics for all particles of species \
\!\(\*FormBox[SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \
\"TI\"]],TraditionalForm]\). The kinetics are given by the rate equation \!\(\
\*FormBox[RowBox[{FractionBox[StyleBox[\"d\", \"TI\"], \
StyleBox[RowBox[{\"d\", \"t\"}], \"TI\"]], \
StyleBox[\"p\",FontSlant->\"Bold\"], \"\[LongEqual]\", \
StyleBox[\"K\",FontSlant->\"Bold\"], \
StyleBox[\"p\",FontSlant->\"Bold\"]}],TraditionalForm]\), where the \
(\!\(\*FormBox[RowBox[{SubscriptBox[StyleBox[\"N\", \"TI\"], \
StyleBox[RowBox[{\"s\", \"t\"}], \"TI\"]], \"\[Cross]\", \
SubscriptBox[StyleBox[\"N\", \"TI\"], StyleBox[RowBox[{\"s\", \"t\"}], \
\"TI\"]]}],TraditionalForm]\)) rate matrix \
\!\(\*FormBox[StyleBox[\"K\",FontSlant->\"Bold\"],TraditionalForm]\) is given \
by \!\(\*FormBox[RowBox[{StyleBox[\"K\",FontSlant->\"Bold\"], \
\"\[LongEqual]\", SubscriptBox[StyleBox[\"K\",FontSlant->\"Bold\"], \
\"0\"]}],TraditionalForm]\) or \
\!\(\*FormBox[RowBox[{StyleBox[\"K\",FontSlant->\"Bold\"], \"\[LongEqual]\", \
SubscriptBox[StyleBox[\"K\",FontSlant->\"Bold\"], \"0\"], \"+\", StyleBox[\"I\
\", \"TI\"], RowBox[{\"(\", StyleBox[\"r\",FontSlant->\"Bold\"], \")\"}], \
SubscriptBox[StyleBox[\"K\",FontSlant->\"Bold\"], \
\"1\"]}],TraditionalForm]\). The vector \
\!\(\*FormBox[StyleBox[\"p\",FontSlant->\"Bold\"],TraditionalForm]\) \
describes the population of states \!\(\*FormBox[RowBox[{RowBox[{\"1\", \"...\
\"}], SubscriptBox[StyleBox[\"N\", \"TI\"], StyleBox[RowBox[{\"s\", \"t\"}], \
\"TI\"]]}],TraditionalForm]\) as a function of time.  \n\
\!\(\*FormBox[SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \
\"TI\"]],TraditionalForm]\):   species index \n\!\(TraditionalForm\`fretmodel\
\):   is of the form \!\(\*FormBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"e\", \"TI\"], \"1\"], \",\", SubscriptBox[\"\[Nu]\", \
\"1\"]}], \"}\"}], \",\", \"...\", \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], SubscriptBox[StyleBox[\"N\", \
\"TI\"], StyleBox[RowBox[{\"s\", \"t\"}], \"TI\"]]], \",\", \
SubscriptBox[StyleBox[\"e\", \"TI\"], SubscriptBox[StyleBox[\"N\", \"TI\"], \
StyleBox[RowBox[{\"s\", \"t\"}], \"TI\"]]], \",\", SubscriptBox[\"\[Nu]\", \
SubscriptBox[StyleBox[\"N\", \"TI\"], StyleBox[RowBox[{\"s\", \"t\"}], \
\"TI\"]]]}], \"}\"}]}], \"}\"}],TraditionalForm]\). \n\
\!\(\*FormBox[SubscriptBox[StyleBox[\"p\",FontSlant->\"Bold\"], \
\"0\"],TraditionalForm]\):   vector of length \
\!\(\*FormBox[SubscriptBox[StyleBox[\"N\", \"TI\"], StyleBox[RowBox[{\"s\", \
\"t\"}], \"TI\"]],TraditionalForm]\) containing the initial relative \
probabilities of a particle to be in state \
\!\(\*FormBox[RowBox[{RowBox[{\"1\", \"...\"}], SubscriptBox[StyleBox[\"N\", \
\"TI\"], StyleBox[RowBox[{\"s\", \"t\"}], \"TI\"]]}],TraditionalForm]\) at \
the start of the trajectory. \n\
\!\(\*FormBox[SubscriptBox[StyleBox[\"K\",FontSlant->\"Bold\"], \
\"0\"],TraditionalForm]\):   The part of the rate matrix that is independent \
of the particle position. \n\
\!\(\*FormBox[SubscriptBox[StyleBox[\"K\",FontSlant->\"Bold\"], \
\"1\"],TraditionalForm]\):   The second version of the command allows \
position\[Hyphen]dependent processes such as photobleaching to be modeled. \
The total rate matrix is then given by \
\!\(\*FormBox[RowBox[{StyleBox[\"K\",FontSlant->\"Bold\"], \"\[LongEqual]\", \
SubscriptBox[StyleBox[\"K\",FontSlant->\"Bold\"], \"0\"], \"+\", StyleBox[\"I\
\", \"TI\"], RowBox[{\"(\", StyleBox[\"r\",FontSlant->\"Bold\"], \")\"}], \
SubscriptBox[StyleBox[\"K\",FontSlant->\"Bold\"], \
\"1\"]}],TraditionalForm]\), where \!\(\*FormBox[RowBox[{StyleBox[\"I\", \"TI\
\"], \"(\", StyleBox[\"r\",FontSlant->\"Bold\"], \")\"}],TraditionalForm]\) \
is the excitation intensity distribution of the confocal volume. Depending on \
the format of the trajectories, \!\(\*FormBox[RowBox[{StyleBox[\"I\", \
\"TI\"], \"(\", StyleBox[\"r\",FontSlant->\"Bold\"], \")\"}],TraditionalForm]\
\) is calculated in cylindrical coordinates according to \
\!\(\*FormBox[RowBox[{StyleBox[\"I\", \"TI\"], RowBox[{\"(\", \
RowBox[{\"\[Rho]\", \",\", StyleBox[\"z\", \"TI\"]}], \")\"}], \"\[LongEqual]\
\", \"exp\", RowBox[{\"(\", RowBox[{\"-\", FractionBox[RowBox[{\"2\", \
SuperscriptBox[\"\[Rho]\", \"2\"]}], SubsuperscriptBox[StyleBox[\"w\", \
\"TI\"], \"0\", \"2\"]], \"-\", FractionBox[RowBox[{\"2\", \
SuperscriptBox[StyleBox[\"z\", \"TI\"], \"2\"]}], SubsuperscriptBox[StyleBox[\
\"z\", \"TI\"], \"0\", \"2\"]]}], \")\"}]}],TraditionalForm]\) or in \
spherical coordinates according to \!\(\*FormBox[RowBox[{StyleBox[\"I\", \"TI\
\"], RowBox[{\"(\", StyleBox[\"r\", \"TI\"], \")\"}], \"\[LongEqual]\", \"exp\
\", RowBox[{\"(\", RowBox[{\"-\", FractionBox[RowBox[{\"2\", \
SuperscriptBox[StyleBox[\"r\", \"TI\"], \"2\"]}], SubsuperscriptBox[StyleBox[\
\"w\", \"TI\"], \"0\", \"2\"]]}], \")\"}]}],TraditionalForm]\). \n\
\!\(\*FormBox[StyleBox[\"rcm\", \"TB\"],TraditionalForm]\):   \
\!\(TraditionalForm\`2\[Cross]2\) RCM. \n\!\(\*FormBox[SubscriptBox[StyleBox[\
\"w\", \"TI\"], \"0\"],TraditionalForm]\):   Lateral dimension \
(semi\[Hyphen]minor axis) of the confocal volume in micrometers. \n\
\!\(\*FormBox[SubscriptBox[StyleBox[\"z\", \"TI\"], \
\"0\"],TraditionalForm]\):   Axial dimension (semi\[Hyphen]major axis) of the \
confocal volume in micrometers. \n\!\(\*FormBox[SubscriptBox[StyleBox[\"r\", \
\"TI\"], \"max\"],TraditionalForm]\):   For distances to the origin with \!\(\
\*FormBox[RowBox[{\"|\", StyleBox[\"r\",FontSlant->\"Bold\"], \"|\", \">\", \
SubscriptBox[StyleBox[\"r\", \"TI\"], \"max\"]}],TraditionalForm]\), the \
excitation intensity is set to zero, \!\(\*FormBox[RowBox[{StyleBox[\"I\", \
\"TI\"], RowBox[{\"(\", StyleBox[\"r\",FontSlant->\"Bold\"], \")\"}], \"\
\[LongEqual]\", \"0\"}],TraditionalForm]\). \nFor each simulated particle \
trajectory \!\(\*FormBox[StyleBox[\"j\", \"TI\"],TraditionalForm]\) the \
transfer efficiencies \!\(\*FormBox[RowBox[{SubscriptBox[StyleBox[\"E\", \"TI\
\"], RowBox[{StyleBox[\"j\", \"TI\"], \",\", \"1\"}]], \"...\", \
SubscriptBox[StyleBox[\"E\", \"TI\"], RowBox[{StyleBox[\"j\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"N\", \"TI\"], StyleBox[RowBox[{\"s\", \"t\"}], \
\"TI\"]]}]]}],TraditionalForm]\) of the internal states \
\!\(\*FormBox[RowBox[{StyleBox[\"s\", \"TI\"], \"\[LongEqual]\", \
RowBox[{\"1\", \"...\"}], SubscriptBox[StyleBox[\"N\", \"TI\"], \
StyleBox[RowBox[{\"s\", \"t\"}], \"TI\"]]}],TraditionalForm]\) are randomly \
chosen from the beta distributions \
\!\(\*FormBox[RowBox[{\"BetaDistribution\", RowBox[{\"[\", \
RowBox[{SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"s\", \"TI\"]], \
SubscriptBox[\"\[Nu]\", StyleBox[\"s\", \"TI\"]], \",\", RowBox[{\"(\", \
RowBox[{\"1\", \"-\", SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"s\", \
\"TI\"]]}], \")\"}], SubscriptBox[\"\[Nu]\", StyleBox[\"s\", \"TI\"]]}], \
\"]\"}]}],TraditionalForm]\). The photon detection rates on detector 1 \
(acceptor channel) and detector 2 (donor channel) for photons coming from \
particle j while being in internal state \!\(\*FormBox[StyleBox[\"s\", \
\"TI\"],TraditionalForm]\) are then given by \
\!\(\*FormBox[RowBox[{RowBox[{\"Inverse\", \"[\", \"rcm\", \"]\"}], \".\", \
RowBox[{\"(\", RowBox[{StyleBox[\"I\", \"TI\"], RowBox[{\"(\", \
StyleBox[\"r\",FontSlant->\"Bold\"], \")\"}], SubscriptBox[StyleBox[\"n\", \
\"TI\"], StyleBox[\"s\", \"TI\"]], RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"E\", \"TI\"], RowBox[{StyleBox[\"j\", \
\"TI\"], \",\", StyleBox[\"s\", \"TI\"]}]], \"+\", \"\[Alpha]\", \",\", \
\"1\", \"-\", SubscriptBox[StyleBox[\"E\", \"TI\"], RowBox[{StyleBox[\"j\", \
\"TI\"], \",\", StyleBox[\"s\", \"TI\"]}]]}], \"}\"}]}], \
\")\"}]}],TraditionalForm]\). \n\
\!\(\*StyleBox[\"FTSSimulateFRETStateTrajectories\", \
\"TB\"]\)\!\(\*FormBox[RowBox[{\"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \"TI\"]], \
\",\", \"fretmodel\", \",\", \
SubscriptBox[StyleBox[\"p\",FontSlant->\"Bold\"], \"0\"]}], \"}\"}], \
\"]\"}],TraditionalForm]\) is equivalent to calling \
FTSSimulateStateTrajectories\!\(\*FormBox[RowBox[{\"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \"TI\"]], \
\",\", \"fretmodel\", \",\", \
SubscriptBox[StyleBox[\"p\",FontSlant->\"Bold\"], \"0\"], \",\", \
SubscriptBox[StyleBox[\"K\",FontSlant->\"Bold\"], \"0\"]}], \"}\"}], \
\"]\"}],TraditionalForm]\) with \
\!\(\*FormBox[SubscriptBox[StyleBox[\"K\",FontSlant->\"Bold\"], \
\"0\"],TraditionalForm]\) set to the zero matrix of suitable dimension. \
Calling \!\(\*StyleBox[\"FTSSimulateFRETStateTrajectories\", \
\"TB\"]\)\!\(\*FormBox[RowBox[{\"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \"TI\"]], \
\",\", \"fretmodel\"}], \"}\"}], \"]\"}],TraditionalForm]\) is equivalent to \
FTSSimulateStateTrajectories\!\(\*FormBox[RowBox[{\"[\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \"TI\"]], \
\",\", \"fretmodel\", \",\", RowBox[{\"{\", RowBox[{\"1\", \",\", \"1\", \
\",\", \"..\"}], \"}\"}]}], \"}\"}], \"]\"}],TraditionalForm]\) .  \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129733033663616`*^9, 
  3.8129733035349236`*^9}},ExpressionUUID->"ce87cea9-be2d-4199-bc69-\
835f6e11a1bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTSSimulateTTTR", "  ", "::", "usage"}], "=", 
   "\"\<\!\(\*StyleBox[\"FTSSimulateTTTR\", \
\"TB\"]\)\!\(\*FormBox[RowBox[{\"[\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], RowBox[{StyleBox[\"b\", \
\"TI\"], StyleBox[\"g\", \"TI\"], \",\", \"1\"}]], \",\", \"...\", \",\", \
SubscriptBox[StyleBox[\"n\", \"TI\"], RowBox[{StyleBox[\"b\", \"TI\"], \
StyleBox[\"g\", \"TI\"], \",\", SubscriptBox[StyleBox[\"N\", \"TI\"], \
StyleBox[\"d\", \"TI\"]]}]]}], \"}\"}], \",\", SubscriptBox[StyleBox[\"r\", \
\"TI\"], \"max\"], \",\", SubscriptBox[StyleBox[\"w\", \"TI\"], \"0\"], \
\",\", SubscriptBox[StyleBox[\"z\", \"TI\"], \"0\"]}], \
\"]\"}],TraditionalForm]\) simulates photons (TTTR records) using the \
previously simulated particle trajectories and state trajectories, as well as \
the photon detection rates of the states. Depending on the format of \
trajectories, the excitation intensity distribution \
\!\(\*FormBox[RowBox[{StyleBox[\"I\", \"TI\"], \"(\", \
StyleBox[\"r\",FontSlant->\"Bold\"], \")\"}],TraditionalForm]\) of the \
confocal volume is given in cylindrical coordinates according to \
\!\(\*FormBox[RowBox[{StyleBox[\"I\", \"TI\"], RowBox[{\"(\", \
RowBox[{\"\[Rho]\", \",\", StyleBox[\"z\", \"TI\"]}], \")\"}], \"\[LongEqual]\
\", \"exp\", RowBox[{\"(\", RowBox[{\"-\", FractionBox[RowBox[{\"2\", \
SuperscriptBox[\"\[Rho]\", \"2\"]}], SubsuperscriptBox[StyleBox[\"w\", \
\"TI\"], \"0\", \"2\"]], \"-\", FractionBox[RowBox[{\"2\", \
SuperscriptBox[StyleBox[\"z\", \"TI\"], \"2\"]}], SubsuperscriptBox[StyleBox[\
\"z\", \"TI\"], \"0\", \"2\"]]}], \")\"}]}],TraditionalForm]\) or in \
spherical coordinates according to \!\(\*FormBox[RowBox[{StyleBox[\"I\", \"TI\
\"], RowBox[{\"(\", StyleBox[\"r\", \"TI\"], \")\"}], \"\[LongEqual]\", \"exp\
\", RowBox[{\"(\", RowBox[{\"-\", FractionBox[RowBox[{\"2\", \
SuperscriptBox[StyleBox[\"r\", \"TI\"], \"2\"]}], SubsuperscriptBox[StyleBox[\
\"w\", \"TI\"], \"0\", \"2\"]]}], \")\"}]}],TraditionalForm]\).  \n\
\!\(\*FormBox[RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], \
RowBox[{StyleBox[\"b\", \"TI\"], StyleBox[\"g\", \"TI\"], \",\", \"1\"}]], \
\",\", \"...\", \",\", SubscriptBox[StyleBox[\"n\", \"TI\"], \
RowBox[{StyleBox[\"b\", \"TI\"], StyleBox[\"g\", \"TI\"], \",\", \
SubscriptBox[StyleBox[\"N\", \"TI\"], StyleBox[\"d\", \"TI\"]]}]]}], \
\"}\"}],TraditionalForm]\):   List of mean background rates of the detection \
channels. \n\!\(\*FormBox[SubscriptBox[StyleBox[\"r\", \"TI\"], \
\"max\"],TraditionalForm]\):   For distances to the origin with \
\!\(\*FormBox[RowBox[{\"|\", StyleBox[\"r\",FontSlant->\"Bold\"], \"|\", \
\">\", SubscriptBox[StyleBox[\"r\", \"TI\"], \"max\"]}],TraditionalForm]\), \
the excitation intensity is set to zero \!\(\*FormBox[RowBox[{StyleBox[\"I\", \
\"TI\"], RowBox[{\"(\", StyleBox[\"r\",FontSlant->\"Bold\"], \")\"}], \"\
\[LongEqual]\", \"0\"}],TraditionalForm]\). \n\
\!\(\*FormBox[SubscriptBox[StyleBox[\"w\", \"TI\"], \
\"0\"],TraditionalForm]\):   Lateral dimension (semi\[Hyphen]minor axis) of \
the confocal volume in micrometers. \n\!\(\*FormBox[SubscriptBox[StyleBox[\"z\
\", \"TI\"], \"0\"],TraditionalForm]\):   Axial dimension (semi\[Hyphen]major \
axis) of the confocal volume in micrometers. \nOnly macro\[Hyphen]times are \
simulated. Micro\[Hyphen]times, i.e. lifetime channels, can be simulated for \
the photons using FTSSimulateTTTRLifeTimes.  \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733039709463`*^9, 
  3.812973304094983*^9}},ExpressionUUID->"9323f713-a883-4504-8c64-\
8275be15ee9b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FTSSimulateTTTRLifeTimes", "  ", "::", "usage"}], "=", 
   "\"\<\!\(\*StyleBox[\"FTSSimulateTTTRLifeTimes\", \
\"TB\"]\)[\!\(\*FormBox[RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], \
\"bg\"], \",\", SubscriptBox[StyleBox[\"r\", \"TI\"], \"max\"], \",\", \
SubscriptBox[StyleBox[\"w\", \"TI\"], \"0\"], \",\", \
SubscriptBox[StyleBox[\"z\", \"TI\"], \"0\"], \",\"}],TraditionalForm]\) \
chdis, bgdis] simulates microtimes (lifetime channels) for the photons \
simulated beforehand with FTSSimulateTTTR.  \n\
\!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \"TI\"], \
\"bg\"],TraditionalForm]\):   List of mean background rates of the detection \
channels: \!\(\*FormBox[RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"n\", \
\"TI\"], RowBox[{\"bg\", \",\", \"1\"}]], \",\", \"...\", \",\", \
SubscriptBox[StyleBox[\"n\", \"TI\"], RowBox[{\"bg\", \",\", \
SubscriptBox[StyleBox[\"N\", \"TI\"], StyleBox[\"d\", \"TI\"]]}]]}], \
\"}\"}],TraditionalForm]\) \n\!\(\*FormBox[SubscriptBox[StyleBox[\"r\", \
\"TI\"], \"max\"],TraditionalForm]\):   For distances to the origin with \!\(\
\*FormBox[RowBox[{\"|\", StyleBox[\"r\",FontSlant->\"Bold\"], \"|\", \">\", \
SubscriptBox[StyleBox[\"r\", \"TI\"], \"max\"]}],TraditionalForm]\) the \
excitation intensity is set to zero \!\(\*FormBox[RowBox[{StyleBox[\"I\", \
\"TI\"], RowBox[{\"(\", StyleBox[\"r\",FontSlant->\"Bold\"], \")\"}], \"\
\[LongEqual]\", \"0\"}],TraditionalForm]\). \n\
\!\(\*FormBox[SubscriptBox[StyleBox[\"w\", \"TI\"], \
\"0\"],TraditionalForm]\):   Lateral dimension (semi\[Hyphen]minor axis) of \
the confocal volume in micrometers. \n\!\(\*FormBox[SubscriptBox[StyleBox[\"z\
\", \"TI\"], \"0\"],TraditionalForm]\):   Axial dimension (semi\[Hyphen]major \
axis) of the confocal volume in micrometers. \nchdis:   Nested list, where \
chdis\!\(\*FormBox[RowBox[{\"[\", RowBox[{\"[\", \
RowBox[{SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[RowBox[{\"s\", \"t\"}], \
\"TI\"]], \",\", StyleBox[\"d\", \"TI\"]}], \"]\"}], \"]\"}],TraditionalForm]\
\) is a list of numbers representing the lifetime\[Hyphen]channel \
distribution on detector \!\(\*FormBox[StyleBox[\"d\", \
\"TI\"],TraditionalForm]\) of fluorescence photons from a particle of species \
\!\(\*FormBox[SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[\"s\", \
\"TI\"]],TraditionalForm]\) being in state \
\!\(\*FormBox[SubscriptBox[StyleBox[\"i\", \"TI\"], StyleBox[RowBox[{\"s\", \
\"t\"}], \"TI\"]],TraditionalForm]\). \nbgdis:   List of length \
\!\(\*FormBox[SubscriptBox[StyleBox[\"N\", \"TI\"], StyleBox[\"d\", \
\"TI\"]],TraditionalForm]\), where bgdis\!\(\*FormBox[RowBox[{\"[\", RowBox[{\
\"[\", StyleBox[\"d\", \"TI\"], \"]\"}], \"]\"}],TraditionalForm]\) is a list \
of numbers representing the lifetime\[Hyphen]channel distribution of \
background photons on detector \!\(\*FormBox[StyleBox[\"d\", \
\"TI\"],TraditionalForm]\). \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973304539234*^9, 
  3.8129733046647863`*^9}},ExpressionUUID->"2c37bd2f-c255-4d4a-9189-\
be2b81c70185"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSimulateNanoSecondFCS", "  ", "::", "usage"}], "=", 
   "\"\<FSimulateNanoSecondFCS[p0\!\(TraditionalForm\`_\)List,Kstatic\!\(\
TraditionalForm\`_\)List,KFRET\!\(TraditionalForm\`_\)List,VD\!\(\
TraditionalForm\`_\)List,VA\!\(TraditionalForm\`_\)List,kFTrajectory\!\(\
TraditionalForm\`_\)List,substeps\!\(TraditionalForm\`_\)Integer,taumax\!\(\
TraditionalForm\`_\)Integer,dtau\!\(TraditionalForm\`_\)Integer,repeats\!\(\
TraditionalForm\`_\)Integer] FOutput\!\(\(TraditionalForm\` \[Rule] \
\)\)FData, or FOutput\!\(\(TraditionalForm\` \[Rule] \)\)FRawData\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973305055009*^9, 3.812973305171357*^9}, {
  3.8583267662058573`*^9, 
  3.8583268002924647`*^9}},ExpressionUUID->"2ccba7b0-ab6c-4519-a0d3-\
c73794cf5b8e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSimulatePhotonTrajectory", "  ", "::", "usage"}], "=", 
   "\"\<FSimulatePhotonTrajectory[p0\!\(TraditionalForm\`_\)List,Kstatic\!\(\
TraditionalForm\`_\)List,KFRET\!\(TraditionalForm\`_\)List,VD\!\(\
TraditionalForm\`_\)LIST,VA\!\(TraditionalForm\`_\)List,kFTrajectory\!\(\
TraditionalForm\`_\)List,substeps\!\(TraditionalForm\`_\)Integer] \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129733055127964`*^9, 
  3.8129733056245375`*^9}},ExpressionUUID->"f2a63eb5-14b3-4c4c-8809-\
d7c66dcb963c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSimulatePullingInOpticalTrap", "  ", "::", "usage"}], "=", 
   "\"\<FSimulatePullingInOpticalTrap[r0:\!\(TraditionalForm\`{{_\),\!\(\
TraditionalForm\`\(\(_\)\(}\)\)\)..\!\(\(TraditionalForm\`}\)\),dt\!\(\
TraditionalForm\`_\),timesteps\!\(TraditionalForm\`_\)Integer,Dm\!\(\
TraditionalForm\`_\)Real,DB\!\(TraditionalForm\`_\),x0\!\(TraditionalForm\`_\)\
,DeltaG\!\(TraditionalForm\`_\),L0\!\(TraditionalForm\`_\),k\!\(\
TraditionalForm\`_\),FTrap\!\(TraditionalForm\`_\)] \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733060142727`*^9, 
  3.812973306129813*^9}},ExpressionUUID->"db403a30-7d31-4f37-aa6b-\
9b10f6d86325"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FMoveIn2DPot", "  ", "::", "usage"}], "=", 
   "\"\<FMoveIn2DPot[\!\(TraditionalForm\`{\[Null]\)x0\!\(TraditionalForm\`_\)\
,y0\!\(TraditionalForm\`\(\(_\)\(}\)\)\),dt\!\(TraditionalForm\`_\),timesteps\
\!\(TraditionalForm\`_\)Integer,k\!\(TraditionalForm\`_\),ktrans\!\(\
TraditionalForm\`_\),xC\!\(TraditionalForm\`_\),k4\!\(TraditionalForm\`_\)] \
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733065237083`*^9, 
  3.8129733066437435`*^9}},ExpressionUUID->"fbf61599-18a5-4d8b-9e4b-\
945d85280f0e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FLifeTimeFit", "  ", "::", "usage"}], "=", 
   "\"\<FLifeTimeFit[histo, irf, modelfunc[\!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"p\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"p\", \"TI\"], \"2\"], \",\", \"...\"}], \
\"}\"}],TraditionalForm]\)], guess, timeshift]\n\nFLifeTimeFit fits the \
cyclic convolution conv\[LongEqual]modelfunc[\!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"p\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"p\", \"TI\"], \"2\"], \",\", \"...\"}], \
\"}\"}],TraditionalForm]\) ]*irf to experimental data represented in histo \
using the instrument response function irf. \nhisto and irf data are supplied \
in the form \!\(\*FormBox[RowBox[{\"{\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"y\", \"TI\"], \"1\"]}], \"}\"}]}],TraditionalForm]\), \
\!\(\*FormBox[RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"t\", \
\"TI\"], \"2\"], \",\", SubscriptBox[StyleBox[\"y\", \"TI\"], \"2\"]}], \
\"}\"}], \"...\", \"}\"}],TraditionalForm]\).\n\
modelfunc[\!\(\*FormBox[RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"p\", \
\"TI\"], \"1\"], \",\", SubscriptBox[StyleBox[\"p\", \"TI\"], \"2\"], \",\", \
\"...\"}], \"}\"}],TraditionalForm]\) ][t] is the fluorescence decay \
function, e.g., \
f[\!\(TraditionalForm\`{\[Null]\)a\!\(TraditionalForm\`_\),k\!\(\
TraditionalForm\`_\),c\!\(TraditionalForm\`\(\(_\)\(}\)\)\)][t\!\(\
TraditionalForm\`_\)]:\[LongEqual]a Exp[\[Hyphen]k t]+c .\n\nPrior to \
convolution, the sequence of \!\(\*FormBox[StyleBox[\"y\", \
\"TI\"],TraditionalForm]\)\[Hyphen]values in irf is cyclically rotated to the \
right by the number of steps defined by the integer timeshift. \nInitial \
guess values for the fit parameters \
\!\(\*FormBox[SubscriptBox[StyleBox[\"p\", \"TI\"], \
\"1\"],TraditionalForm]\), \!\(\*FormBox[SubscriptBox[StyleBox[\"p\", \
\"TI\"], \"2\"],TraditionalForm]\), etc. are given in guess in the form guess\
\[LongEqual]\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"p\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"g\", \"TI\"], \"1\"]}], \"}\"}]}],TraditionalForm]\), \
\!\(\*FormBox[RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"p\", \
\"TI\"], \"2\"], \",\", SubscriptBox[StyleBox[\"g\", \"TI\"], \"2\"]}], \
\"}\"}], \"...\", \"}\"}],TraditionalForm]\), where \
\!\(\*FormBox[SubscriptBox[StyleBox[\"g\", \"TI\"], StyleBox[\"i\", \
\"TI\"]],TraditionalForm]\) are initial guess values.\n\nExample:\n\
FLifeTimeFit[histo, irf, \
f[\!\(TraditionalForm\`{\[Null]\)a,k,c\!\(\(TraditionalForm\`}\)\)], \
\!\(TraditionalForm\`{{\[Null]\)a,1000\!\(\(TraditionalForm\`}\)\),\!\(\
TraditionalForm\`{\[Null]\)k,0.25\!\(\(TraditionalForm\`}\)\), \
\!\(TraditionalForm\`{\[Null]\)c,5\!\(TraditionalForm\`\(\(}\)\(}\)\)\), \
timeshift]\n\nFLifeTimeFit returns\n\
\!\(TraditionalForm\`{{\*SuperscriptBox[\(\[Chi]\), \(2\)]\), \
\!\(\*FormBox[RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"p\", \
\"TI\"], \"1\"], \"\[Rule]\", SubscriptBox[StyleBox[\"b\", \"TI\"], \"1\"], \
\",\", SubscriptBox[StyleBox[\"p\", \"TI\"], \"2\"], \"\[Rule]\", \
SubscriptBox[StyleBox[\"b\", \"TI\"], \"2\"], \",\", \"...\"}], \"}\"}], \
\"}\"}],TraditionalForm]\), fitcurve, residuals \!\(\(TraditionalForm\`}\)\),\
\nwhere \!\(\*FormBox[SubscriptBox[StyleBox[\"b\", \"TI\"], StyleBox[\"i\", \
\"TI\"]],TraditionalForm]\) is the best fit value for \
\!\(\*FormBox[SubscriptBox[StyleBox[\"p\", \"TI\"], StyleBox[\"i\", \
\"TI\"]],TraditionalForm]\).\n\nFor a total of \!\(\*FormBox[StyleBox[\"N\", \
\"TI\"],TraditionalForm]\) histogram bins, \
\!\(TraditionalForm\`\*SuperscriptBox[\(\[Chi]\), \(2\)]\) is defined as\n\n\
\!\(\*FormBox[RowBox[{SuperscriptBox[\"\[Chi]\", \"2\"], \"\[LongEqual]\", \
FractionBox[\"1\", StyleBox[\"N\", \"TI\"]], UnderoverscriptBox[\"\[Sum]\", \
RowBox[{StyleBox[\"n\", \"TI\"], \"\[LongEqual]\", \"1\"}], StyleBox[\"N\", \
\"TI\"],LimitsPositioning->True], FractionBox[SuperscriptBox[RowBox[{\"(\", \
RowBox[{\"histo\", RowBox[{\"[\", RowBox[{\"[\", StyleBox[\"n\", \"TI\"], \"]\
\"}], \"]\"}], \"-\", \"conv\", RowBox[{\"[\", RowBox[{\"[\", StyleBox[\"n\", \
\"TI\"], \"]\"}], \"]\"}]}], \")\"}], \"2\"], SuperscriptBox[\"\[Sigma]\", \
\"2\"]], \"\[LongEqual]\", FractionBox[\"1\", StyleBox[\"N\", \"TI\"]], \
UnderoverscriptBox[\"\[Sum]\", RowBox[{StyleBox[\"n\", \"TI\"], \
\"\[LongEqual]\", \"1\"}], StyleBox[\"N\", \"TI\"],LimitsPositioning->True], \
FractionBox[SuperscriptBox[RowBox[{\"(\", RowBox[{\"histo\", RowBox[{\"[\", \
RowBox[{\"[\", StyleBox[\"n\", \"TI\"], \"]\"}], \"]\"}], \"-\", \"conv\", \
RowBox[{\"[\", RowBox[{\"[\", StyleBox[\"n\", \"TI\"], \"]\"}], \"]\"}]}], \
\")\"}], \"2\"], RowBox[{\"conv\", RowBox[{\"[\", RowBox[{\"[\", StyleBox[\"n\
\", \"TI\"], \"]\"}], \"]\"}]}]]}],TraditionalForm]\),\n\ni.e., we assume \
Poisson\[Hyphen]distributed counts in each bin of the histogram histo.\nSets \
of combined histograms can be fitted globally by using:\nFLifeTimeFit[ \
\!\(TraditionalForm\`{\[Null]\)histo1, histo2, \
...\!\(\(TraditionalForm\`}\)\), \!\(TraditionalForm\`{\[Null]\)irf1, irf2, \
...\!\(\(TraditionalForm\`}\)\), \
\!\(TraditionalForm\`{\[Null]\)modelfunc1,modelfunc2, \
...\!\(\(TraditionalForm\`}\)\), guess, \
\!\(TraditionalForm\`{\[Null]\)timeshift1, timshift2, \
...\!\(\(TraditionalForm\`}\)\)]\n\nOptions:\n FOutput\!\(\(TraditionalForm\` \
\[Rule] \)\)FGraph (default value), fitcurve and residuals are represented \
graphically.\n FOutput\!\(\(TraditionalForm\` \[Rule] \)\)FData, fitcurve and \
residuals are returned as lists.\n All options of ListLogPlot can be supplied \
to FLifeTimeFit. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973307072036*^9, 
  3.8129733072048206`*^9}},ExpressionUUID->"e1f78996-6cbb-4216-8146-\
d11ded25d55c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FNDAcceptorLifeTimeDecay", "  ", "::", "usage"}], "=", 
   "\"\<FNDAcceptorLifeTimeDecay[timelist:\!\(TraditionalForm\`{_\)Real..\!\(\
\(TraditionalForm\`}\)\),RFret\!\(TraditionalForm\`_\)Real,kD\!\(\
TraditionalForm\`_\)Real,kA\!\(TraditionalForm\`_\)Real,mean\!\(\
TraditionalForm\`_\)Real,sigma\!\(TraditionalForm\`_\)Real] \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129733076194315`*^9, 
  3.812973307734988*^9}},ExpressionUUID->"85e00da4-d589-4d68-9080-\
a614ce8d09ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FNDDonorLifeTimeDecay", "  ", "::", "usage"}], "=", 
   "\"\<FNDDonorLifeTimeDecay[timelist:\!\(TraditionalForm\`{_\)Real..\!\(\(\
TraditionalForm\`}\)\),RFret\!\(TraditionalForm\`_\)Real,kD\!\(\
TraditionalForm\`_\)Real,mean\!\(TraditionalForm\`_\)Real,sigma\!\(\
TraditionalForm\`_\)Real] \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973308122553*^9, 
  3.8129733082400923`*^9}},ExpressionUUID->"bb2cc0b4-1735-48a6-bb19-\
ab4c707320c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGCAcceptorLifeTimeDecay", "  ", "::", "usage"}], "=", 
   "\"\<FGCAcceptorLifeTimeDecay[timelist:\!\(TraditionalForm\`{_\)Real..\!\(\
\(TraditionalForm\`}\)\),RFret\!\(TraditionalForm\`_\)Real,kD\!\(\
TraditionalForm\`_\)Real,kA\!\(TraditionalForm\`_\)Real,Rrms\!\(\
TraditionalForm\`_\)Real] \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973308624292*^9, 
  3.812973308738326*^9}},ExpressionUUID->"443c3377-6fa5-4906-b229-\
8d2d9814c4a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGCDonorLifeTimeDecay", "  ", "::", "usage"}], "=", 
   "\"\<FGCDonorLifeTimeDecay[timelist:\!\(TraditionalForm\`{_\)Real..\!\(\(\
TraditionalForm\`}\)\),RFret\!\(TraditionalForm\`_\)Real,kD\!\(\
TraditionalForm\`_\)Real,Rrms\!\(TraditionalForm\`_\)Real] \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129733091272087`*^9, 
  3.8129733092383027`*^9}},ExpressionUUID->"5c0260cf-3d97-42cc-932f-\
d33cff9ec160"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FProximityRatio", "  ", "::", "usage"}], "=", 
   "\"\<FProximityRatio[\!\(TraditionalForm\`\[Alpha]\),\!\(TraditionalForm\`\
\[Beta]\),\!\(TraditionalForm\`\[Gamma]\)][\!\(TraditionalForm\`\[Epsilon]\)] \
returns the proximity ratio calculated from transfer efficiency \
\!\(TraditionalForm\`\[Epsilon]\) and the correction factors \n\
\!\(TraditionalForm\`\(\(\\\ \\\ \\\ \\\ \)\(\[Alpha]\)\)\)\[LongEqual] \
acceptor direct excitation\n\!\(TraditionalForm\`\(\(\\\ \\\ \\\ \\\ \)\(\
\[Beta]\)\)\)\[LongEqual] crosstalk D\!\(\(TraditionalForm\` \[Rule] \)\)A\n\
\!\(TraditionalForm\`\(\(\\\ \\\ \\\ \\\ \)\(\[Gamma]\)\)\)\[LongEqual] FRET \
correction factor for quantum yields and detection efficiencies \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129733096068983`*^9, 
  3.812973309700651*^9}},ExpressionUUID->"5598bc38-97bc-46b9-82e1-\
6c91e6d0da3b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FBetaPeak", "  ", "::", "usage"}], "=", 
   "\"\<FBetaPeak[\!\(TraditionalForm\`\[Mu]\),v][p] peak function for PDA \
fitting. It corresponds to PDF[BetaDistribution[a,b],p1]/.\!\(TraditionalForm\
\`{\[Null]\)a\!\(TraditionalForm\`\(\(\[Rule]\)\(\[Mu]\)\)\) \
v,b\!\(\(TraditionalForm\` \[Rule] \
\)\)(1\[Hyphen]\!\(TraditionalForm\`\[Mu]\))v\!\(\(TraditionalForm\`}\)\) \
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733100756674`*^9, 
  3.81297331018505*^9}},ExpressionUUID->"d633b856-da7c-4c37-98e7-\
30100b85e295"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FpdaDonly", "  ", "::", "usage"}], "=", 
   "\"\<Option for FpdaEHisto and FpdaFitEHisto. If \
FpdaDonly\!\(\(TraditionalForm\` \[Rule] \)\)True, the first population in \
PDA model is assumed to represent the donor\[Hyphen]only population. In this \
case, acceptor direct excitation is set to zero for this peak. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973310544436*^9, 
  3.8129733106538153`*^9}},ExpressionUUID->"00ee285e-1dbd-4885-a7dc-\
13d4b88d2c41"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FpdaEHisto", "  ", "::", "usage"}], "=", 
   "\"\<FpdaEHisto[ ehisto, pF, model, \!\(TraditionalForm\`{\[Null]\)bgD, \
bgA\!\(\(TraditionalForm\`}\)\) ] calculates a transfer efficiency histogram \
from a photon distribution analysis (PDA) model.\nehisto is a transfer \
efficiency histogram of the form \!\(TraditionalForm\`{{\[Null]\) E1, A1, \
dE\!\(\(TraditionalForm\`}\)\),...\!\(\(TraditionalForm\`}\)\), i.e., it is \
of the same form as a histogram returned by\n\
FParamHisto[\\\"E\\\",erange,FOutput\!\(\(TraditionalForm\` \[Rule] \
\)\)FData]\npF\[LongEqual](pF1, pF2,...\!\(\(TraditionalForm\`}\)\) is a list \
of fluorescence photon burst size distributions of the individual \
subpopulations, where pFi is of the form???\n\
model\[LongEqual]\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"a\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"e\", \"TI\"], \"1\"], \",\", SubscriptBox[\"\[Nu]\", \
\"1\"]}], \"}\"}]}],TraditionalForm]\), \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"a\", \"TI\"], \"2\"], \",\", \
SubscriptBox[StyleBox[\"e\", \"TI\"], \"2\"], \",\", SubscriptBox[\"\[Nu]\", \
\"2\"]}], \"}\"}],TraditionalForm]\), ...\!\(\(TraditionalForm\`}\)\) is the \
PDA model of the subpopulations with\n\!\(\*FormBox[SubscriptBox[StyleBox[\"a\
\", \"TI\"], StyleBox[\"i\", \"TI\"]],TraditionalForm]\)\[LongEqual] area of \
\!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\)th peak\n\
\!\(\*FormBox[SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"i\", \
\"TI\"]],TraditionalForm]\)\[LongEqual]mean transfer efficiency of \
\!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\)th peak\n\
\!\(\*FormBox[SubscriptBox[\"\[Nu]\", StyleBox[\"i\", \
\"TI\"]],TraditionalForm]\)\[LongEqual]shape parameter of \
\!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\)th peak\n\
\!\(TraditionalForm\`{\[Null]\)bgD, bgA\!\(\(TraditionalForm\`}\)\) are the \
mean background counts per photon burst of the donor and acceptor detection \
route, respectively.\n\nFpdaEHisto[ ehisto, pF, model] is equivalent to\n\
FpdaEHisto[ ehisto, pF, model, FpdaGetDABackground[] ]\n\
FpdaEHisto[\!\(TraditionalForm\`{\[Null]\)e1,e2,de\!\(\(TraditionalForm\`}\)\)\
,pF, etc.] is equivalent to\nFpdaEHisto[ FParamHisto[\\\"E\\\", \
\!\(TraditionalForm\`{\[Null]\)e1, e2, de\!\(\(TraditionalForm\`}\)\), \
FOutput\!\(\(TraditionalForm\` \[Rule] \)\)FData ], pF, etc.]\n\nOptions:\n\!\
\(\(TraditionalForm\`\\\ \\\ \)\)FOutput\!\(\(TraditionalForm\` \[Rule] \
\)\)FGraph (default) or FOutput\!\(\(TraditionalForm\` \[Rule] \)\)FData\n\
\!\(\(TraditionalForm\`\\\ \\\ \)\)FPDAMethod\!\(\(TraditionalForm\` \[Rule] \
\)\) \\\"Approximate pF by pS \\\" (default) Use this setting if pF is not \
the true fluorescence distribution without background, but \
pS\[LongEqual]pF*pB, the measured signal distribution.\n\!\(\(TraditionalForm\
\`\\\ \\\ \)\)FpdaDonly\!\(\(TraditionalForm\` \[Rule] \)\)True (default) The \
first subpopulation of the PDA model is assumed to represent the donor\
\[Hyphen]only population (internally, the acceptor direct excitation is set \
to zero for this peak).\n\!\(\(TraditionalForm\`\\\ \\\ \
\)\)FFitCurveOptions\!\(TraditionalForm\`\(\(\[Rule]\)\({\[Null]\)\)\)\
PlotRange\!\(\(TraditionalForm\` \[Rule] \)\)All, \
PlotStyle\!\(\(TraditionalForm\` \[Rule] \)\)Red, ...\!\(\(TraditionalForm\`}\
\)\) Every option of ListLinePlot can be used to change the appearance of the \
PDA curve.\n\!\(\(TraditionalForm\`\\\ \\\ \
\)\)FSubPopCurveOptions\!\(TraditionalForm\`\(\(\[Rule]\)\({\[Null]\)\)\)\
PlotRange\!\(\(TraditionalForm\` \[Rule] \)\)All, \
PlotStyle\!\(\(TraditionalForm\` \[Rule] \)\)Red, ...\!\(\(TraditionalForm\`}\
\)\) Every option of ListLinePlot can be used to change the appearance of the \
subpopulation PDA curves.\n\!\(\(TraditionalForm\`\\\ \\\ \
\)\)FpdaShowIntrinsicDistribution\!\(\(TraditionalForm\` \[Rule] \)\)True The \
intrinsic transfer efficiency distribution is drawn in a separate panel.\n\
\!\(\(TraditionalForm\`\\\ \\\ \
\)\)FpdaIntrinsicDistributionPlotOptions\!\(\(TraditionalForm\` \[Rule] \
\)\)\!\(\(TraditionalForm\`{\)\)PlotStyle \!\(\(TraditionalForm\` \[Rule] \
\)\) Darker@Green\!\(\(TraditionalForm\`}\)\) (default) plot options for the \
intrinsic transfer efficiency distribution.\n\!\(\(TraditionalForm\`\\\ \\\ \
\)\)In addition, all options of Histogram are applicable.\n\nWarning: \n\
\!\(\(TraditionalForm\`\\\ \\\ \)\)Make sure that the FRET detection routes, \
the RCM, and the acceptor direct excitation are set correctly in Fretica \
before using FpdaEHisto.\n\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973311044454*^9, 
  3.8129733111694584`*^9}},ExpressionUUID->"c83932ab-60fd-48de-a15f-\
54c65f429da7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FpdaIntrinsicDistributionPlotOptions", "  ", "::", "usage"}], 
   "=", "\"\<Option of FpdaEHisto and FpdaFitEHisto. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.81297331187261*^9, 
  3.812973311981989*^9}},ExpressionUUID->"3efba63f-b79e-40e3-890f-\
44f51e85634e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FpdaEHistoSubpopulations", "  ", "::", "usage"}], "=", 
   "\"\<FpdaEHistoSubpopulations[ehisto:\!\(TraditionalForm\`{{_\) ?NumericQ, \
\!\(TraditionalForm\`_\)?NumericQ, \!\(TraditionalForm\`_\)?NumericQ \
\!\(\(TraditionalForm\`}\)\)... \!\(\(TraditionalForm\`}\)\), \
pF:\!\(TraditionalForm\`{{_\)?NumericQ..\!\(\(TraditionalForm\`}\)\)..\!\(\(\
TraditionalForm\`}\)\), model:\!\(TraditionalForm\`{{_\)?NumericQ, \
\!\(TraditionalForm\`_\)?NumericQ, \
\!\(TraditionalForm\`_\)?NumericQ\!\(\(TraditionalForm\`}\)\)..\!\(\(\
TraditionalForm\`}\)\), \!\(TraditionalForm\`{\[Null]\)bgD\!\(TraditionalForm\
\`_\)?NumericQ, \
bgA\!\(TraditionalForm\`_\)?NumericQ\!\(\(TraditionalForm\`}\)\), \
opts:OptionsPattern[]] \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973312357004*^9, 
  3.812973312466385*^9}},ExpressionUUID->"df8a1a7f-1f7c-4f4f-84e5-\
7ae3d7d58fd2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FpdaFitEHisto", "  ", "::", "usage"}], "=", 
   "\"\<FpdaFitEHisto[ ehisto, pF, model, guess, \
\!\(TraditionalForm\`{\[Null]\)bgD, bgA\!\(\(TraditionalForm\`}\)\) ]\nfits \
the photon distribution analyis (PDA) model to the transfer efficiency \
histogram ehisto.\nehisto is of the form \!\(TraditionalForm\`{{\[Null]\)E1, \
A1, dE\!\(\(TraditionalForm\`}\)\),...\!\(\(TraditionalForm\`}\)\), i.e., of \
the same form as a histogram returned by FParamHisto[\\\"E\\\",erange,FOutput\
\!\(\(TraditionalForm\` \[Rule] \)\)FData].\npF\[LongEqual](pF1, \
pF2,...\!\(\(TraditionalForm\`}\)\) is a list of fluorescence photon burst \
size distributions of the individual subpopulations, where pFi is of the \
form???\nmodel\[LongEqual]\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"a\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"e\", \"TI\"], \"1\"], \",\", SubscriptBox[\"\[Nu]\", \
\"1\"]}], \"}\"}]}],TraditionalForm]\), \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"a\", \"TI\"], \"2\"], \",\", \
SubscriptBox[StyleBox[\"e\", \"TI\"], \"2\"], \",\", SubscriptBox[\"\[Nu]\", \
\"2\"]}], \"}\"}],TraditionalForm]\), ...\!\(\(TraditionalForm\`}\)\) is the \
PDA model of the subpopulations with\n\!\(\*FormBox[SubscriptBox[StyleBox[\"a\
\", \"TI\"], StyleBox[\"i\", \"TI\"]],TraditionalForm]\)\[LongEqual] area of \
\!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\)th peak\n\
\!\(\*FormBox[SubscriptBox[StyleBox[\"e\", \"TI\"], StyleBox[\"i\", \
\"TI\"]],TraditionalForm]\)\[LongEqual]mean transfer efficiency of \
\!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\)th peak\n\
\!\(\*FormBox[SubscriptBox[\"\[Nu]\", StyleBox[\"i\", \
\"TI\"]],TraditionalForm]\)\[LongEqual]shape parameter of \
\!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\)th peak\nguess\
\[LongEqual]\!\(TraditionalForm\`{{\[Null]\) \
paramsymbol,value\!\(\(TraditionalForm\`}\)\)...\!\(\(TraditionalForm\`}\)\) \
is a list of all fit parameters of the model, each provided with an initial \
guess value. \n\!\(TraditionalForm\`{\[Null]\)bgD, \
bgA\!\(\(TraditionalForm\`}\)\) are the mean background counts per photon \
burst of the donor and acceptor detection routes, respectively.\n\n\
FpdaFitEHisto[ ehisto, pF, model, guess] is equivalent to\nFpdaFitEHisto[ \
ehisto, pF, model, guess, FpdaGetDABackground[]]\n\
FpdaFitEHisto[\!\(TraditionalForm\`{\[Null]\)e1, e2, \
de\!\(\(TraditionalForm\`}\)\), pF, etc.] is equivalent to\n\
FpdaFitEHisto[FParamHisto[\\\"E\\\", \!\(TraditionalForm\`{\[Null]\)e1, e2, \
de\!\(\(TraditionalForm\`}\)\), FOutput\!\(\(TraditionalForm\` \[Rule] \
\)\)FData], pF, etc.]\n\nGlobal Fit of a list of transfer efficiency \
histograms::\nFpdaFitEHisto[\!\(TraditionalForm\`{\[Null]\)ehisto1, ehisto2, \
...\!\(\(TraditionalForm\`}\)\), pF, \!\(TraditionalForm\`{\[Null]\)model1, \
model2, ...\!\(\(TraditionalForm\`}\)\) ,guess, etc.] \n\n\nOptions:\n\
\!\(\(TraditionalForm\`\\\ \\\ \)\)FOutput\!\(\(TraditionalForm\` \[Rule] \
\)\)FGraph (default) or FOutput\!\(\(TraditionalForm\` \[Rule] \)\)FData\n\
\!\(\(TraditionalForm\`\\\ \\\ \)\)FPDAMethod\!\(\(TraditionalForm\` \[Rule] \
\)\) \\\"Approximate pF by pS \\\" (default) Use this setting if pF is not \
the true fluorescence distribution without background, but \
pS\[LongEqual]pF*pB, the measured signal distribution.\n\!\(\(TraditionalForm\
\`\\\ \\\ \)\)FpdaDonly\!\(\(TraditionalForm\` \[Rule] \)\)True (default) The \
first subpopulation of the PDA model is assumed to represent the donor\
\[Hyphen]only population. (Internally, the acceptor direct excitation is set \
to zero for this peak. In addition, the intrinsic distribution of this peak \
is not shown.)\n\!\(\(TraditionalForm\`\\\ \\\ \
\)\)FConstraints\!\(\(TraditionalForm\` \[Rule] \)\)None (default) or \
FConstraints\!\(\(TraditionalForm\` \[Rule] \)\)constrains. E.g. FConstraints\
\!\(\*FormBox[RowBox[{\"\[Rule]\", \"(\", \
RowBox[{SubscriptBox[StyleBox[\"e\", \"TI\"], \"1\"], \"<\", RowBox[{\"0.1\", \
\"&&\"}], SubscriptBox[StyleBox[\"e\", \"TI\"], \"3\"], \">\", \"0.8\"}], \")\
\"}],TraditionalForm]\).\n\!\(\(TraditionalForm\`\\\ \\\ \)\)In addition, all \
options of FpdaEHisto and FindMinimum are applicable.\n\nWarning: \n\
\!\(\(TraditionalForm\`\\\ \\\ \)\)Make sure that the FRET detection routes, \
the RCM, and the acceptor direct excitation are set correctly in Fretica \
before using FpdaEHisto.\n\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973312872651*^9, 
  3.812973312997657*^9}},ExpressionUUID->"5766df08-7318-4890-9462-\
c343aca3cd2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FpdaGetDABackground", "  ", "::", "usage"}], "=", 
   "\"\<FpdaGetDABackground[\!\(TraditionalForm\`{\[Null]\) bg1, bg2, \
..\!\(\(TraditionalForm\`}\)\)]\nreturns \!\(TraditionalForm\`{\[Null]\) bgD, \
bgA\!\(\(TraditionalForm\`}\)\), which are the mean total background counts \
per photon burst for all donor and acceptor detection routes, respectively.\n\
\!\(\*FormBox[RowBox[{StyleBox[\"b\", \"TI\"], SubscriptBox[StyleBox[\"g\", \
\"TI\"], StyleBox[\"i\", \"TI\"]]}],TraditionalForm]\) is the background rate \
of the \!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\)th detection \
route in counts per second.\n\nFpdaGetDABackground[] is equivalent to\n\
FpdaGetDABackground[ FGetBackground[]] \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733137164345`*^9, 
  3.8129733138258133`*^9}},ExpressionUUID->"83e15e3d-d5b2-459f-aa3b-\
2772c53759f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FpdaGetSubPopBurstSizeDistributions", "  ", "::", "usage"}], "=", 
   "\"\<FpdaGetSubPopBurstSizeDistributions[\!\(TraditionalForm\`{{\[Null]\)\
e11,e22\!\(\(TraditionalForm\`}\)\), \!\(TraditionalForm\`{\[Null]\)e21,e22\!\
\(\(TraditionalForm\`}\)\)...\!\(\(TraditionalForm\`}\)\),Fmax,\!\(\
TraditionalForm\`{\[Null]\)Elist,burstsizelist\!\(\(TraditionalForm\`}\)\)] \
returns a list of burst size distributions.\n\!\(TraditionalForm\`\(\(\\\ \\\ \
\\\ \\\ \)\({\[Null]\)\)\)ei1,ei2\!\(\(TraditionalForm\`}\)\) is the transfer \
efficiency interval of the \!\(\*FormBox[StyleBox[\"i\", \
\"TI\"],TraditionalForm]\)th photon burst size distribution.\n\
\!\(\(TraditionalForm\`\\\ \\\ \\\ \\\ \)\)Fmax: Burst size distributions are \
calculated up to the maximal burst size Fmax.\n\!\(\(TraditionalForm\`\\\ \\\ \
\\\ \\\ \)\)Elist: List of transfer efficiencies of all photon bursts.\n\
\!\(\(TraditionalForm\`\\\ \\\ \\\ \\\ \)\)burstsizelist: List of burst sizes \
of all photon bursts.\n\n\
FpdaGetSubPopBurstSizeDistributions[\!\(TraditionalForm\`{{\[Null]\)e11,e22\!\
\(\(TraditionalForm\`}\)\), \
\!\(TraditionalForm\`{\[Null]\)e21,e22\!\(\(TraditionalForm\`}\)\)...\!\(\(\
TraditionalForm\`}\)\),Fmax] is equivalent to \
FpdaGetSubPopBurstSizeDistributions[eranges,Fmax,FGetFromBurstList[\!\(\
TraditionalForm\`{\[Null]\)\\\"E\\\",\\\"nA\!\(TraditionalForm\`_\)raw\\\"+\\\
\"nD\!\(TraditionalForm\`_\)raw\\\"\!\(\(TraditionalForm\`}\)\)]]  \n\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129733142008266`*^9, 
  3.8129733143258314`*^9}},ExpressionUUID->"f8c18df2-9de1-40a8-81ff-\
86c875f3f6e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FpdaIntrinsicDistribution", "  ", "::", "usage"}], "=", 
   "\"\<FpdaIntrinsicDistribution[ \!\(TraditionalForm\`{\[Null]\) \
\!\(TraditionalForm\`{\[Null]\)a1,e1,v1\!\(\(TraditionalForm\`}\)\), \
\!\(TraditionalForm\`{\[Null]\)a2,e2,v2\!\(\(TraditionalForm\`}\)\), \
...\!\(\(TraditionalForm\`}\)\) ][e] returns the intrinsic transfer \
efficiency distribution of the input PDA model.\n\
\!\(\*FormBox[SubscriptBox[StyleBox[\"a\", \"TI\"], StyleBox[\"i\", \
\"TI\"]],TraditionalForm]\)\[LongEqual] area of \!\(\*FormBox[StyleBox[\"i\", \
\"TI\"],TraditionalForm]\)th peak\n\!\(\*FormBox[SubscriptBox[StyleBox[\"e\", \
\"TI\"], StyleBox[\"i\", \"TI\"]],TraditionalForm]\)\[LongEqual]mean transfer \
efficiency of \!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\)th peak\
\n\!\(\*FormBox[SubscriptBox[\"\[Nu]\", StyleBox[\"i\", \
\"TI\"]],TraditionalForm]\)\[LongEqual]shape parameter of \
\!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\)th peak\n\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129733150133567`*^9, 
  3.8129733151227384`*^9}},ExpressionUUID->"15ad3620-02b4-4508-acd7-\
f18b544a03c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FPDAMethod", "  ", "::", "usage"}], "=", 
   "\"\<FPDAMethod is an option for PDA calculations.\nDefault setting \
FPDAMethod\!\(\(TraditionalForm\` \[Rule] \)\)\\\"Approximate pF by pS \\\" \
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733154821243`*^9, 
  3.8129733155915036`*^9}},ExpressionUUID->"15a656c8-63c8-4fd2-8c84-\
5e440dc09191"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FpdaShowIntrinsicDistribution", "  ", "::", "usage"}], "=", 
   "\"\<FpdaShowIntrinsicDistribution is an option for FpdaEHisto and \
FpdaFitEHisto. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733160602717`*^9, 
  3.812973316154024*^9}},ExpressionUUID->"380920de-6b77-40bd-84d9-\
21daaba5d697"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"F1DHMMForwardBackward", "  ", "::", "usage"}], "=", 
   "\"\<Sorry, no help available yet. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733165290413`*^9, 
  3.81297331663842*^9}},ExpressionUUID->"48153b41-f32b-4b8d-b62c-\
193cb468ee88"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"F1DHMMInit", "  ", "::", "usage"}], "=", 
   "\"\<Sorry, no help available yet. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733169978104`*^9, 
  3.812973317107191*^9}},ExpressionUUID->"60ddd0cb-fdfd-4d9c-ad8a-\
e5f39a9c5cb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"F1DHMMLogLikelihood", "  ", "::", "usage"}], "=", 
   "\"\<Sorry, no help available yet. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733174665794`*^9, 
  3.812973317575958*^9}},ExpressionUUID->"bf2b06cf-c2e4-4c23-9c27-\
a5e066dad001"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"F1DHMMSetPobs", "  ", "::", "usage"}], "=", 
   "\"\<Sorry, no help available yet. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733179197206`*^9, 
  3.8129733180291*^9}},ExpressionUUID->"9d82562d-aa25-4441-aa81-7957d390b619"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"F1DHMMSetPinPfin", "  ", "::", "usage"}], "=", 
   "\"\<Sorry, no help available yet. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733184041147`*^9, 
  3.8129733185134926`*^9}},ExpressionUUID->"5f52ec6b-049a-422f-81b3-\
c2125507adab"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"F1DHMMViterbi", "  ", "::", "usage"}], "=", 
   "\"\<Sorry, no help available yet. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973318857256*^9, 
  3.8129733189666357`*^9}},ExpressionUUID->"572bdc7b-6a13-43a7-871d-\
ff9401e844e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHMMBinPhotonByPhotonTrace", "  ", "::", "usage"}], "=", 
   "\"\<FHMMBinPhotonByPhotonTrace[\!\(TraditionalForm\`{\[Null]\) \
\!\(TraditionalForm\`{\[Null]\)dt1,c1\!\(\(TraditionalForm\`}\)\), \
\!\(TraditionalForm\`{\[Null]\)dt2,c2\!\(\(TraditionalForm\`}\)\) \
...\!\(\(TraditionalForm\`}\)\) , \!\(\*FormBox[SubscriptBox[StyleBox[\"T\", \
\"TI\"], \"binning\"],TraditionalForm]\), channelcount:2] returns\n\
\!\(\*FormBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"N\", \"TI\"], \"11\"], \",\", \
SubscriptBox[StyleBox[\"N\", \"TI\"], \"12\"], \",\", \"...\", \",\", \
SubscriptBox[StyleBox[\"N\", \"TI\"], RowBox[{\"1\", \"channelcount\"}]]}], \
\"}\"}], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"N\", \"TI\"], \
\"21\"], \",\", SubscriptBox[StyleBox[\"N\", \"TI\"], \"22\"], \",\", \
\"...\", \",\", SubscriptBox[StyleBox[\"N\", \"TI\"], RowBox[{\"2\", \
\"channelcount\"}]]}], \"}\"}], \",\", \"...\"}], \"}\"}],TraditionalForm]\), \
i.e. the form needed for FHMMInitWithBinnedData. The default for channelcount \
is 2. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973319341648*^9, 
  3.812973319466654*^9}},ExpressionUUID->"ca1d75f7-c755-408e-8e35-\
754a349858f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHMMFirstTauZero", "  ", "::", "usage"}], "=", 
   "\"\<FHMMFirstTauZero is an option of \
FHMMInitWithPhotonByPhotonDataFromBurstList. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733198260407`*^9, 
  3.8129733199354224`*^9}},ExpressionUUID->"1f422741-28ac-428e-a15e-\
415f3ffc7d9b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHMMForwardBackward", "  ", "::", "usage"}], "=", 
   "\"\<FHMMForwardBackward[\!\(\*FormBox[StyleBox[\"K\", \
\"TI\"],TraditionalForm]\)] or FHMMForwardBackward[\!\(\*FormBox[StyleBox[\"K\
\", \"TI\"],TraditionalForm]\), photonrates] applies the \
forward\[Hyphen]backward algorithm to all previously initialized trajectories \
assuming the rate matrix K. A list of state\[Hyphen]probability trajectories \
is returned. \nIn the first case (i.e. \
FHMMForwardBackward[\!\(\*FormBox[StyleBox[\"K\", \
\"TI\"],TraditionalForm]\)]), the photon rates that beforehand were set with \
FHMMSetPhotonRates are used. The second case (i.e. \
FHMMForwardBackward[\!\(\*FormBox[StyleBox[\"K\", \"TI\"],TraditionalForm]\), \
photonrates]) is equivalent to executing \
(FHMMSetPhotonRates[photonrates];FHMMForwardBackward[\!\(\*FormBox[StyleBox[\"\
K\", \"TI\"],TraditionalForm]\)]), where photonrate is either a matrix or a \
list of matrices.\n\nFHMMForwardBackward has the option FHMMpinpfin. The \
default setting is FHMMpinpfin\!\(\(TraditionalForm\` \[Rule] \)\)FHMMOnePeq, \
in which case pini\[LongEqual]peq, with K.peq\[LongEqual]0, and pfinal\
\[LongEqual]\!\(TraditionalForm\`{\[Null]\)1,1,...\!\(\(TraditionalForm\`}\)\)\
 are used in the calculations. Alternatively, pini and pfinal can be set for \
each photon time trace individually using FPHSetPinPfin called with the \
option FHMMpinpfin\!\(\(TraditionalForm\` \[Rule] \)\)FMTraceWise. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973320310438*^9, 
  3.812973320419815*^9}},ExpressionUUID->"e88a41e8-2a60-44ce-9b97-\
219dc410a8fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHMMGetBinnedTraceFromTTTR", "  ", "::", "usage"}], "=", 
   "\"\<FHMMGetBinnedTraceFromTTTR[\!\(\*FormBox[SubscriptBox[StyleBox[\"T\", \
\"TI\"], \"binning\"],TraditionalForm]\), \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"t\", \"TI\"], \"2\"]}], \"}\"}],TraditionalForm]\)]\n\
or FHMMGetBinnedTraceFromTTTR[\!\(\*FormBox[SubscriptBox[StyleBox[\"T\", \"TI\
\"], \"binning\"],TraditionalForm]\), \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"t\", \"TI\"], \"2\"]}], \"}\"}],TraditionalForm]\), \
\!\(TraditionalForm\`{\[Null]\)routes\!\(TraditionalForm\`\*SubscriptBox[\(\
\[Null]\), \(1\)]\), ... ,routes\!\(\*FormBox[SubscriptBox[\"\[Null]\", \
StyleBox[\"L\", \"TI\"]],TraditionalForm]\) \!\(\(TraditionalForm\`}\)\)]\n\
returns a binned photon time trace with bin width \
\!\(\*FormBox[SubscriptBox[StyleBox[\"T\", \"TI\"], \
\"binning\"],TraditionalForm]\) (in seconds) from the TTTR records in the \
time interval \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"t\", \"TI\"], \"2\"]}], \"}\"}],TraditionalForm]\) \
(in seconds) of the last opened TTTR file. \
routes\!\(\*FormBox[SubscriptBox[\"\[Null]\", StyleBox[\"i\", \
\"TI\"]],TraditionalForm]\) are lists of ones and zeros, e.g. \
\!\(TraditionalForm\`{\[Null]\)1,0,1,0,0,0\!\(\(TraditionalForm\`}\)\), that \
specify which detection routes of the TTTR recording are combined to a \
detection channel of the HMM. The returned trace is of the \
form\!\(\*FormBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"N\", \"TI\"], \"11\"], \",\", \
SubscriptBox[StyleBox[\"N\", \"TI\"], \"12\"], \",\", \"...\", \",\", \
SubscriptBox[StyleBox[\"N\", \"TI\"], RowBox[{\"1\", StyleBox[\"L\", \
\"TI\"]}]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"N\", \"TI\"], \"21\"], \",\", \
SubscriptBox[StyleBox[\"N\", \"TI\"], \"22\"], \",\", \"...\", \",\", \
SubscriptBox[StyleBox[\"N\", \"TI\"], RowBox[{\"2\", StyleBox[\"L\", \
\"TI\"]}]]}], \"}\"}], \",\", \"...\"}], \"}\"}],TraditionalForm]\), where \!\
\(\*FormBox[SubscriptBox[StyleBox[\"N\", \"TI\"], RowBox[{StyleBox[\"i\", \
\"TI\"], \",\", StyleBox[\"c\", \"TI\"]}]],TraditionalForm]\) are the counts \
of the \!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\)th bin in \
detection channel \!\(\*FormBox[StyleBox[\"c\", \"TI\"],TraditionalForm]\). \
The trace is of the form required for FHMMInitWithBinnedData.\n\
FHMMGetBinnedTraceFromTTTR[\!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"t\", \"TI\"], \"2\"]}], \"}\"}],TraditionalForm]\)] \
is equivalent to\nFHMMGetBinnedTraceFromTTTR[\!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"t\", \"TI\"], \"2\"]}], \"}\"}],TraditionalForm]\), \
\!\(TraditionalForm\`{\[Null]\) FGetAcceptorRoutes[], FGetDonorRoutes[] \
\!\(\(TraditionalForm\`}\)\)]. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973320826082*^9, 
  3.812973320935464*^9}},ExpressionUUID->"cf01cc9d-93ba-49b7-8545-\
589318eac278"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHMMGetPhotonByPhotonTraceFromTTTR", "  ", "::", "usage"}], "=", 
   "\"\<FHMMGetPhotonByPhotonTraceFromTTTR[\!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"t\", \"TI\"], \"2\"]}], \"}\"}],TraditionalForm]\)] \
or\nFHMMGetPhotonByPhotonTraceFromTTTR[\!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"t\", \"TI\"], \"2\"]}], \"}\"}],TraditionalForm]\),\!\
\(TraditionalForm\`{\[Null]\)routes\!\(TraditionalForm\`\*SubscriptBox[\(\
\[Null]\), \(1\)]\), ... ,routes\!\(\*FormBox[SubscriptBox[\"\[Null]\", \
StyleBox[\"L\", \"TI\"]],TraditionalForm]\) \!\(\(TraditionalForm\`}\)\)]\n\
returns a photon\[Hyphen]by\[Hyphen]photon time trace from the TTTR records \
in the time interval \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"t\", \"TI\"], \"2\"]}], \"}\"}],TraditionalForm]\) \
(in seconds) of the last opened TTTR file. \
routes\!\(\*FormBox[SubscriptBox[\"\[Null]\", StyleBox[\"i\", \
\"TI\"]],TraditionalForm]\) are lists of ones and zeros, e.g. \
\!\(TraditionalForm\`{\[Null]\)1,0,1,0,0,0\!\(\(TraditionalForm\`}\)\), that \
specify which detection routes of the TTTR recording are combined to a \
detection channel of the HMM. The returned trace is of the form \
\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"{\", RowBox[{StyleBox[\"d\", \"TI\"], \
SubscriptBox[StyleBox[\"t\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"c\", \"TI\"], \"1\"]}], \"}\"}]}],TraditionalForm]\), \
\!\(\*FormBox[RowBox[{RowBox[{\"{\", RowBox[{StyleBox[\"d\", \"TI\"], \
SubscriptBox[StyleBox[\"t\", \"TI\"], \"2\"], \",\", \
SubscriptBox[StyleBox[\"c\", \"TI\"], \"2\"]}], \"}\"}], \"\[Ellipsis]\", \"}\
\"}],TraditionalForm]\), where \!\(\*FormBox[RowBox[{StyleBox[\"d\", \"TI\"], \
SubscriptBox[StyleBox[\"t\", \"TI\"], StyleBox[\"i\", \
\"TI\"]]}],TraditionalForm]\) is the inter\[Hyphen]photon time in seconds \
(i.e. the time interval to the preceding photon), and \
\!\(\*FormBox[SubscriptBox[StyleBox[\"c\", \"TI\"], StyleBox[\"i\", \
\"TI\"]],TraditionalForm]\) is the detection channel of the \
\!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\)th photon. \
\!\(\*FormBox[RowBox[{StyleBox[\"d\", \"TI\"], SubscriptBox[StyleBox[\"t\", \
\"TI\"], \"1\"]}],TraditionalForm]\) is the detection time of the first \
photon. The trace is of the form required for FHMMInitWithPhotonByPhotonData.\
\n\!\(\(TraditionalForm\`\\\ \\\ \
\)\)FHMMGetPhotonByPhotonTraceFromTTTR[\!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"t\", \"TI\"], \"2\"]}], \"}\"}],TraditionalForm]\)] \
is equivalent to\n\
FHMMGetPhotonByPhotonTraceFromTTTR[\!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"t\", \"TI\"], \"2\"]}], \"}\"}],TraditionalForm]\), \
\!\(TraditionalForm\`{\[Null]\) FGetAcceptorRoutes[], FGetDonorRoutes[] \
\!\(\(TraditionalForm\`}\)\)].\n\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733213261023`*^9, 
  3.812973321451107*^9}},ExpressionUUID->"9dc07174-54b5-481e-a832-\
6ab1e57aed88"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHMMInitWithBinnedData", "  ", "::", "usage"}], "=", 
   "\"\<FHMMInitWithBinnedData[\!\(\*FormBox[RowBox[{\"{\", RowBox[{StyleBox[\
\"t\", \"TI\"], SubscriptBox[StyleBox[\"r\", \"TI\"], \"1\"], \",\", \
StyleBox[\"t\", \"TI\"], SubscriptBox[StyleBox[\"r\", \"TI\"], \"2\"], \",\", \
\"...\", \",\", StyleBox[\"t\", \"TI\"], SubscriptBox[StyleBox[\"r\", \
\"TI\"], StyleBox[\"M\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"T\", \
\"TI\"], \"binning\"]}]}],TraditionalForm]\)] initializes Fretica's hidden \
Markov system for FRET data with \!\(\*FormBox[StyleBox[\"M\", \
\"TI\"],TraditionalForm]\) time\[Hyphen]binned photon time traces of the form \
\!\(\*FormBox[RowBox[{StyleBox[\"t\", \"TI\"], SubscriptBox[StyleBox[\"r\", \
\"TI\"], StyleBox[\"i\", \"TI\"]], \"\[LongEqual]\", RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"N\", \"TI\"], \
RowBox[{StyleBox[\"A\", \"TI\"], \"1\"}]], \",\", \
SubscriptBox[StyleBox[\"N\", \"TI\"], RowBox[{StyleBox[\"D\", \"TI\"], \
\"1\"}]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"N\", \"TI\"], RowBox[{StyleBox[\"A\", \
\"TI\"], \"2\"}]], \",\", SubscriptBox[StyleBox[\"N\", \"TI\"], \
RowBox[{StyleBox[\"D\", \"TI\"], \"2\"}]]}], \"}\"}], \",\", \"...\"}], \
\"}\"}]}],TraditionalForm]\), where \
\!\(\*FormBox[SubscriptBox[StyleBox[\"N\", \"TI\"], StyleBox[RowBox[{\"A\", \
\"i\"}], \"TI\"]],TraditionalForm]\) and \!\(\*FormBox[SubscriptBox[StyleBox[\
\"N\", \"TI\"], StyleBox[RowBox[{\"D\", \"i\"}], \"TI\"]],TraditionalForm]\) \
are the acceptor and donor photon counts of the \!\(\*FormBox[StyleBox[\"i\", \
\"TI\"],TraditionalForm]\)th bin. \!\(\*FormBox[SubscriptBox[StyleBox[\"T\", \
\"TI\"], \"binning\"],TraditionalForm]\) is the binning interval. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129733218261213`*^9, 
  3.8129733219511256`*^9}},ExpressionUUID->"81124fd3-a5aa-4a72-ad70-\
c2e9f4d8dbb6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHMMInitWithPhotonByPhotonData", "  ", "::", "usage"}], "=", 
   "\"\<FHMMInitWithPhotonByPhotonData[\!\(\*FormBox[RowBox[{\"{\", \
RowBox[{StyleBox[\"t\", \"TI\"], SubscriptBox[StyleBox[\"r\", \"TI\"], \
\"1\"], \",\", StyleBox[\"t\", \"TI\"], SubscriptBox[StyleBox[\"r\", \"TI\"], \
\"2\"], \",\", \"...\", \",\", StyleBox[\"t\", \"TI\"], \
SubscriptBox[StyleBox[\"r\", \"TI\"], StyleBox[\"M\", \
\"TI\"]]}]}],TraditionalForm]\)] initializes Fretica's hidden Markov system \
with \!\(\*FormBox[StyleBox[\"M\", \"TI\"],TraditionalForm]\) \
photon\[Hyphen]by\[Hyphen]photon time traces of the form \
\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"{\", RowBox[{StyleBox[\"d\", \"TI\"], \
SubscriptBox[StyleBox[\"t\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"c\", \"TI\"], \"1\"]}], \"}\"}]}],TraditionalForm]\), \
\!\(\*FormBox[RowBox[{RowBox[{\"{\", RowBox[{StyleBox[\"d\", \"TI\"], \
SubscriptBox[StyleBox[\"t\", \"TI\"], \"2\"], \",\", \
SubscriptBox[StyleBox[\"c\", \"TI\"], \"2\"]}], \"}\"}], \"\[Ellipsis]\", \"}\
\"}],TraditionalForm]\), where \!\(\*FormBox[RowBox[{StyleBox[\"d\", \"TI\"], \
SubscriptBox[StyleBox[\"t\", \"TI\"], StyleBox[\"i\", \
\"TI\"]]}],TraditionalForm]\) is the inter\[Hyphen]photon time in seconds \
(i.e. the time interval to the preceding photon), and \
\!\(\*FormBox[SubscriptBox[StyleBox[\"c\", \"TI\"], StyleBox[\"i\", \
\"TI\"]],TraditionalForm]\) is the detection channel of the \
\!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\)th photon. (eg. \
\!\(\*FormBox[StyleBox[\"c\", \"TI\"],TraditionalForm]\)\[LongEqual]1 for an \
acceptor or \!\(\*FormBox[StyleBox[\"c\", \"TI\"],TraditionalForm]\)\
\[LongEqual]2 for a donor photon). The first inter\[Hyphen]photon time t1 is \
usually set to zero. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733223261395`*^9, 
  3.812973322435521*^9}},ExpressionUUID->"d360118f-0aff-490b-af08-\
b0192b376d74"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "FHMMInitWithPhotonByPhotonDataFromBurstList", "  ", "::", "usage"}], "=", 
   "\"\<FHMMInitWithPhotonByPhotonDataFromBurstList[colormap] uses the burst \
list to initialize Fretica's hidden Markov system with photon\[Hyphen]by\
\[Hyphen]photon time traces of the form \!\(\*FormBox[RowBox[{StyleBox[\"t\", \
\"TI\"], SubscriptBox[StyleBox[\"r\", \"TI\"], StyleBox[\"j\", \"TI\"]], \"\
\[LongEqual]\", RowBox[{\"{\", RowBox[{RowBox[{\"{\", RowBox[{StyleBox[\"d\", \
\"TI\"], SubscriptBox[StyleBox[\"t\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"c\", \"TI\"], \"1\"]}], \"}\"}], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"d\", \"TI\"], SubscriptBox[StyleBox[\"t\", \
\"TI\"], \"2\"], \",\", SubscriptBox[StyleBox[\"c\", \"TI\"], \"2\"]}], \
\"}\"}], \"\[Ellipsis]\"}], \"}\"}]}],TraditionalForm]\), where \
\!\(\*FormBox[StyleBox[\"j\", \"TI\"],TraditionalForm]\) represents the \
\!\(\*FormBox[StyleBox[\"j\", \"TI\"],TraditionalForm]\)th burst. \
\!\(\*FormBox[RowBox[{StyleBox[\"d\", \"TI\"], SubscriptBox[StyleBox[\"t\", \
\"TI\"], StyleBox[\"i\", \"TI\"]]}],TraditionalForm]\) is the \
inter\[Hyphen]photon time in seconds (i.e. the time interval to the preceding \
photon), and \!\(\*FormBox[SubscriptBox[StyleBox[\"c\", \"TI\"], StyleBox[\"i\
\", \"TI\"]],TraditionalForm]\) is the detection channel (color) of the \
\!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\)th photon. colormap \
is a list of integers. Photons detected in detection route \
\!\(\*FormBox[StyleBox[\"r\", \"TI\"],TraditionalForm]\) are colored with \
colormap[[\!\(\*FormBox[StyleBox[\"r\", \"TI\"],TraditionalForm]\)]], if \
colormap[[\!\(\*FormBox[StyleBox[\"r\", \
\"TI\"],TraditionalForm]\)]]\!\(\(TraditionalForm\` > \)\)0. If \
colormap[[\!\(\*FormBox[StyleBox[\"r\", \"TI\"],TraditionalForm]\)]]\
\[LongEqual]\[LongEqual]0, photons detected in route r are ignored. For \
example, colormap\[LongEqual]\!\(TraditionalForm\`{\[Null]\)1,2,1,2,0,0\!\(\(\
TraditionalForm\`}\)\) colors photons detected in detection routes one and \
three as 1 and those in detection routes two and four as 2, while photons in \
route five and six are ignored. \nIf lifetime channel constraints are enabled \
(e.g. in PIE mode), all photons of a burst not fulfilling the \
main\[Hyphen]channel constraints are ignored.\nOptions:\nFHMMFirstTauZero\!\(\
\(TraditionalForm\` \[Rule] \)\)True (default) sets the first \
inter\[Hyphen]photon time in each trace to zero \
(\!\(\*FormBox[RowBox[{StyleBox[\"d\", \"TI\"], SubscriptBox[StyleBox[\"t\", \
\"TI\"], \"1\"], \"\[LongEqual]\", \"0\"}],TraditionalForm]\)). \
FHMMFirstTauZero\!\(\(TraditionalForm\` \[Rule] \)\)False sets the first \
inter\[Hyphen]photon time to the time difference between detection of the \
first photon of the current burst and the last photon of the preceding burst.\
\nFBurstData\!\(\(TraditionalForm\` \[Rule] \)\)All (default) all bursts are \
used.\nFBurstData\!\(\(TraditionalForm\` \[Rule] \)\)FSelected only selected \
bursts are used.\n\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973322826158*^9, 
  3.8129733229355392`*^9}},ExpressionUUID->"35315cd5-456b-42b9-987c-\
9216bf565b28"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHMMLogLikelihood", "  ", "::", "usage"}], "=", 
   "\"\<FHMMLogLikelihood[\!\(\*FormBox[StyleBox[\"K\", \
\"TI\"],TraditionalForm]\)] or\n\
FHMMLogLikelihood[\!\(\*FormBox[StyleBox[\"K\", \"TI\"],TraditionalForm]\), \
photonrates]\nreturns the total log\[Hyphen]likelihood of the HMM summed over \
all previously initialized trajectories assuming the rate matrix \
\!\(\*FormBox[StyleBox[\"K\", \"TI\"],TraditionalForm]\). \nIn the first case \
(i.e. FHMMLogLikelihood[\!\(\*FormBox[StyleBox[\"K\", \
\"TI\"],TraditionalForm]\)]) the photon rates that beforehand were set with \
FHMMSetPhotonRates are used.\nThe second case (i.e. \
FHMMLogLikelihood[\!\(\*FormBox[StyleBox[\"K\", \"TI\"],TraditionalForm]\), \
photonrates]) is equivalent to executing\n(FHMMSetPhotonRates[photonrates]; \
FHMMLogLikelihood[\!\(\*FormBox[StyleBox[\"K\", \"TI\"],TraditionalForm]\)]),\
\nwhere photonrates is either a matrix or a list of matrices.\n\n\
FHMMLogLikelihood has the option FHMMpinpfin.\nThe default setting is \
FHMMpinpfin\!\(\(TraditionalForm\` \[Rule] \)\)FHMMOnePeq, in which case pini\
\[LongEqual]peq with K.peq\[LongEqual]0, and \
pfinal\[LongEqual]\!\(TraditionalForm\`{\[Null]\)1,1,...\!\(\(TraditionalForm\
\`}\)\) are used in the calculations.\nAlternatively, pini and pfinal can be \
set individually for each trace using FHMMSetPinPfin. The option is then \
FHMMpinpfin\!\(\(TraditionalForm\` \[Rule] \)\)FHMMTraceWise. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973323326177*^9, 3.81297332343556*^9}, {
  3.872229976694087*^9, 
  3.872229996783778*^9}},ExpressionUUID->"67dc34db-81c4-49a9-a26b-\
b4ad22783d6d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHMMPeqOne", "  ", "::", "usage"}], "=", 
   "\"\<FHMMPeqOne is an option value for FHMMpinpfin. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973323810574*^9, 
  3.8129733239043283`*^9}},ExpressionUUID->"f70134eb-0b8d-4ff2-a87f-\
eaacc9510bbb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHMMpinpfin", "  ", "::", "usage"}], "=", 
   "\"\<FHMMpinpfin is an option for FHMMLogLikelihood and FHMMViterbi. \
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733242793446`*^9, 
  3.812973324388722*^9}},ExpressionUUID->"6f3b01cf-65fc-4583-a1ac-\
829f06b03644"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHMMSetPhotonRates", "  ", "::", "usage"}], "=", 
   "\"\<FHMMSetPhotonRates[photonrates] or\nFHMMSetPhotonRates[ \
\!\(TraditionalForm\`{\[Null]\)photonrates\!\(TraditionalForm\`\*SubscriptBox[\
\(\[Null]\), \(1\)]\), ... ,photonrates\!\(\*FormBox[RowBox[{SubscriptBox[\"\
\[Null]\", StyleBox[\"M\", \"TI\"]], \"}\"}],TraditionalForm]\)] sets the \
mean photon rates assumed for \!\(\*FormBox[StyleBox[\"M\", \
\"TI\"],TraditionalForm]\) photon traces that were beforehand initialized \
using FHMMInitWithPhotonByPhotonData or FHMMInitWithBinnedData. The first \
version sets identical photon rates for all \!\(\*FormBox[StyleBox[\"M\", \
\"TI\"],TraditionalForm]\) traces, the second version sets the photon rates \
individually for each trace.\n\!\(\(TraditionalForm\`\\\ \\\ \)\)photonrates \
or photonrates\!\(\*FormBox[SubscriptBox[\"\[Null]\", StyleBox[\"i\", \
\"TI\"]],TraditionalForm]\) are matrices, where the element \
photonrates\!\(\*FormBox[SubscriptBox[\"\[Null]\", RowBox[{\"(\", \
StyleBox[\"i\", \"TI\"], \")\"}]],TraditionalForm]\)[[\!\(\*FormBox[StyleBox[\
\"r\", \"TI\"],TraditionalForm]\), \!\(\*FormBox[StyleBox[\"s\", \
\"TI\"],TraditionalForm]\)]] is the mean photon rate detected in detection \
route \!\(\*FormBox[StyleBox[\"r\", \"TI\"],TraditionalForm]\) if the system \
is in state \!\(\*FormBox[StyleBox[\"s\", \"TI\"],TraditionalForm]\). \>\""}],
   ";"}]], "Input",
 CellChangeTimes->{{3.8129733247481103`*^9, 
  3.8129733248731174`*^9}},ExpressionUUID->"0fd92bf2-600a-44ee-a4cf-\
57090c96d9d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHMMSetPinPfin", "  ", "::", "usage"}], "=", 
   "\"\<FHMMSetPinPfin[ pinpfin ] sets the \
\!\(\*FormBox[SubscriptBox[StyleBox[\"p\", \"TI\"], StyleBox[RowBox[{\"i\", \
\"n\"}], \"TI\"]],TraditionalForm]\) and \!\(\*FormBox[SubscriptBox[StyleBox[\
\"p\", \"TI\"], StyleBox[RowBox[{\"f\", \"i\", \"n\"}], \
\"TI\"]],TraditionalForm]\) vectors for the photon time traces (initialized \
using FHMMInitWithBinnedData or FHMMInitWithPhotonByPhotonData). The command \
is required if FHMMLogLikelihood or FHMMViterbi are going to be called with \
the option FHMMpinpfin\!\(\(TraditionalForm\` \[Rule] \)\)FHMMTraceWise.\n\n\
pinpfin can be of the form \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"p\", \"TI\"], StyleBox[RowBox[{\"i\", \
\"n\"}], \"TI\"]], \",\", SubscriptBox[StyleBox[\"p\", \"TI\"], \
StyleBox[RowBox[{\"f\", \"i\", \"n\"}], \"TI\"]]}], \
\"}\"}],TraditionalForm]\), where \!\(\*FormBox[SubscriptBox[StyleBox[\"p\", \
\"TI\"], StyleBox[RowBox[{\"i\", \"n\"}], \"TI\"]],TraditionalForm]\) and \
\!\(\*FormBox[SubscriptBox[StyleBox[\"p\", \"TI\"], StyleBox[RowBox[{\"f\", \
\"i\", \"n\"}], \"TI\"]],TraditionalForm]\) are state population vectors. In \
this case, the vectors will be assumed to be the same for all photon time \
traces. Alternatively, state population vectors can be set individually for \
each photon time trace with pinpfin of the form \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"p\", \"TI\"], \
RowBox[{StyleBox[\"i\", \"TI\"], StyleBox[\"n\", \"TI\"], \"1\"}]], \",\", \
SubscriptBox[StyleBox[\"p\", \"TI\"], RowBox[{StyleBox[\"f\", \"TI\"], \
StyleBox[\"i\", \"TI\"], StyleBox[\"n\", \"TI\"], \"1\"}]]}], \"}\"}], \",\", \
\"...\", \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"p\", \"TI\"], \
StyleBox[RowBox[{\"i\", \"n\", \"M\"}], \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"p\", \"TI\"], StyleBox[RowBox[{\"f\", \"i\", \"n\", \
\"M\"}], \"TI\"]]}], \"}\"}]}]}],TraditionalForm]\), where \
\!\(\*FormBox[StyleBox[\"M\", \"TI\"],TraditionalForm]\) is the number of \
traces that the HM system was initialized with. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733252637544`*^9, 3.8129733253731365`*^9}, {
  3.8601477147950363`*^9, 
  3.8601477155297365`*^9}},ExpressionUUID->"43284356-18ce-4166-9d6f-\
af181be923ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHMMSimulateBinnedTrace", "  ", "::", "usage"}], "=", 
   "\"\<FHMMSimulateBinnedTrace[\!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"n\", \"TI\"], \"2\"], \",\", \"...\"}], \
\"}\"}],TraditionalForm]\), \!\(\*FormBox[StyleBox[\"K\", \
\"TI\"],TraditionalForm]\), \!\(\*FormBox[SubscriptBox[StyleBox[\"p\", \
\"TI\"], StyleBox[RowBox[{\"i\", \"n\", \"i\"}], \"TI\"]],TraditionalForm]\), \
length, \!\(\*FormBox[SubscriptBox[StyleBox[\"T\", \"TI\"], \
\"binning\"],TraditionalForm]\)]\nreturns \!\(TraditionalForm\`{\[Null]\)mcs, \
statetrajectory\!\(\(TraditionalForm\`}\)\), where mcs is a simulated binned \
photon time trace assuming the hidden Markov model with rate matrix \
\!\(\*FormBox[StyleBox[\"K\", \"TI\"],TraditionalForm]\) and an initial \
population vector \!\(\*FormBox[SubscriptBox[StyleBox[\"p\", \"TI\"], \
StyleBox[RowBox[{\"i\", \"n\", \"i\"}], \"TI\"]],TraditionalForm]\). \
\!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"c\", \
\"TI\"]],TraditionalForm]\) is a vector containing the photon rates of the \
states of the \!\(\*FormBox[StyleBox[\"c\", \"TI\"],TraditionalForm]\)th \
detection channel. The total time of the trajectory is given by length, and \
the binning interval by \!\(\*FormBox[SubscriptBox[StyleBox[\"T\", \"TI\"], \
\"binning\"],TraditionalForm]\). mcs is of the form required for \
FHMMInitWithBinnedData. statetrajectory is the underlying simulated state \
trajectory; it is of the form \!\(\*FormBox[RowBox[{\"{\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"s\", \"TI\"], \"1\"]}], \"}\"}]}],TraditionalForm]\), \
\!\(\*FormBox[RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], \
\"2\"], \",\", SubscriptBox[StyleBox[\"s\", \"TI\"], \"2\"]}], \
\"}\"}],TraditionalForm]\), \!\(TraditionalForm\`\(\(\[Ellipsis]\)\(}\)\)\), \
where the pair \!\(\*FormBox[RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"t\
\", \"TI\"], StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"s\", \
\"TI\"], StyleBox[\"i\", \"TI\"]]}], \"}\"}],TraditionalForm]\) signifies a \
state change at time \!\(\*FormBox[SubscriptBox[StyleBox[\"t\", \"TI\"], \
StyleBox[\"i\", \"TI\"]],TraditionalForm]\) to state \
\!\(\*FormBox[SubscriptBox[StyleBox[\"s\", \"TI\"], StyleBox[\"i\", \
\"TI\"]],TraditionalForm]\). Note that internally, photons are first \
simulated and then binned. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973325763773*^9, 
  3.812973325873155*^9}},ExpressionUUID->"6e4f53b7-a296-4754-a03d-\
9e4d85acd5f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHMMSimulatePhotonByPhotonTrace", "  ", "::", "usage"}], "=", 
   "\"\<FHMMSimulatePhotonByPhotonTrace[\!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"n\", \"TI\"], \"2\"], \",\", \"...\"}], \
\"}\"}],TraditionalForm]\), \!\(\*FormBox[StyleBox[\"K\", \
\"TI\"],TraditionalForm]\), \!\(\*FormBox[SubscriptBox[StyleBox[\"p\", \
\"TI\"], StyleBox[RowBox[{\"i\", \"n\", \"i\"}], \"TI\"]],TraditionalForm]\), \
length] or\nFHMMSimulatePhotonByPhotonTrace[\!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"n\", \"TI\"], \"2\"], \",\", \"...\"}], \
\"}\"}],TraditionalForm]\), statetrajectory, length]\nreturn \
\!\(TraditionalForm\`{\[Null]\)photontrace, \
statetrajectory\!\(\(TraditionalForm\`}\)\), where photontrace is a simulated \
photon\[Hyphen]by\[Hyphen]photon time trace assuming the hidden Markov model \
with rate matrix \!\(\*FormBox[StyleBox[\"K\", \"TI\"],TraditionalForm]\), \
using either an initial population vector \
\!\(\*FormBox[SubscriptBox[StyleBox[\"p\", \"TI\"], StyleBox[RowBox[{\"i\", \
\"n\", \"i\"}], \"TI\"]],TraditionalForm]\) or a given state trajectory \
defined by statetrajectory. \!\(\*FormBox[SubscriptBox[StyleBox[\"n\", \
\"TI\"], StyleBox[\"c\", \"TI\"]],TraditionalForm]\) is a vector containing \
the photon rates of the states of the \!\(\*FormBox[StyleBox[\"c\", \
\"TI\"],TraditionalForm]\)th detection channel. The total time of the \
trajectory is given by length.\nstatetrajectory is of the form \
\!\(\*FormBox[RowBox[{\"{\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"t\
\", \"TI\"], \"1\"], \",\", SubscriptBox[StyleBox[\"s\", \"TI\"], \"1\"]}], \
\"}\"}]}],TraditionalForm]\), \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], \"2\"], \",\", \
SubscriptBox[StyleBox[\"s\", \"TI\"], \"2\"]}], \"}\"}],TraditionalForm]\), \
\!\(TraditionalForm\`\(\(\[Ellipsis]\)\(}\)\)\), where the pair \
\!\(\*FormBox[RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"t\", \"TI\"], \
StyleBox[\"i\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"s\", \"TI\"], \
StyleBox[\"i\", \"TI\"]]}], \"}\"}],TraditionalForm]\) signifies a state \
change at time \!\(\*FormBox[SubscriptBox[StyleBox[\"t\", \"TI\"], \
StyleBox[\"i\", \"TI\"]],TraditionalForm]\) to state \
\!\(\*FormBox[SubscriptBox[StyleBox[\"s\", \"TI\"], StyleBox[\"i\", \
\"TI\"]],TraditionalForm]\).\nThe trace returned from \
FHMMSimulatePhotonByPhotonTrace is of the form \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{StyleBox[\"d\", \"TI\"], \
SubscriptBox[StyleBox[\"t\", \"TI\"], \"1\"], \",\", \
SubscriptBox[StyleBox[\"c\", \"TI\"], \"1\"]}], \"}\"}], \",\", \
RowBox[{\"{\", RowBox[{StyleBox[\"d\", \"TI\"], SubscriptBox[StyleBox[\"t\", \
\"TI\"], \"2\"], \",\", SubscriptBox[StyleBox[\"c\", \"TI\"], \"2\"]}], \
\"}\"}], \"\[Ellipsis]\"}], \"}\"}],TraditionalForm]\), where \
\!\(\*FormBox[RowBox[{StyleBox[\"d\", \"TI\"], SubscriptBox[StyleBox[\"t\", \
\"TI\"], StyleBox[\"i\", \"TI\"]]}],TraditionalForm]\) is the interphoton \
time (i.e. the time interval to the preceding photon), and \
\!\(\*FormBox[SubscriptBox[StyleBox[\"c\", \"TI\"], StyleBox[\"i\", \
\"TI\"]],TraditionalForm]\) is the detection channel (color) of the \
\!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\)th photon. \
\!\(\*FormBox[RowBox[{StyleBox[\"d\", \"TI\"], SubscriptBox[StyleBox[\"t\", \
\"TI\"], \"1\"]}],TraditionalForm]\) is set to zero. The trace is of the form \
required as input for FHMMInitWithPhotonByPhotonData. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973326279418*^9, 
  3.812973326388796*^9}},ExpressionUUID->"ff1a27aa-c4c8-45ee-b9c2-\
9ea8464b9fdb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHMMTraceWise", "  ", "::", "usage"}], "=", 
   "\"\<FMTraceWise is an option value for FHMMpinpfin. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973326779436*^9, 
  3.812973326888814*^9}},ExpressionUUID->"7820ed23-0ac6-45b4-b17d-\
e447f62d6b76"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHMMTransitionStatesLogLikelihoods", "  ", "::", "usage"}], "=", 
   "\"\<FHMMTransitionStatesLogLikelihoods[\!\(\*FormBox[StyleBox[\"K\", \"TI\
\"],TraditionalForm]\):\!\(TraditionalForm\`{_\)?SquareMatrixQ..\!\(\(\
TraditionalForm\`}\)\),tslevels\!\(TraditionalForm\`_\)List] \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129733272482033`*^9, 
  3.812973327357583*^9}},ExpressionUUID->"ade084e0-3ce8-453a-8ca7-\
2d9cb09c210e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHMMViterbi", "  ", "::", "usage"}], "=", 
   "\"\<FHMMViterbi[\!\(\*FormBox[StyleBox[\"K\", \"TI\"],TraditionalForm]\)] \
or\nFHMMViterbi[\!\(\*FormBox[StyleBox[\"K\", \"TI\"],TraditionalForm]\), \
photonrates]\napply the Viterbi algorithm to all previously initialized \
trajectories assuming the rate matrix K. A list of most likely state \
trajectories is returned in the form of an FDwellList. \nIn the first case \
(i.e. FHMMViterbi[\!\(\*FormBox[StyleBox[\"K\", \"TI\"],TraditionalForm]\)]), \
the photon rates that beforehand were set with FHMMSetPhotonRates are used.\n\
The second case (i.e. FHMMViterbi[\!\(\*FormBox[StyleBox[\"K\", \
\"TI\"],TraditionalForm]\), photonrates]) is equivalent to executing \n\
(FHMMSetPhotonRates[photonrates]; FHMMViterbi[\!\(\*FormBox[StyleBox[\"K\", \
\"TI\"],TraditionalForm]\)]),\nwhere photonrates is either a matrix or a list \
of matrices.\n\nFHMMViterbi has the option FHMMpinpfin. \nThe default setting \
is FHMMpinpfin\!\(\(TraditionalForm\` \[Rule] \)\)FHMMOnePeq, in which case \
\!\(\*FormBox[RowBox[{SubscriptBox[StyleBox[\"p\", \"TI\"], StyleBox[RowBox[{\
\"i\", \"n\", \"i\"}], \"TI\"]], \"\[LongEqual]\", \
SubscriptBox[StyleBox[\"p\", \"TI\"], StyleBox[RowBox[{\"e\", \"q\"}], \
\"TI\"]]}],TraditionalForm]\), with \!\(\*FormBox[RowBox[{StyleBox[\"K\", \
\"TI\"], \".\", SubscriptBox[StyleBox[\"p\", \"TI\"], StyleBox[RowBox[{\"e\", \
\"q\"}], \"TI\"]], \"\[LongEqual]\", \"0\"}],TraditionalForm]\), and \
\!\(\*FormBox[SubscriptBox[StyleBox[\"p\", \"TI\"], StyleBox[RowBox[{\"f\", \
\"i\", \"n\", \"a\", \"l\"}], \
\"TI\"]],TraditionalForm]\)\[LongEqual]\!\(TraditionalForm\`{\[Null]\)1,1,...\
\!\(\(TraditionalForm\`}\)\) are used in the calculations.\nAlternatively, \!\
\(\*FormBox[SubscriptBox[StyleBox[\"p\", \"TI\"], StyleBox[RowBox[{\"i\", \"n\
\", \"i\"}], \"TI\"]],TraditionalForm]\) and \
\!\(\*FormBox[SubscriptBox[StyleBox[\"p\", \"TI\"], StyleBox[RowBox[{\"f\", \
\"i\", \"n\", \"a\", \"l\"}], \"TI\"]],TraditionalForm]\) can be set for each \
photon time trace individually using FPHSetPinPfin. FHMMViterbi is then \
called with the option FHMMpinpfin\!\(\(TraditionalForm\` \[Rule] \
\)\)FMTraceWise. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973327748228*^9, 
  3.812973327857605*^9}},ExpressionUUID->"c2063c4c-e263-47e6-9bdb-\
87ee1604c755"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FDwell", "  ", "::", "usage"}], "=", 
   "\"\<Element of an FDwellList. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733282326207`*^9, 
  3.812973328342*^9}},ExpressionUUID->"e8130049-c3e9-48b9-8c07-7f0464da0706"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FDwellList", "  ", "::", "usage"}], "=", 
   "\"\<FHMMViterbi returns an FDwellList[ traj1, traj2, traj3 \
,\!\(TraditionalForm\`\[Ellipsis]\) ], with traji of the form FDwellList[ \
dwell1, dwell2, dwell3, \!\(TraditionalForm\`\[Ellipsis]\)] where dwellj is \
of the form \n\!\(\(TraditionalForm\`\\\ \\\ \)\)FDwell[tj, \
statej\!\(\(TraditionalForm\` \[Rule] \)\)statej+1, dtj, \
\!\(TraditionalForm\`{\[Null]\)nAj, nDj\!\(\(TraditionalForm\`}\)\)] with \n\
\!\(\(TraditionalForm\`\\\ \\\ \\\ \\\ \)\)tj \[LongEqual] start time of \
dwell j \n\!\(\(TraditionalForm\`\\\ \\\ \\\ \\\ \)\)dtj \[LongEqual] dwell \
time\n\!\(\(TraditionalForm\`\\\ \\\ \\\ \\\ \)\)statej \[LongEqual] most \
likely state from tj to tj+dtj\n\!\(\(TraditionalForm\`\\\ \\\ \\\ \\\ \
\)\)statej+1 \[LongEqual] most likely state after tj+dtj\n\!\(TraditionalForm\
\`\(\(\\\ \\\ \\\ \\\ \)\({\[Null]\)\)\)nAj, nDj\!\(\(TraditionalForm\`}\)\) \
\[LongEqual] acceptor and donor photons counted during dwell time\n\
\!\(\(TraditionalForm\`\\\ \\\ \)\)Example: dwells\[LongEqual] FHMMViterbi[\!\
\(\*FormBox[StyleBox[\"K\", \"TI\"],TraditionalForm]\)] can be used like a \
function to extract information. \n\!\(\(TraditionalForm\`\\\ \\\ \\\ \\\ \
\)\)dwells[\\\"dt\\\"] returns \!\(TraditionalForm\`{\[Null]\) \
\!\(TraditionalForm\`{\[Null]\)dt values of trajectory 1\!\(\(TraditionalForm\
\`}\)\), \!\(TraditionalForm\`{\[Null]\)dt values of trajectory \
2\!\(\(TraditionalForm\`}\)\), \!\(TraditionalForm\`\[Ellipsis]\) \
\!\(\(TraditionalForm\`}\)\)\n dwells[[7]][\\\"dt\\\"] returns \
\!\(TraditionalForm\`{\[Null]\)dt values of trajectory 7\!\(\(TraditionalForm\
\`}\)\)\n\!\(\(TraditionalForm\`\\\ \\\ \)\)\n\!\(\(TraditionalForm\`\\\ \\\ \
\)\)Supported arguments: \\\"t\\\", \\\"transition\\\", \\\"state\\\", \\\"dt\
\\\", \\\"Na\\\", \\\"Nd\\\", \\\"PhotonRates\\\".\n\n\!\(\(TraditionalForm\`\
\\\ \\\ \)\)In addition, the following functions are defined:\n\n\
\!\(\(TraditionalForm\`\\\ \\\ \)\)dwells[\\\"mcs\\\", t0, ratefunc] returns \
for each trajectory in dwells an mcs curve with time offset t0. \n\
\!\(\(TraditionalForm\`\\\ \\\ \)\)ratefunc[state] is a function that returns \
the photon detection rate of state, e.g. \
ratefunc\[LongEqual]\!\(TraditionalForm\`{\[Null]\)na1,na2,na3\!\(\(\
TraditionalForm\`}\)\)[[\!\(TraditionalForm\`#\)]]\!\(\(TraditionalForm\` &\)\
\)\n\!\(\(TraditionalForm\`\\\ \\\ \)\)dwells[\\\"stategraph\\\", t0, scale, \
offset] returns a state trajectory for each trajectory in dwells.\n\
\!\(\(TraditionalForm\`\\\ \\\ \)\)\nDwells can be filtered for transitions \
using patterns, e.g., dwells[3\!\(TraditionalForm\`\(\(\[Rule]\)\(_\)\)\)] \
returns all dwells for which the transition s1\!\(\(TraditionalForm\` \[Rule] \
\)\)s2 matches the pattern 3\!\(TraditionalForm\`\(\(\[Rule]\)\(_\)\)\). \
\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733287326393`*^9, 
  3.812973328857644*^9}},ExpressionUUID->"a7de6914-31e4-466f-a2aa-\
56ae954a5d6f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FJoinSelftransitions", "  ", "::", "usage"}], "=", 
   "\"\<FJoinSelftransitions[dwells:FDwellList[\!\(TraditionalForm\`_\)FDwell.\
.]] \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733304358273`*^9, 
  3.8129733305452056`*^9}},ExpressionUUID->"2460782b-1d59-4657-b2c6-\
49cf3768dfe6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FRenameStates", "  ", "::", "usage"}], "=", 
   "\"\<FRenameStates[dwells, \!\(TraditionalForm\`{\[Null]\) \
old1\!\(\(TraditionalForm\` \[Rule] \)\)new1, old2\!\(\(TraditionalForm\` \
\[Rule] \)\)new2, \!\(TraditionalForm\`\(\(\[Ellipsis]\)\(}\)\)\)] first \
renames states and then updates the trajectories by combining neighboring \
dwells without transition to a different state.\nE.g.: With \
FRenameStates[dwells, \!\(TraditionalForm\`{\[Null]\)3\!\(\(TraditionalForm\` \
\[Rule] \)\)1\!\(\(TraditionalForm\`}\)\)], 2\!\(\(TraditionalForm\` \[Rule] \
\)\)1\!\(\(TraditionalForm\` \[Rule] \)\)3\!\(\(TraditionalForm\` \[Rule] \
\)\)1\!\(\(TraditionalForm\` \[Rule] \)\)3\!\(\(TraditionalForm\` \[Rule] \
\)\)1\!\(\(TraditionalForm\` \[Rule] \)\)2 becomes 2\!\(\(TraditionalForm\` \
\[Rule] \)\)1\!\(\(TraditionalForm\` \[Rule] \)\)2, and the dwell times of \
the combined dwells are summed up. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733309202194`*^9, 
  3.812973331029599*^9}},ExpressionUUID->"4bcb7287-9815-494d-af3c-\
f938102f5d0d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FSplitTrajectory", "  ", "::", "usage"}], "=", 
   "\"\<FSplitTrajectory[dwells, T] splits the trajectories contained in \
dwells into shorter trajectories, each of time length T. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129733314046144`*^9, 
  3.8129733315139933`*^9}},ExpressionUUID->"4e79c775-44e7-4e1f-8f28-\
4fbeb433970e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGHMMInitWithBinnedData", "  ", "::", "usage"}], "=", 
   "\"\<No help available. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.81297333188901*^9, 
  3.8129733319827642`*^9}},ExpressionUUID->"23766607-5164-45a7-9f52-\
b5802a45364f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGHMMInitWithPhotonByPhotonData", "  ", "::", "usage"}], "=", 
   "\"\<No help available. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733323577795`*^9, 
  3.8129733324671583`*^9}},ExpressionUUID->"6e7801cc-4b21-49b3-a2a7-\
1b99a80eeeda"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGHMMLogLikelihood", "  ", "::", "usage"}], "=", 
   "\"\<No help available. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733328265457`*^9, 
  3.8129733329359274`*^9}},ExpressionUUID->"ce07adae-f34c-42c9-b716-\
b1806ca514d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGHMMSetNumberOfModels", "  ", "::", "usage"}], "=", 
   "\"\<FGHMMSetNumberOfModels[modelsize] \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733332953143`*^9, 
  3.8129733334046926`*^9}},ExpressionUUID->"ee3828ea-7236-4ffe-8d29-\
6e2ee875818f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGHMMSetPhotonRates", "  ", "::", "usage"}], "=", 
   "\"\<No help available. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973333779707*^9, 
  3.8129733338890853`*^9}},ExpressionUUID->"5c583fb3-0173-4942-a502-\
9e6f064773b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGHMMSetPinPfin", "  ", "::", "usage"}], "=", 
   "\"\<No help available. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973334248476*^9, 
  3.8129733343578544`*^9}},ExpressionUUID->"fe27cae7-413a-4748-b435-\
3ee3d9dab955"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FGHMMViterbi", "  ", "::", "usage"}], "=", 
   "\"\<No help available. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973334732871*^9, 
  3.8129733348422503`*^9}},ExpressionUUID->"13800b8c-984c-4941-a8c7-\
40b2f8d3d342"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FFretHMMForwardBackward", "  ", "::", "usage"}], "=", 
   "\"\<FFretHMMForwardBackward[\!\(\*FormBox[StyleBox[\"K\", \
\"TI\"],TraditionalForm]\)] or\n\
FFretHMMForwardBackward[\!\(\*FormBox[StyleBox[\"K\", \
\"TI\"],TraditionalForm]\), photonrates]\napplies the \
forward\[Hyphen]backward algorithm to all previously initialized trajectories \
assuming the rate matrix \!\(\*FormBox[StyleBox[\"K\", \
\"TI\"],TraditionalForm]\). A list of state\[Hyphen]probability trajectories \
is returned. \nIn the first case (i.e. \
FFretHMMForwardBackward[\!\(\*FormBox[StyleBox[\"K\", \
\"TI\"],TraditionalForm]\)]), the photon rates set with \
FFretHMMSetPhotonRates are used. With \
FFretHMMForwardBackward[\!\(\*FormBox[StyleBox[\"K\", \
\"TI\"],TraditionalForm]\), photonrates], the photon rates given in \
photonrates are used. \nphotonrates is a list that contains for each \
trajectory \!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\) an \
expression of the form\n\!\(\*FormBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"F\", \"TI\"], \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", \"1\"}]], \",\", SubscriptBox[\"\[Mu]\
\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", \"1\"}]], \",\", SubscriptBox[\"\
\[Nu]\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", \"1\"}]]}], \"}\"}], \",\", \
RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"F\", \"TI\"], \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", \"2\"}]], \",\", SubscriptBox[\"\[Mu]\
\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", \"2\"}]], \",\", SubscriptBox[\"\
\[Nu]\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", \"2\"}]]}], \"}\"}], \
\"...\"}], \"}\"}], \",\", StyleBox[\"b\", \"TI\"], SubscriptBox[StyleBox[\"g\
\", \"TI\"], RowBox[{StyleBox[\"A\", \"TI\"], \",\", StyleBox[\"i\", \
\"TI\"]}]], \",\", StyleBox[\"b\", \"TI\"], SubscriptBox[StyleBox[\"g\", \"TI\
\"], RowBox[{StyleBox[\"D\", \"TI\"], \",\", StyleBox[\"i\", \"TI\"]}]]}], \
\"}\"}],TraditionalForm]\).\nThe first list contains for each state \
\!\(\*FormBox[StyleBox[\"s\", \"TI\"],TraditionalForm]\) of the kinetic model \
the expression \!\(\*FormBox[RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"F\
\", \"TI\"], RowBox[{StyleBox[\"i\", \"TI\"], \",\", StyleBox[\"s\", \
\"TI\"]}]], \",\", SubscriptBox[\"\[Mu]\", RowBox[{StyleBox[\"i\", \"TI\"], \
\",\", StyleBox[\"s\", \"TI\"]}]], \",\", SubscriptBox[\"\[Nu]\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", StyleBox[\"s\", \"TI\"]}]]}], \
\"}\"}],TraditionalForm]\), where \!\(\*FormBox[SubscriptBox[StyleBox[\"F\", \
\"TI\"], RowBox[{StyleBox[\"i\", \"TI\"], \",\", StyleBox[\"s\", \
\"TI\"]}]],TraditionalForm]\) is the mean total fluorescence detection rate \
(without background), \!\(\*FormBox[SubscriptBox[\"\[Mu]\", RowBox[{StyleBox[\
\"i\", \"TI\"], \",\", StyleBox[\"s\", \"TI\"]}]],TraditionalForm]\) is the \
probability that a detected fluorescence photon is detected on the acceptor \
detection route, and \!\(\*FormBox[SubscriptBox[\"\[Nu]\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", StyleBox[\"s\", \
\"TI\"]}]],TraditionalForm]\) is a parameter describing the intrinsic \
broadening of state \!\(\*FormBox[StyleBox[\"s\", \"TI\"],TraditionalForm]\) \
in proximity ratio space. \!\(\*FormBox[RowBox[{StyleBox[\"b\", \"TI\"], \
SubscriptBox[StyleBox[\"g\", \"TI\"], RowBox[{StyleBox[\"A\", \"TI\"], \",\", \
StyleBox[\"i\", \"TI\"]}]]}],TraditionalForm]\) and \
\!\(\*FormBox[RowBox[{StyleBox[\"b\", \"TI\"], SubscriptBox[StyleBox[\"g\", \
\"TI\"], RowBox[{StyleBox[\"D\", \"TI\"], \",\", StyleBox[\"i\", \
\"TI\"]}]]}],TraditionalForm]\) are the acceptor and donor background rates, \
respectively, of trajectory \!\(\*FormBox[StyleBox[\"i\", \
\"TI\"],TraditionalForm]\).\n\nFFretHMMForwardBackward has the option \
FHMMpinpfin. The default setting is FHMMpinpfin\!\(\(TraditionalForm\` \
\[Rule] \)\)FHMMOnePeq in which case pini\[LongEqual]peq with \
\!\(\*FormBox[RowBox[{StyleBox[\"K\", \"TI\"], \".\", StyleBox[\"p\", \
\"TI\"], StyleBox[\"e\", \"TI\"], StyleBox[\"q\", \"TI\"], \"\[LongEqual]\", \
\"0\"}],TraditionalForm]\), and pfinal\[LongEqual]\!\(TraditionalForm\`{\
\[Null]\)1,1,...\!\(\(TraditionalForm\`}\)\) are used in the calculations. \
Alternatively, pini and pfinal can be set individually for each trace using \
FPHSetPinPfin. The option is then FHMMpinpfin\!\(\(TraditionalForm\` \[Rule] \
\)\)FMTraceWise. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973335232892*^9, 
  3.8129733353578963`*^9}},ExpressionUUID->"bbac83f2-aa9e-451f-b1ea-\
5bd3ff16c623"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FFretHMMInitWithBinnedData", "  ", "::", "usage"}], "=", 
   "\"\<FFretHMMInitWithBinnedData[\!\(\*FormBox[RowBox[{\"{\", \
RowBox[{StyleBox[\"t\", \"TI\"], SubscriptBox[StyleBox[\"r\", \"TI\"], \
\"1\"], \",\", StyleBox[\"t\", \"TI\"], SubscriptBox[StyleBox[\"r\", \"TI\"], \
\"2\"], \",\", \"...\", \",\", StyleBox[\"t\", \"TI\"], \
SubscriptBox[StyleBox[\"r\", \"TI\"], StyleBox[\"M\", \"TI\"]], \",\", \
SubscriptBox[StyleBox[\"T\", \"TI\"], \"binning\"]}]}],TraditionalForm]\)] \
initializes Fretica's hidden Markov system for FRET data with \
\!\(\*FormBox[StyleBox[\"M\", \"TI\"],TraditionalForm]\) binned photon time \
traces of the form \!\(\*FormBox[RowBox[{StyleBox[\"t\", \"TI\"], \
SubscriptBox[StyleBox[\"r\", \"TI\"], StyleBox[\"i\", \"TI\"]], \
\"\[LongEqual]\", RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"N\", \"TI\"], RowBox[{StyleBox[\"A\", \
\"TI\"], \"1\"}]], \",\", SubscriptBox[StyleBox[\"N\", \"TI\"], \
RowBox[{StyleBox[\"D\", \"TI\"], \"1\"}]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"N\", \"TI\"], RowBox[{StyleBox[\"A\", \
\"TI\"], \"2\"}]], \",\", SubscriptBox[StyleBox[\"N\", \"TI\"], \
RowBox[{StyleBox[\"D\", \"TI\"], \"2\"}]]}], \"}\"}], \",\", \"...\"}], \
\"}\"}]}],TraditionalForm]\), where \
\!\(\*FormBox[SubscriptBox[StyleBox[\"N\", \"TI\"], StyleBox[RowBox[{\"A\", \
\"i\"}], \"TI\"]],TraditionalForm]\) and \!\(\*FormBox[SubscriptBox[StyleBox[\
\"N\", \"TI\"], StyleBox[RowBox[{\"D\", \"i\"}], \"TI\"]],TraditionalForm]\) \
are the acceptor and donor photon counts, respectively, of the \
\!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\)th bin. \
\!\(\*FormBox[SubscriptBox[StyleBox[\"T\", \"TI\"], \
\"binning\"],TraditionalForm]\) is the binning interval. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.81297333573291*^9, 
  3.812973335857916*^9}},ExpressionUUID->"014365c9-565b-4d71-8edf-\
d6c178209cd8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FFretHMMLogLikelihood", "  ", "::", "usage"}], "=", 
   "\"\<FFretHMMLogLikelihood[\!\(\*FormBox[StyleBox[\"K\", \
\"TI\"],TraditionalForm]\)] or\nFFretHMMLogLikelihood[\!\(\*FormBox[StyleBox[\
\"K\", \"TI\"],TraditionalForm]\), photonrates]\nreturns the total log\
\[Hyphen]likelihood of the HMM summed over all previously initialized \
trajectories assuming the rate matrix \!\(\*FormBox[StyleBox[\"K\", \
\"TI\"],TraditionalForm]\). \nFor \
FFretHMMLogLikelihood[\!\(\*FormBox[StyleBox[\"K\", \
\"TI\"],TraditionalForm]\)], the photon rates set with FFretHMMSetPhotonRates \
are used. With FFretHMMLogLikelihood[\!\(\*FormBox[StyleBox[\"K\", \
\"TI\"],TraditionalForm]\), photonrates], the photon rates given in \
photonrates are used. \nphotonrates is a list that contains, for each \
trajectory \!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\), an \
expression of the form\n\!\(\*FormBox[RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"F\", \"TI\"], \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", \"1\"}]], \",\", SubscriptBox[\"\[Mu]\
\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", \"1\"}]], \",\", SubscriptBox[\"\
\[Nu]\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", \"1\"}]]}], \"}\"}], \",\", \
RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"F\", \"TI\"], \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", \"2\"}]], \",\", SubscriptBox[\"\[Mu]\
\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", \"2\"}]], \",\", SubscriptBox[\"\
\[Nu]\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", \"2\"}]]}], \"}\"}], \
\"...\"}], \"}\"}], \",\", StyleBox[\"b\", \"TI\"], SubscriptBox[StyleBox[\"g\
\", \"TI\"], RowBox[{StyleBox[\"A\", \"TI\"], \",\", StyleBox[\"i\", \
\"TI\"]}]], \",\", StyleBox[\"b\", \"TI\"], SubscriptBox[StyleBox[\"g\", \"TI\
\"], RowBox[{StyleBox[\"D\", \"TI\"], \",\", StyleBox[\"i\", \"TI\"]}]]}], \
\"}\"}],TraditionalForm]\).\nThe first list contains for each state \
\!\(\*FormBox[StyleBox[\"s\", \"TI\"],TraditionalForm]\) of the kinetic model \
the expression \!\(\*FormBox[RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"F\
\", \"TI\"], RowBox[{StyleBox[\"i\", \"TI\"], \",\", StyleBox[\"s\", \
\"TI\"]}]], \",\", SubscriptBox[\"\[Mu]\", RowBox[{StyleBox[\"i\", \"TI\"], \
\",\", StyleBox[\"s\", \"TI\"]}]], \",\", SubscriptBox[\"\[Nu]\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", StyleBox[\"s\", \"TI\"]}]]}], \
\"}\"}],TraditionalForm]\), where \!\(\*FormBox[SubscriptBox[StyleBox[\"F\", \
\"TI\"], RowBox[{StyleBox[\"i\", \"TI\"], \",\", StyleBox[\"s\", \
\"TI\"]}]],TraditionalForm]\) is the mean total fluorescence detection rate \
(without background), \!\(\*FormBox[SubscriptBox[\"\[Mu]\", RowBox[{StyleBox[\
\"i\", \"TI\"], \",\", StyleBox[\"s\", \"TI\"]}]],TraditionalForm]\) is the \
probability that a detected fluorescence photon is detected on the acceptor \
detection route, and \!\(\*FormBox[SubscriptBox[\"\[Nu]\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", StyleBox[\"s\", \
\"TI\"]}]],TraditionalForm]\) is a parameter describing the intrinsic \
broadening of state \!\(\*FormBox[StyleBox[\"s\", \"TI\"],TraditionalForm]\) \
in proximity ratio space. \!\(\*FormBox[RowBox[{StyleBox[\"b\", \"TI\"], \
SubscriptBox[StyleBox[\"g\", \"TI\"], RowBox[{StyleBox[\"A\", \"TI\"], \",\", \
StyleBox[\"i\", \"TI\"]}]]}],TraditionalForm]\) and \
\!\(\*FormBox[RowBox[{StyleBox[\"b\", \"TI\"], SubscriptBox[StyleBox[\"g\", \
\"TI\"], RowBox[{StyleBox[\"D\", \"TI\"], \",\", StyleBox[\"i\", \
\"TI\"]}]]}],TraditionalForm]\) are the acceptor and donor background rates, \
respectively, of trajectory \!\(\*FormBox[StyleBox[\"i\", \
\"TI\"],TraditionalForm]\).\n\nFFretHMMLogLikelihood has the option \
FHMMpinpfin. The default setting is FHMMpinpfin\!\(\(TraditionalForm\` \
\[Rule] \)\)FHMMOnePeq, in which case pini\[LongEqual]peq with \
\!\(\*FormBox[RowBox[{StyleBox[\"K\", \"TI\"], \".\", StyleBox[\"p\", \
\"TI\"], StyleBox[\"e\", \"TI\"], StyleBox[\"q\", \"TI\"], \"\[LongEqual]\", \
\"0\"}],TraditionalForm]\), and pfinal\[LongEqual]\!\(TraditionalForm\`{\
\[Null]\)1,1,...\!\(\(TraditionalForm\`}\)\) are used in the calculations. \
Alternatively, pini and pfinal can be set individually for each trace using \
FFretHMMSetPinPfin. The option is then FHMMpinpfin\!\(\(TraditionalForm\` \
\[Rule] \)\)FMTraceWise. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973336248556*^9, 
  3.812973336373561*^9}},ExpressionUUID->"3765c25e-86ae-4c3f-a4d2-\
e7b66e4d9432"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FFretHMMSetPhotonRates", "  ", "::", "usage"}], "=", 
   "\"\<FFretHMMSetPhotonRates[photonrates] sets the acceptor and donor \
photon detection rates assumed for the photon time traces that were \
beforehand initialized using FFretHMMInitWithBinnedData.\nphotonrates is a \
list that contains, for each trajectory \!\(\*FormBox[StyleBox[\"i\", \
\"TI\"],TraditionalForm]\), an expression of the form\n\
\!\(\*FormBox[RowBox[{RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"F\", \"TI\"], RowBox[{StyleBox[\"i\", \
\"TI\"], \",\", \"1\"}]], \",\", SubscriptBox[\"\[Mu]\", RowBox[{StyleBox[\"i\
\", \"TI\"], \",\", \"1\"}]], \",\", SubscriptBox[\"\[Nu]\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", \"1\"}]]}], \"}\"}], \",\", \
RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"F\", \"TI\"], \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", \"2\"}]], \",\", SubscriptBox[\"\[Mu]\
\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", \"2\"}]], \",\", SubscriptBox[\"\
\[Nu]\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", \"2\"}]]}], \"}\"}], \
\"...\"}], \"}\"}], \",\", StyleBox[\"b\", \"TI\"], SubscriptBox[StyleBox[\"g\
\", \"TI\"], RowBox[{StyleBox[\"A\", \"TI\"], \",\", StyleBox[\"i\", \
\"TI\"]}]], \",\", StyleBox[\"b\", \"TI\"], SubscriptBox[StyleBox[\"g\", \"TI\
\"], RowBox[{StyleBox[\"D\", \"TI\"], \",\", StyleBox[\"i\", \"TI\"]}]], \
\"}\"}],TraditionalForm]\).\nThe first list contains for each state \
\!\(\*FormBox[StyleBox[\"s\", \"TI\"],TraditionalForm]\) of the kinetic model \
the expression \!\(\*FormBox[RowBox[{\"{\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"F\", \"TI\"], RowBox[{StyleBox[\"i\", \
\"TI\"], \",\", StyleBox[\"s\", \"TI\"]}]], \",\", SubscriptBox[\"\[Mu]\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", StyleBox[\"s\", \"TI\"]}]], \",\", \
SubscriptBox[\"\[Nu]\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", \
StyleBox[\"s\", \"TI\"]}]]}], \"}\"}]}],TraditionalForm]\), where \
\!\(\*FormBox[SubscriptBox[StyleBox[\"F\", \"TI\"], RowBox[{StyleBox[\"i\", \
\"TI\"], \",\", StyleBox[\"s\", \"TI\"]}]],TraditionalForm]\) is the mean \
total fluorescence detection rate (without background), \
\!\(\*FormBox[SubscriptBox[\"\[Mu]\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", \
StyleBox[\"s\", \"TI\"]}]],TraditionalForm]\) is the probability that a \
detected fluorescence photon is detected on the acceptor detection route, and \
\!\(\*FormBox[SubscriptBox[\"\[Nu]\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", \
StyleBox[\"s\", \"TI\"]}]],TraditionalForm]\) is a parameter describing the \
intrinsic broadening of state \!\(\*FormBox[StyleBox[\"s\", \
\"TI\"],TraditionalForm]\) in proximity ratio space. \
\!\(\*FormBox[RowBox[{StyleBox[\"b\", \"TI\"], SubscriptBox[StyleBox[\"g\", \
\"TI\"], RowBox[{StyleBox[\"A\", \"TI\"], \",\", StyleBox[\"i\", \
\"TI\"]}]]}],TraditionalForm]\) and \!\(\*FormBox[RowBox[{StyleBox[\"b\", \
\"TI\"], SubscriptBox[StyleBox[\"g\", \"TI\"], RowBox[{StyleBox[\"D\", \
\"TI\"], \",\", StyleBox[\"i\", \"TI\"]}]]}],TraditionalForm]\) are the \
acceptor and donor background rates, respectively, of trajectory \
\!\(\*FormBox[StyleBox[\"i\", \"TI\"],TraditionalForm]\). \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.812973336764198*^9, 
  3.812973336873579*^9}},ExpressionUUID->"aac7ea48-9420-4844-870e-\
1f323692b97e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FFretHMMSetPinPfin", "  ", "::", "usage"}], "=", 
   "\"\<FFretHMMSetPinPfin[ pinpfin ] sets the \
\!\(\*FormBox[SubscriptBox[StyleBox[\"p\", \"TI\"], StyleBox[RowBox[{\"i\", \
\"n\"}], \"TI\"]],TraditionalForm]\) and \!\(\*FormBox[SubscriptBox[StyleBox[\
\"p\", \"TI\"], StyleBox[RowBox[{\"f\", \"i\", \"n\"}], \
\"TI\"]],TraditionalForm]\) vectors for the photon time traces (initialized \
using FFretHMMInitWithBinnedData). The command is required if \
FFretHMMLogLikelihood or FFretHMMViterbi are going to be called with the \
option FHMMpinpfin\!\(\(TraditionalForm\` \[Rule] \)\)FMTraceWise.\npinpfin \
can be of the form \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"p\", \"TI\"], \"in\"], \",\", \
SubscriptBox[StyleBox[\"p\", \"TI\"], \"fin\"]}], \"}\"}],TraditionalForm]\), \
where \!\(\*FormBox[SubscriptBox[StyleBox[\"p\", \"TI\"], \
\"in\"],TraditionalForm]\) and \!\(\*FormBox[SubscriptBox[StyleBox[\"p\", \
\"TI\"], \"fin\"],TraditionalForm]\) are state population vectors. In this \
case, the vectors will be assumed to be the same for all photon time traces. \
Alternatively, state population vectors can be set for the photon time traces \
individually with pinpfin of the form \!\(\*FormBox[RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"p\", \"TI\"], \
\"in1\"], \",\", SubscriptBox[StyleBox[\"p\", \"TI\"], \"fin1\"]}], \"}\"}], \
\",\", \"...\", \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"p\", \
\"TI\"], RowBox[{\"in\", StyleBox[\"M\", \"TI\"]}]], \",\", \
SubscriptBox[StyleBox[\"p\", \"TI\"], RowBox[{\"fin\", StyleBox[\"M\", \
\"TI\"]}]]}], \"}\"}]}], \"}\"}],TraditionalForm]\), where \
\!\(\*FormBox[StyleBox[\"M\", \"TI\"],TraditionalForm]\) is the number of \
traces that the HM system was initialized with. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733372642164`*^9, 
  3.812973337373597*^9}},ExpressionUUID->"d26433ba-9618-4678-96a9-\
ce3ceddd45a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FFretHMMSimulateBinnedTrace", "  ", "::", "usage"}], "=", 
   "\"\<FFretHMMSimulateBinnedTrace[Km\!\(TraditionalForm\`_\)?\
FNumericSquareMatrixQ, \!\(TraditionalForm\`{{\[Null]\)Fmean, mu, nu, bgA, \
bgD\!\(\(TraditionalForm\`}\)\)..\!\(\(TraditionalForm\`}\)\), Smax, t, \
binning] \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733377486115`*^9, 
  3.8129733378579893`*^9}},ExpressionUUID->"e621600d-ff50-4235-bc5e-\
6042414b54d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FFretHMMViterbi", "  ", "::", "usage"}], "=", 
   "\"\<FFretHMMViterbi[\!\(\*FormBox[StyleBox[\"K\", \
\"TI\"],TraditionalForm]\)] or FFretHMMViterbi[\!\(\*FormBox[StyleBox[\"K\", \
\"TI\"],TraditionalForm]\), photonrates] applies the Viterbi algorithm to all \
previously initialized trajectories assuming the rate matrix K. A list of \
most likely state trajectories is returned in form of a FDwellList. \nFor \
FFretHMMViterbi[\!\(\*FormBox[StyleBox[\"K\", \"TI\"],TraditionalForm]\)], \
the photon rates set with FFretHMMSetPhotonRates are used. With \
FHMMViterbi[\!\(\*FormBox[StyleBox[\"K\", \"TI\"],TraditionalForm]\), \
photonrates], the photon rates given in photonrates are used. \nphotonrates \
is a list that contains, for each trajectory \!\(\*FormBox[StyleBox[\"i\", \
\"TI\"],TraditionalForm]\), an expression of the form\n\!\(\*FormBox[RowBox[{\
\"{\", RowBox[{RowBox[{\"{\", RowBox[{RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"F\", \"TI\"], RowBox[{StyleBox[\"i\", \
\"TI\"], \",\", \"1\"}]], \",\", SubscriptBox[\"\[Mu]\", RowBox[{StyleBox[\"i\
\", \"TI\"], \",\", \"1\"}]], \",\", SubscriptBox[\"\[Nu]\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", \"1\"}]]}], \"}\"}], \",\", \
RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"F\", \"TI\"], \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", \"2\"}]], \",\", SubscriptBox[\"\[Mu]\
\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", \"2\"}]], \",\", SubscriptBox[\"\
\[Nu]\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", \"2\"}]]}], \"}\"}], \
\"...\"}], \"}\"}], \",\", SubscriptBox[\"bg\", RowBox[{StyleBox[\"A\", \
\"TI\"], \",\", StyleBox[\"i\", \"TI\"]}]], \",\", SubscriptBox[\"bg\", \
RowBox[{StyleBox[\"D\", \"TI\"], \",\", StyleBox[\"i\", \"TI\"]}]]}], \
\"}\"}],TraditionalForm]\).\nThe first list contains for each state \
\!\(\*FormBox[StyleBox[\"s\", \"TI\"],TraditionalForm]\) of the kinetic model \
the expression \!\(\*FormBox[RowBox[{\"{\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"F\", \"TI\"], RowBox[{StyleBox[\"i\", \
\"TI\"], \",\", StyleBox[\"s\", \"TI\"]}]], \",\", SubscriptBox[\"\[Mu]\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", StyleBox[\"s\", \"TI\"]}]], \",\", \
SubscriptBox[\"\[Nu]\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", \
StyleBox[\"s\", \"TI\"]}]]}], \"}\"}]}],TraditionalForm]\), where \
\!\(\*FormBox[SubscriptBox[StyleBox[\"F\", \"TI\"], RowBox[{StyleBox[\"i\", \
\"TI\"], \",\", StyleBox[\"s\", \"TI\"]}]],TraditionalForm]\) is the mean \
fluorescence rate (without background), \!\(\*FormBox[SubscriptBox[\"\[Mu]\", \
RowBox[{StyleBox[\"i\", \"TI\"], \",\", StyleBox[\"s\", \
\"TI\"]}]],TraditionalForm]\) is the probability that a detected fluorescence \
photon is detected on the acceptor detection route, and \
\!\(\*FormBox[SubscriptBox[\"\[Nu]\", RowBox[{StyleBox[\"i\", \"TI\"], \",\", \
StyleBox[\"s\", \"TI\"]}]],TraditionalForm]\) is a parameter describing the \
intrinsic broadening of state \!\(\*FormBox[StyleBox[\"s\", \
\"TI\"],TraditionalForm]\) in proximity ratio space. \
\!\(\*FormBox[SubscriptBox[\"bg\", RowBox[{StyleBox[\"A\", \"TI\"], \",\", \
StyleBox[\"i\", \"TI\"]}]],TraditionalForm]\) and \!\(\*FormBox[SubscriptBox[\
\"bg\", RowBox[{StyleBox[\"D\", \"TI\"], \",\", StyleBox[\"i\", \
\"TI\"]}]],TraditionalForm]\) are the acceptor and donor background rates, \
respectively, of trajectory \!\(\*FormBox[StyleBox[\"i\", \
\"TI\"],TraditionalForm]\). \nFFretHMMViterbi has the option FHMMpinpfin. The \
default setting is FHMMpinpfin\!\(\(TraditionalForm\` \[Rule] \)\)FHMMOnePeq, \
in which case pini\[LongEqual]peq with \!\(\*FormBox[RowBox[{StyleBox[\"K\", \
\"TI\"], \".\", StyleBox[\"p\", \"TI\"], StyleBox[\"e\", \"TI\"], \
StyleBox[\"q\", \"TI\"], \"\[LongEqual]\", \"0\"}],TraditionalForm]\), and \
pfinal\[LongEqual]\!\(TraditionalForm\`{\[Null]\)1,1,...\!\(\(TraditionalForm\
\`}\)\) are used in the calculations. Alternatively, pini and pfinal can be \
set individually for each trace using FPHSetPinPfin. The option is then \
FHMMpinpfin\!\(\(TraditionalForm\` \[Rule] \)\)FMTraceWise. \>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8129733382642546`*^9, 
  3.8129733383892593`*^9}},ExpressionUUID->"fca4702a-2cab-4df5-a1e5-\
b022a689f4bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHmmAppendToTrajectoryList", "  ", "::", "usage"}], "=", 
   "\"\<Deprecated command. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733387642756`*^9, 
  3.8129733388892813`*^9}},ExpressionUUID->"9cf2b0e1-4e7b-4b3e-acf9-\
baa76f221c41"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHmmClearTrajectoryList", "  ", "::", "usage"}], "=", 
   "\"\<Deprecated command. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733392642975`*^9, 
  3.8129733393736773`*^9}},ExpressionUUID->"65d5c864-28d3-4e19-a99a-\
5770b2f3763b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHmmInitTrajectoryList", "  ", "::", "usage"}], "=", 
   "\"\<Deprecated command. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733397643147`*^9, 
  3.8129733398736963`*^9}},ExpressionUUID->"d8f34db2-8d6f-4efb-8977-\
f3f19b30c1f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHmmLikelihood", "  ", "::", "usage"}], "=", 
   "\"\<Deprecated command. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973340248708*^9, 
  3.8129733403580875`*^9}},ExpressionUUID->"ac2bf290-8b8a-4819-8a59-\
717b4086c358"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHmmLikelihoodPeqFromK", "  ", "::", "usage"}], "=", 
   "\"\<Deprecated command. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973340733102*^9, 
  3.8129733408424807`*^9}},ExpressionUUID->"565dd175-8c11-480a-8d33-\
4a9b1e4263df"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHmmSetPhotonRates", "  ", "::", "usage"}], "=", 
   "\"\<Deprecated command. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733412174964`*^9, 
  3.8129733413424997`*^9}},ExpressionUUID->"b9d9661d-cb52-4d1e-a74f-\
d8cfa1deb721"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHmmTrajectory", "  ", "::", "usage"}], "=", 
   "\"\<Deprecated command. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.81297334170189*^9, 
  3.8129733418112717`*^9}},ExpressionUUID->"5b80554b-77db-494b-96c8-\
57125b4f29b3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHmmViterbi", "  ", "::", "usage"}], "=", 
   "\"\<Deprecated command. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973342186287*^9, 
  3.8129733422956653`*^9}},ExpressionUUID->"45c8ca11-6e6b-45c5-92d5-\
0813b5c0580e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FHmmViterbiPeqFromK", "  ", "::", "usage"}], "=", 
   "\"\<Deprecated command. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973342670679*^9, 
  3.812973342780058*^9}},ExpressionUUID->"104abb4d-9b10-47fc-82f9-\
cc516598b646"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FMLHAppendToBurstList", "  ", "::", "usage"}], "=", 
   "\"\<Deprecated command. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973343139447*^9, 
  3.812973343264451*^9}},ExpressionUUID->"3c6846b1-6b8a-4dce-8389-\
e92f471b5d4c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FMLHBurstListLength", "  ", "::", "usage"}], "=", 
   "\"\<Deprecated command. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733436394653`*^9, 
  3.812973343748845*^9}},ExpressionUUID->"1a395710-5cfd-455b-8106-\
e6749f2023ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FMLHClearBurstList", "  ", "::", "usage"}], "=", 
   "\"\<Deprecated command. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733441082315`*^9, 
  3.8129733442801185`*^9}},ExpressionUUID->"024b2b95-8480-46f6-911a-\
fb67505be54e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FMLHFret", "  ", "::", "usage"}], "=", 
   "\"\<Deprecated command. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733446863785`*^9, 
  3.8129733448113837`*^9}},ExpressionUUID->"bf5d332b-a35f-459b-86ee-\
63231861cb84"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FMLHGetBursts", "  ", "::", "usage"}], "=", 
   "\"\<Deprecated command. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733452020235`*^9, 
  3.8129733453114047`*^9}},ExpressionUUID->"2ed782ff-f6ba-4cab-a2e8-\
50e21b541012"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FMLHGetLikelihood", "  ", "::", "usage"}], "=", 
   "\"\<Deprecated command. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733456707926`*^9, 
  3.8129733457801733`*^9}},ExpressionUUID->"17c43c8f-2629-4259-9d35-\
30650d12dd6d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FMLHGetLikelihoodPeqFromK", "  ", "::", "usage"}], "=", 
   "\"\<Deprecated command. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733461551895`*^9, 
  3.8129733462645683`*^9}},ExpressionUUID->"b728dcc9-d209-4683-b8fd-\
120bc017ba74"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FMLHGetLikelihoodpeqFromKconstNtot", "  ", "::", "usage"}], "=", 
   "\"\<Deprecated command. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733466395817`*^9, 
  3.8129733467958374`*^9}},ExpressionUUID->"b2ff5039-19a2-4fd4-89ed-\
2d83d72e14d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FMLHInitBurstList", "  ", "::", "usage"}], "=", 
   "\"\<Deprecated command. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733471708517`*^9, 
  3.8129733472802315`*^9}},ExpressionUUID->"5ce6d85c-3147-4191-ab8f-\
e2451055608d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FMLHRecolor", "  ", "::", "usage"}], "=", 
   "\"\<Deprecated command. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733476552444`*^9, 
  3.812973347764623*^9}},ExpressionUUID->"f47f4d29-53d7-4f5f-96a2-\
31389352884c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FMLHSetPhotonRates", "  ", "::", "usage"}], "=", 
   "\"\<Deprecated command. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973348139637*^9, 
  3.8129733482490177`*^9}},ExpressionUUID->"55a91567-255d-4838-85aa-\
76a4e00ef135"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FMLHTrajectory", "  ", "::", "usage"}], "=", 
   "\"\<Deprecated command. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973348608404*^9, 
  3.812973348717784*^9}},ExpressionUUID->"14c7fecf-7fce-4815-a8a6-\
3f43cb123431"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FMLHTransitionStatesGetLikelihoods", "  ", "::", "usage"}], "=", 
   "\"\<Deprecated command. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733491084228`*^9, 
  3.812973349217803*^9}},ExpressionUUID->"00daa616-9142-4c2a-8781-\
e03bee704ebb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FMLHViterbi", "  ", "::", "usage"}], "=", 
   "\"\<Deprecated command. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.812973349592819*^9, 
  3.812973349702198*^9}},ExpressionUUID->"65912eab-bf9c-46a4-a8aa-\
4b5e1137a1fd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FMLHViterbiPeqFromK", "  ", "::", "usage"}], "=", 
   "\"\<Deprecated command. \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8129733500772142`*^9, 
  3.812973350186596*^9}},ExpressionUUID->"f1ad287e-4e5d-4897-ba77-\
60769baae9d1"],

Cell[BoxData[
 RowBox[{"EndPackage", "[", "]"}]], "Code",ExpressionUUID->"ad49df4e-514b-44a3-a3ff-c11d4c5cd007"]
},
AutoGeneratedPackage->Automatic,
WindowSize->{940., 572.5},
WindowMargins->{{Automatic, -348}, {802, Automatic}},
TaggingRules->None,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (January 30, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Input"], InitializationCell -> True]}, Visible -> False, 
  FrontEndVersion -> "13.2 for Microsoft Windows (64-bit) (January 30, 2023)",
   StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"4feeafb7-2963-4f3a-a958-ee7f9d08b4e2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1058, 26, 138, "Code",ExpressionUUID->"c0c7cf13-f62e-4d5c-bdf0-6fb046e1f99d"],
Cell[1619, 48, 154, 3, 50, "Code",ExpressionUUID->"f42d2517-7986-4298-9b81-67a9677b7bf8"],
Cell[1776, 53, 317, 8, 44, "Input",ExpressionUUID->"23911908-f942-4628-9bec-fb378e054b2f"],
Cell[2096, 63, 290, 7, 44, "Input",ExpressionUUID->"399c2c95-b03d-448c-acfa-912e8bebc822"],
Cell[2389, 72, 334, 9, 44, "Input",ExpressionUUID->"70b2e50d-3a05-454f-8aee-094dcc9cfea4"],
Cell[2726, 83, 738, 14, 159, "Input",ExpressionUUID->"9b1a06ce-2aa5-40e7-8cc0-fba7f5b1081e"],
Cell[3467, 99, 1066, 18, 178, "Input",ExpressionUUID->"2b120967-da31-4413-9bbb-208f8fd08326"],
Cell[4536, 119, 524, 10, 102, "Input",ExpressionUUID->"0697c545-0d43-4238-a495-8920b7c9daef"],
Cell[5063, 131, 393, 9, 44, "Input",ExpressionUUID->"470c4866-6338-4416-b155-1fe870470171"],
Cell[5459, 142, 1108, 20, 159, "Input",ExpressionUUID->"aa6d43db-5b76-4758-9006-4e00cc8f72e0"],
Cell[6570, 164, 1082, 18, 159, "Input",ExpressionUUID->"b1bea284-deb1-42d5-b8e5-bc806bfb0fb7"],
Cell[7655, 184, 1382, 23, 162, "Input",ExpressionUUID->"649d3ac0-abdc-448c-a278-49133422d381"],
Cell[9040, 209, 511, 10, 102, "Input",ExpressionUUID->"d9193e1d-a010-4e53-8d3e-f3f8d98fe7d1"],
Cell[9554, 221, 1137, 20, 216, "Input",ExpressionUUID->"9191d1b3-fc67-4737-acd7-1f2af4c4f2ef"],
Cell[10694, 243, 292, 7, 44, "Input",ExpressionUUID->"9dd42b0c-b9a6-4fed-8290-592689250708"],
Cell[10989, 252, 332, 8, 44, "Input",ExpressionUUID->"15fd68b5-a5ee-49b9-b19f-6bbc63888dec"],
Cell[11324, 262, 396, 9, 44, "Input",ExpressionUUID->"9c284cbe-6320-4ecb-95ac-c4897d24e85d"],
Cell[11723, 273, 646, 12, 64, "Input",ExpressionUUID->"b8b81aac-4aab-4c52-b73d-863831e806d8"],
Cell[12372, 287, 1010, 18, 140, "Input",ExpressionUUID->"fdbf723c-c839-4729-8696-2cfd85c41229"],
Cell[13385, 307, 1009, 17, 254, "Input",ExpressionUUID->"dc431c51-63eb-45d3-a1c6-3be077af3c7f"],
Cell[14397, 326, 328, 8, 44, "Input",ExpressionUUID->"99ee7d7d-71ff-48fa-b305-c8f80b0ad4d6"],
Cell[14728, 336, 357, 8, 64, "Input",ExpressionUUID->"b56fe468-dafa-4d4c-ad9f-4468e1dee034"],
Cell[15088, 346, 326, 8, 44, "Input",ExpressionUUID->"f96f4005-c087-457d-98ec-00dd38e923bb"],
Cell[15417, 356, 511, 10, 102, "Input",ExpressionUUID->"542cd05b-a2f5-4ba7-aa80-81a2f38cf560"],
Cell[15931, 368, 318, 8, 44, "Input",ExpressionUUID->"037a4eee-5cdc-4a8b-a8fb-6c8ec7ffd62c"],
Cell[16252, 378, 315, 8, 44, "Input",ExpressionUUID->"2f48314d-b184-4197-bc98-fe882114d79f"],
Cell[16570, 388, 345, 8, 44, "Input",ExpressionUUID->"cae70081-604b-4595-ab41-aa6270f8375a"],
Cell[16918, 398, 511, 11, 83, "Input",ExpressionUUID->"024d3d01-63ca-4348-ab2c-e7ce06a77d0b"],
Cell[17432, 411, 283, 7, 44, "Input",ExpressionUUID->"044cc548-0d40-4508-9154-f33a351851d9"],
Cell[17718, 420, 285, 7, 44, "Input",ExpressionUUID->"8d31b722-0489-4c92-a7e7-f1afc5253a04"],
Cell[18006, 429, 460, 10, 83, "Input",ExpressionUUID->"000e4a2c-26f1-4805-bca6-01a430f2ca20"],
Cell[18469, 441, 349, 8, 44, "Input",ExpressionUUID->"d30c024d-8d42-4145-808d-05615ce7b71b"],
Cell[18821, 451, 402, 9, 64, "Input",ExpressionUUID->"720cab13-6be0-45a9-8a05-a0d8b63b582b"],
Cell[19226, 462, 383, 9, 44, "Input",ExpressionUUID->"7a54ee2a-a039-4b8c-9913-533be4178b27"],
Cell[19612, 473, 517, 10, 83, "Input",ExpressionUUID->"bdddfb1e-8a7d-477a-9b9a-d41ba09708c3"],
Cell[20132, 485, 467, 10, 102, "Input",ExpressionUUID->"d6093a84-4ff6-457a-8618-2b95968c76cd"],
Cell[20602, 497, 319, 8, 44, "Input",ExpressionUUID->"68435595-9616-425c-b84c-fec4c876d52a"],
Cell[20924, 507, 567, 11, 121, "Input",ExpressionUUID->"eb9758dd-a485-40cc-be34-6a2352b75273"],
Cell[21494, 520, 403, 9, 83, "Input",ExpressionUUID->"8a534c94-8a8d-4b31-8374-fa16886097ef"],
Cell[21900, 531, 436, 9, 83, "Input",ExpressionUUID->"cac68562-79b0-4adc-857b-726c651ca871"],
Cell[22339, 542, 739, 14, 102, "Input",ExpressionUUID->"c669d125-0cec-4336-87dc-dc3f8902b780"],
Cell[23081, 558, 813, 15, 102, "Input",ExpressionUUID->"93008a13-e237-42df-8143-c833e6be6eb3"],
Cell[23897, 575, 322, 8, 44, "Input",ExpressionUUID->"ee80b64b-d14a-4321-8878-1217204dc696"],
Cell[24222, 585, 320, 8, 44, "Input",ExpressionUUID->"ba8a582c-6634-421c-97cf-b397cfe444d7"],
Cell[24545, 595, 324, 8, 44, "Input",ExpressionUUID->"290682f7-6902-4957-b77c-994f42c3be8d"],
Cell[24872, 605, 326, 8, 44, "Input",ExpressionUUID->"6438397b-de78-47fe-9c0e-76a89a4510aa"],
Cell[25201, 615, 1000, 17, 102, "Input",ExpressionUUID->"38d52cac-b7c0-46f4-a24b-5d12a1498636"],
Cell[26204, 634, 783, 15, 83, "Input",ExpressionUUID->"4f7ea6de-fa1e-4d9f-b6e8-35233b3fa5a4"],
Cell[26990, 651, 850, 16, 83, "Input",ExpressionUUID->"4e984cec-8d59-4071-a21c-fd72691ae6a6"],
Cell[27843, 669, 859, 16, 83, "Input",ExpressionUUID->"8fcfb83a-7540-43cc-96ce-30039a13391c"],
Cell[28705, 687, 1334, 22, 178, "Input",ExpressionUUID->"65f75e6f-8eb8-4542-86a9-cefbdc9a999d"],
Cell[30042, 711, 838, 14, 121, "Input",ExpressionUUID->"1b3ce8c8-f20a-476a-bd47-2b3ebfbf6c10"],
Cell[30883, 727, 947, 16, 140, "Input",ExpressionUUID->"1a57d12b-e013-4cc3-9827-973e68f7d1ed"],
Cell[31833, 745, 387, 9, 83, "Input",ExpressionUUID->"1010a60a-49e5-495a-b20b-4d491ba1ebfb"],
Cell[32223, 756, 397, 9, 83, "Input",ExpressionUUID->"4bcdff98-53c6-4dd4-bf95-7cd681eb47f2"],
Cell[32623, 767, 444, 9, 64, "Input",ExpressionUUID->"2d1510ef-34d4-4ddb-9fb2-152d10908727"],
Cell[33070, 778, 718, 14, 83, "Input",ExpressionUUID->"3c85f348-dc4c-49fc-8416-e394634da2d9"],
Cell[33791, 794, 375, 8, 83, "Input",ExpressionUUID->"6b00a06f-54d1-47eb-9c8a-64cc31199a68"],
Cell[34169, 804, 310, 8, 44, "Input",ExpressionUUID->"265e6c90-cb4a-4904-b259-24ef4f5e5eba"],
Cell[34482, 814, 356, 8, 64, "Input",ExpressionUUID->"db9a7484-48e6-4729-b21a-d861d07bb0d8"],
Cell[34841, 824, 465, 9, 83, "Input",ExpressionUUID->"c763a7d3-e582-49ed-9b18-dbd269d564e4"],
Cell[35309, 835, 735, 14, 102, "Input",ExpressionUUID->"607c8575-5847-4b38-b9ca-e0ae473d82c5"],
Cell[36047, 851, 604, 12, 83, "Input",ExpressionUUID->"c33e4d8e-6933-4a43-a041-2d14cbe6e11f"],
Cell[36654, 865, 606, 12, 83, "Input",ExpressionUUID->"cdeed580-131a-4e8f-b19f-8beb4d7a7893"],
Cell[37263, 879, 574, 11, 102, "Input",ExpressionUUID->"88fd4f69-669c-464a-bcf6-85a65df35e04"],
Cell[37840, 892, 605, 12, 121, "Input",ExpressionUUID->"29fbb206-28cb-4691-bb5a-3a7810f82a26"],
Cell[38448, 906, 2164, 34, 254, "Input",ExpressionUUID->"62326573-2b04-4841-892c-6f2b3edb22e9"],
Cell[40615, 942, 1160, 19, 219, "Input",ExpressionUUID->"22788bac-9805-4888-bdcf-cd0e99b4c6ff"],
Cell[41778, 963, 3566, 54, 334, "Input",ExpressionUUID->"e7985b08-06d5-4afd-932d-e78d0f74cd66"],
Cell[45347, 1019, 2620, 41, 275, "Input",ExpressionUUID->"e63948e9-c207-47b2-bc27-5beeac5e87e2"],
Cell[47970, 1062, 2028, 33, 200, "Input",ExpressionUUID->"3f5b81aa-f214-47fc-88ff-9032e6ad0a4f"],
Cell[50001, 1097, 5873, 89, 580, "Input",ExpressionUUID->"12914c84-e4fb-4c4a-9737-8da787dcbe59"],
Cell[55877, 1188, 4877, 75, 570, "Input",ExpressionUUID->"ee76c426-1e95-4f39-9c9f-a2933648e25f"],
Cell[60757, 1265, 406, 9, 83, "Input",ExpressionUUID->"49a2484d-7847-418e-918c-aa0bfe718ef0"],
Cell[61166, 1276, 397, 9, 83, "Input",ExpressionUUID->"5a65041b-e96e-425c-9b10-e1f9ad181ead"],
Cell[61566, 1287, 401, 9, 83, "Input",ExpressionUUID->"5512840f-2835-43a3-8328-b838dc535e46"],
Cell[61970, 1298, 381, 9, 83, "Input",ExpressionUUID->"6be63fa3-dbf1-4657-945f-57abb9e3b74a"],
Cell[62354, 1309, 1153, 19, 121, "Input",ExpressionUUID->"33cd1bae-ea2e-4303-80ac-b9ea7865c2a6"],
Cell[63510, 1330, 348, 8, 64, "Input",ExpressionUUID->"60f372bf-6f5e-4c4f-9a17-fe09dd8a08c7"],
Cell[63861, 1340, 404, 9, 83, "Input",ExpressionUUID->"d8d542a3-2882-42ea-b61a-348f3cd2e14d"],
Cell[64268, 1351, 318, 8, 44, "Input",ExpressionUUID->"eb26832b-054e-478c-bdd9-20a1a700ee10"],
Cell[64589, 1361, 328, 8, 44, "Input",ExpressionUUID->"5af5d4d5-35d0-4c5d-bec2-70c7f930a8c7"],
Cell[64920, 1371, 330, 8, 44, "Input",ExpressionUUID->"542f14e6-568f-426e-94e5-971754a26044"],
Cell[65253, 1381, 314, 8, 44, "Input",ExpressionUUID->"5e49d6ed-8689-4564-bc96-c270ad3caf02"],
Cell[65570, 1391, 307, 8, 44, "Input",ExpressionUUID->"08857b2d-3b77-4313-98cb-c83d0c1c1c41"],
Cell[65880, 1401, 361, 8, 64, "Input",ExpressionUUID->"85e07999-9b35-4e64-b52c-3a9307501d6d"],
Cell[66244, 1411, 4414, 68, 349, "Input",ExpressionUUID->"9740b5ed-c211-4018-897c-7b4525495b50"],
Cell[70661, 1481, 292, 7, 44, "Input",ExpressionUUID->"c93316e5-3955-4b75-85c8-0281c8b3465f"],
Cell[70956, 1490, 300, 7, 44, "Input",ExpressionUUID->"8a154fd5-71da-4735-8cad-3cd65d39e61d"],
Cell[71259, 1499, 1361, 22, 254, "Input",ExpressionUUID->"a8536a68-da7d-4769-a780-92e093b8ccac"],
Cell[72623, 1523, 276, 7, 44, "Input",ExpressionUUID->"40e5ed86-0cb8-4353-82fd-164374e8479d"],
Cell[72902, 1532, 1162, 20, 159, "Input",ExpressionUUID->"4c4c4439-760a-4a4d-aa30-0c2b95fdf635"],
Cell[74067, 1554, 346, 8, 64, "Input",ExpressionUUID->"1740e87b-77df-4a8d-adde-af73d8799f67"],
Cell[74416, 1564, 277, 7, 44, "Input",ExpressionUUID->"a40a37cf-8380-490c-9351-78f1272bb1b4"],
Cell[74696, 1573, 278, 7, 44, "Input",ExpressionUUID->"0700feb5-12db-4dc9-9818-87f1be40fbe0"],
Cell[74977, 1582, 302, 7, 44, "Input",ExpressionUUID->"71132043-0fbe-4377-a44d-93ced5e57ebc"],
Cell[75282, 1591, 705, 13, 140, "Input",ExpressionUUID->"6f22ad01-2544-4d37-b0eb-3174ada2c302"],
Cell[75990, 1606, 424, 9, 64, "Input",ExpressionUUID->"a5b328d7-624e-427b-bcc8-22488d246c13"],
Cell[76417, 1617, 417, 9, 64, "Input",ExpressionUUID->"eec4739a-5c77-4fdd-a61e-7e6acd914f09"],
Cell[76837, 1628, 447, 9, 83, "Input",ExpressionUUID->"2614e11e-a4a2-4434-a7ad-ec892d545f7d"],
Cell[77287, 1639, 434, 9, 83, "Input",ExpressionUUID->"c15ddaca-7bcf-47c0-908a-f106a8de6f13"],
Cell[77724, 1650, 10104, 147, 1310, "Input",ExpressionUUID->"38a652b9-5138-426d-8b08-8b8bf8c6b408"],
Cell[87831, 1799, 2099, 33, 140, "Input",ExpressionUUID->"b9747e7b-d5f5-48f8-83dc-ffb8125c89de"],
Cell[89933, 1834, 1736, 29, 216, "Input",ExpressionUUID->"a60f5c82-7595-41b3-a175-efa614a759a2"],
Cell[91672, 1865, 440, 9, 83, "Input",ExpressionUUID->"85427433-22e3-4265-8dc6-b6af3a8efcbb"],
Cell[92115, 1876, 333, 8, 44, "Input",ExpressionUUID->"5cee94d4-a8ed-468e-9b8d-c8350c5bf922"],
Cell[92451, 1886, 332, 8, 44, "Input",ExpressionUUID->"cc764958-ac50-4f77-a79a-c57fafe1f0d2"],
Cell[92786, 1896, 333, 8, 44, "Input",ExpressionUUID->"33661f04-50d0-460e-ba27-13a7b786c7bc"],
Cell[93122, 1906, 967, 17, 197, "Input",ExpressionUUID->"b36bd0b4-cebf-4a17-8f02-58834c3ca285"],
Cell[94092, 1925, 1368, 23, 216, "Input",ExpressionUUID->"7ad04603-ea44-4e7b-a1f7-8aeeac028da5"],
Cell[95463, 1950, 305, 8, 44, "Input",ExpressionUUID->"9ae6a1b6-c525-4b0c-9d18-ad3e31fe372a"],
Cell[95771, 1960, 363, 8, 44, "Input",ExpressionUUID->"4f2722ba-92f7-42b6-93fa-cde288f9e009"],
Cell[96137, 1970, 546, 11, 64, "Input",ExpressionUUID->"774dd088-019c-4242-b099-c81ca4761ee0"],
Cell[96686, 1983, 465, 10, 64, "Input",ExpressionUUID->"ee2769b9-924f-4b76-aca8-723b63aecac2"],
Cell[97154, 1995, 436, 9, 44, "Input",ExpressionUUID->"e8918365-a39c-4595-8a29-69e2c5fa50e2"],
Cell[97593, 2006, 362, 9, 44, "Input",ExpressionUUID->"adef3af8-5a9a-4fb7-af93-28338f443d0a"],
Cell[97958, 2017, 632, 12, 102, "Input",ExpressionUUID->"78e89fe3-c5c9-4f46-8fb0-3a968f929808"],
Cell[98593, 2031, 575, 11, 121, "Input",ExpressionUUID->"c394d0f9-ce35-496c-a81c-38d55ee81930"],
Cell[99171, 2044, 604, 12, 102, "Input",ExpressionUUID->"12924aee-7b5c-4357-b334-0cfb8f1663bc"],
Cell[99778, 2058, 629, 12, 83, "Input",ExpressionUUID->"ccc12f12-a2b3-4b71-8b7c-680424fba6f1"],
Cell[100410, 2072, 543, 11, 83, "Input",ExpressionUUID->"a938de6a-bcc0-4a19-a2db-dafc09607e05"],
Cell[100956, 2085, 740, 14, 102, "Input",ExpressionUUID->"75dccc36-4010-46cd-90d2-1e649ebbd187"],
Cell[101699, 2101, 470, 10, 83, "Input",ExpressionUUID->"8335fc39-83ca-494e-9cc5-f903681ec2a7"],
Cell[102172, 2113, 282, 7, 44, "Input",ExpressionUUID->"12f0c5ff-b9ed-48ac-8d11-ea2749aeb10d"],
Cell[102457, 2122, 428, 9, 64, "Input",ExpressionUUID->"feb3d2e7-abca-4373-af68-07d785ff0b8f"],
Cell[102888, 2133, 4630, 68, 825, "Input",ExpressionUUID->"d13d99c0-bb52-442c-b41d-da2552da923e"],
Cell[107521, 2203, 431, 10, 44, "Input",ExpressionUUID->"1d9022aa-c8ac-426a-bcdd-3ad76dd72969"],
Cell[107955, 2215, 447, 9, 44, "Input",ExpressionUUID->"367f5442-b7b9-4c12-b8ab-503b76aad912"],
Cell[108405, 2226, 810, 15, 84, "Input",ExpressionUUID->"73d6c368-98c0-4ae2-a0a4-ea8931494e03"],
Cell[109218, 2243, 273, 7, 44, "Input",ExpressionUUID->"a71b7788-a5dc-4540-823d-36649c65104a"],
Cell[109494, 2252, 273, 7, 44, "Input",ExpressionUUID->"b33780ce-f45f-4818-bd26-ef5ef87c1b80"],
Cell[109770, 2261, 455, 10, 44, "Input",ExpressionUUID->"dcbb2dfa-97e6-4f03-81e3-4dc770c7e26c"],
Cell[110228, 2273, 267, 7, 44, "Input",ExpressionUUID->"771c43a9-e390-4903-a0a4-30c4469f8750"],
Cell[110498, 2282, 266, 7, 44, "Input",ExpressionUUID->"b3011071-44da-4b8d-80c2-aeb7d27700db"],
Cell[110767, 2291, 974, 27, 140, "Input",ExpressionUUID->"042dc155-f588-4f04-b69b-7e54a2a7104d"],
Cell[111744, 2320, 2707, 41, 245, "Input",ExpressionUUID->"05c854b7-d91e-42fa-a886-3e7636d5427d"],
Cell[114454, 2363, 1935, 30, 187, "Input",ExpressionUUID->"91da865d-1359-4ed5-826d-03300456d0c4"],
Cell[116392, 2395, 2900, 43, 264, "Input",ExpressionUUID->"e80c81bc-3b43-4382-9c54-79750bc49a4e"],
Cell[119295, 2440, 2131, 32, 225, "Input",ExpressionUUID->"56dc789f-87d9-495e-ae07-d9a3369b501d"],
Cell[121429, 2474, 394, 9, 64, "Input",ExpressionUUID->"a48cee3a-8466-4c15-9c07-c4f3db738d18"],
Cell[121826, 2485, 268, 7, 44, "Input",ExpressionUUID->"ef4b402f-bf8d-4b00-a784-3a50b15122e8"],
Cell[122097, 2494, 266, 7, 44, "Input",ExpressionUUID->"853f2f74-1891-4445-9340-180a84824a53"],
Cell[122366, 2503, 271, 7, 44, "Input",ExpressionUUID->"fe11a467-7e84-4e14-ae5c-01161317eb4c"],
Cell[122640, 2512, 275, 7, 44, "Input",ExpressionUUID->"8c29b4c1-381e-4ff9-824e-7d6a124b3b3a"],
Cell[122918, 2521, 276, 7, 44, "Input",ExpressionUUID->"25a4c101-6ff6-4eb8-98f8-6e0752866ab2"],
Cell[123197, 2530, 274, 7, 44, "Input",ExpressionUUID->"e1dcd959-660b-4749-b2cd-dbfd99fcdaa0"],
Cell[123474, 2539, 275, 7, 44, "Input",ExpressionUUID->"b765ae1f-57ec-4ed9-9aae-9336a85f43e0"],
Cell[123752, 2548, 273, 7, 44, "Input",ExpressionUUID->"8c3e7bd2-5468-43c5-b5ee-fa5d920a9d63"],
Cell[124028, 2557, 4963, 78, 806, "Input",ExpressionUUID->"b2dd57f1-7204-447a-a729-05338730b420"],
Cell[128994, 2637, 813, 15, 121, "Input",ExpressionUUID->"f5c668fe-1fcb-44c9-9c6e-fd5df970cbca"],
Cell[129810, 2654, 313, 8, 44, "Input",ExpressionUUID->"84af59c4-20f3-44f5-849a-1c4acf66e468"],
Cell[130126, 2664, 3749, 59, 616, "Input",ExpressionUUID->"b263856d-fd19-44fd-b458-8706a6560ae9"],
Cell[133878, 2725, 1552, 25, 235, "Input",ExpressionUUID->"4e8d1531-917c-4b3c-ad68-60f08527422e"],
Cell[135433, 2752, 1251, 21, 197, "Input",ExpressionUUID->"64bc11f3-96af-46d7-a9c7-af9709109cff"],
Cell[136687, 2775, 641, 12, 83, "Input",ExpressionUUID->"2a34f9ed-e876-4665-89fa-cf248b76009c"],
Cell[137331, 2789, 3694, 55, 275, "Input",ExpressionUUID->"4c371a5d-4de7-4f8b-9d00-5b573a514191"],
Cell[141028, 2846, 298, 7, 44, "Input",ExpressionUUID->"c9eb7797-dd18-45c9-984c-2bc21dc092db"],
Cell[141329, 2855, 818, 14, 197, "Input",ExpressionUUID->"ed3ebb54-9089-4e8a-942c-f01043d7f3c3"],
Cell[142150, 2871, 1061, 18, 65, "Input",ExpressionUUID->"78bfa249-49ab-4f0b-9312-90a77f8d6da9"],
Cell[143214, 2891, 1246, 21, 103, "Input",ExpressionUUID->"f7585db8-d333-4c7e-b052-0b1c04524d27"],
Cell[144463, 2914, 3243, 50, 144, "Input",ExpressionUUID->"135edb3d-459f-4662-8d16-10cf10b3f6cc"],
Cell[147709, 2966, 299, 7, 44, "Input",ExpressionUUID->"8dc4a523-b80f-47fa-b0cb-1a5631ad11a0"],
Cell[148011, 2975, 293, 7, 44, "Input",ExpressionUUID->"74732cbb-ed15-4a6d-9ec3-5807f712b283"],
Cell[148307, 2984, 647, 12, 121, "Input",ExpressionUUID->"b689139e-523a-43e0-8491-680b2a00c178"],
Cell[148957, 2998, 294, 7, 44, "Input",ExpressionUUID->"28fd0e94-6b66-4fab-82f2-e0556b5d949d"],
Cell[149254, 3007, 296, 7, 44, "Input",ExpressionUUID->"b1d5dcbb-b5b6-4acb-9736-7f867ee27073"],
Cell[149553, 3016, 733, 13, 83, "Input",ExpressionUUID->"451454b6-e4c0-4fe5-b28f-4f73f7626e6e"],
Cell[150289, 3031, 548, 11, 83, "Input",ExpressionUUID->"becfea16-2b4f-40ef-8a19-99d527a5818e"],
Cell[150840, 3044, 315, 8, 44, "Input",ExpressionUUID->"1e2fbfa8-ef6d-4aff-86aa-89f2e690cc2d"],
Cell[151158, 3054, 548, 11, 83, "Input",ExpressionUUID->"648bb260-4ea7-4aa9-9171-e29dd3c351a4"],
Cell[151709, 3067, 1165, 20, 178, "Input",ExpressionUUID->"09986239-2fd1-4fd3-a009-4e962768310f"],
Cell[152877, 3089, 1718, 28, 159, "Input",ExpressionUUID->"f023bf28-3a59-4cce-b124-b26df530e373"],
Cell[154598, 3119, 1851, 29, 178, "Input",ExpressionUUID->"1ffa8208-1ba3-406d-a7be-d7e510ec1c16"],
Cell[156452, 3150, 611, 12, 64, "Input",ExpressionUUID->"ad38aac8-2a4a-4afe-92d4-871a6965c680"],
Cell[157066, 3164, 1627, 26, 330, "Input",ExpressionUUID->"f9f0a90d-c05d-41e7-8322-2bf604010f65"],
Cell[158696, 3192, 10086, 145, 1231, "Input",ExpressionUUID->"3d4edad9-0758-4aa3-b6c4-e6d59564b30e"],
Cell[168785, 3339, 895, 16, 121, "Input",ExpressionUUID->"a1a6f05c-bee0-41af-aeab-d093d2696cc4"],
Cell[169683, 3357, 627, 12, 102, "Input",ExpressionUUID->"b88c469a-c7de-4901-8b6a-181becdcb58e"],
Cell[170313, 3371, 5444, 81, 482, "Input",ExpressionUUID->"df35ea37-e96d-43cb-bc95-ecdc11a0a96c"],
Cell[175760, 3454, 484, 10, 44, "Input",ExpressionUUID->"b001cb14-5bd2-4ed9-ae31-e796f6088ac7"],
Cell[176247, 3466, 310, 8, 44, "Input",ExpressionUUID->"453ee3fe-ecff-4f9d-84ce-b9f209100ba9"],
Cell[176560, 3476, 403, 9, 64, "Input",ExpressionUUID->"6a1b11de-f074-41ad-b94a-b334e7f22f2c"],
Cell[176966, 3487, 2461, 39, 235, "Input",ExpressionUUID->"06ec5f80-1efd-4777-92b9-d3fbe6c42f9d"],
Cell[179430, 3528, 786, 14, 140, "Input",ExpressionUUID->"8874f18a-f094-4d6b-bdb2-4a213d382d09"],
Cell[180219, 3544, 282, 7, 44, "Input",ExpressionUUID->"392e2d95-ebaf-42d0-880f-7f12f34df40d"],
Cell[180504, 3553, 261, 7, 44, "Input",ExpressionUUID->"f0712649-deac-48cd-9ca9-62e259144f90"],
Cell[180768, 3562, 263, 7, 44, "Input",ExpressionUUID->"cd512b29-9d53-484e-b60c-890c03f1460c"],
Cell[181034, 3571, 265, 7, 44, "Input",ExpressionUUID->"e4546962-73ab-4cc5-ab7b-416dd90a70ec"],
Cell[181302, 3580, 479, 10, 44, "Input",ExpressionUUID->"fa6caeb2-0779-49b2-880d-ac56c03c3d20"],
Cell[181784, 3592, 368, 8, 44, "Input",ExpressionUUID->"6ad1a14f-180a-40cf-8ba6-898a24d6883e"],
Cell[182155, 3602, 387, 9, 44, "Input",ExpressionUUID->"063a1ce6-b2b0-4ebe-a687-8b4d8e44c21d"],
Cell[182545, 3613, 614, 12, 64, "Input",ExpressionUUID->"2bbc919b-7161-45d7-a333-53118bb3e57f"],
Cell[183162, 3627, 311, 8, 44, "Input",ExpressionUUID->"cfe77e38-1d0c-45f2-951b-ec23775cff18"],
Cell[183476, 3637, 367, 8, 64, "Input",ExpressionUUID->"7d0a45ae-a761-4491-849c-cf4ba41751fb"],
Cell[183846, 3647, 435, 9, 83, "Input",ExpressionUUID->"45826822-fa17-481a-89fe-c58a4fd77077"],
Cell[184284, 3658, 461, 9, 64, "Input",ExpressionUUID->"bb3dffd7-a05e-45b6-a894-3a4ba2091c76"],
Cell[184748, 3669, 431, 9, 64, "Input",ExpressionUUID->"9fa96333-6b7c-4734-bc42-6634aa447ee8"],
Cell[185182, 3680, 332, 8, 44, "Input",ExpressionUUID->"82b78652-14c8-44b1-880e-67b0dec10b1c"],
Cell[185517, 3690, 410, 9, 44, "Input",ExpressionUUID->"72c9a070-7e8e-4985-9d6a-e40d1eb64810"],
Cell[185930, 3701, 2388, 36, 178, "Input",ExpressionUUID->"31f771b5-ef4c-45f3-8dbb-b3a1ef7a9d20"],
Cell[188321, 3739, 2327, 35, 268, "Input",ExpressionUUID->"9eebf652-3aed-4094-b702-90e2d434e0b2"],
Cell[190651, 3776, 476, 10, 83, "Input",ExpressionUUID->"fbb35911-99a5-4b7a-888b-afe42d9d2b2e"],
Cell[191130, 3788, 502, 10, 83, "Input",ExpressionUUID->"bc18c1b0-aec5-4368-ae39-fb416acfbd0d"],
Cell[191635, 3800, 282, 7, 44, "Input",ExpressionUUID->"46d0e86d-8948-46fa-9a8b-195c3b33fff6"],
Cell[191920, 3809, 478, 10, 83, "Input",ExpressionUUID->"25859ed6-77c9-4ace-8405-2f99cc1f0bda"],
Cell[192401, 3821, 452, 10, 44, "Input",ExpressionUUID->"93292966-2132-4d69-bc04-350ffecce035"],
Cell[192856, 3833, 720, 14, 64, "Input",ExpressionUUID->"9df39e9a-61b6-47fd-a3c8-bfa773de6c74"],
Cell[193579, 3849, 1060, 18, 140, "Input",ExpressionUUID->"21184a59-b51a-4c18-ac00-b7ff498c8206"],
Cell[194642, 3869, 4472, 65, 446, "Input",ExpressionUUID->"ba6a6e4f-d32a-4741-a2a2-4b1801072840"],
Cell[199117, 3936, 3030, 46, 294, "Input",ExpressionUUID->"10f788d8-5238-43ba-9e49-9f4b013b8c91"],
Cell[202150, 3984, 3265, 50, 313, "Input",ExpressionUUID->"ba7ff808-769f-49b9-929e-f9c4c769ec7c"],
Cell[205418, 4036, 8893, 136, 531, "Input",ExpressionUUID->"bba682d9-dd03-49da-a4bb-ed30d5725ddc"],
Cell[214314, 4174, 10684, 164, 630, "Input",ExpressionUUID->"ce87cea9-be2d-4199-bc69-835f6e11a1bb"],
Cell[225001, 4340, 3613, 54, 288, "Input",ExpressionUUID->"9323f713-a883-4504-8c64-8275be15ee9b"],
Cell[228617, 4396, 3129, 48, 259, "Input",ExpressionUUID->"2c37bd2f-c255-4d4a-9189-be2b81c70185"],
Cell[231749, 4446, 813, 15, 83, "Input",ExpressionUUID->"2ccba7b0-ab6c-4519-a0d3-c73794cf5b8e"],
Cell[232565, 4463, 547, 11, 83, "Input",ExpressionUUID->"f2a63eb5-14b3-4c4c-8809-d7c66dcb963c"],
Cell[233115, 4476, 675, 12, 64, "Input",ExpressionUUID->"db403a30-7d31-4f37-aa6b-9b10f6d86325"],
Cell[233793, 4490, 553, 11, 44, "Input",ExpressionUUID->"fbf61599-18a5-4d8b-9e4b-945d85280f0e"],
Cell[234349, 4503, 5888, 89, 668, "Input",ExpressionUUID->"e1f78996-6cbb-4216-8146-d11ded25d55c"],
Cell[240240, 4594, 531, 11, 64, "Input",ExpressionUUID->"85e00da4-d589-4d68-9080-a614ce8d09ae"],
Cell[240774, 4607, 491, 10, 64, "Input",ExpressionUUID->"bb2cc0b4-1735-48a6-bb19-ab4c707320c0"],
Cell[241268, 4619, 492, 10, 64, "Input",ExpressionUUID->"443c3377-6fa5-4906-b229-8d2d9814c4a6"],
Cell[241763, 4631, 460, 10, 44, "Input",ExpressionUUID->"5c0260cf-3d97-42cc-932f-d33cff9ec160"],
Cell[242226, 4643, 910, 16, 140, "Input",ExpressionUUID->"5598bc38-97bc-46b9-82e1-6c91e6d0da3b"],
Cell[243139, 4661, 572, 12, 83, "Input",ExpressionUUID->"d633b856-da7c-4c37-98e7-30100b85e295"],
Cell[243714, 4675, 517, 11, 102, "Input",ExpressionUUID->"00ee285e-1dbd-4885-a7dc-13d4b88d2c41"],
Cell[244234, 4688, 4793, 71, 768, "Input",ExpressionUUID->"c83932ab-60fd-48de-a15f-54c65f429da7"],
Cell[249030, 4761, 313, 7, 44, "Input",ExpressionUUID->"3efba63f-b79e-40e3-890f-44f51e85634e"],
Cell[249346, 4770, 912, 17, 83, "Input",ExpressionUUID->"df8a1a7f-1f7c-4f4f-84e5-7ae3d7d58fd2"],
Cell[250261, 4789, 4614, 68, 749, "Input",ExpressionUUID->"5766df08-7318-4890-9462-c343aca3cd2e"],
Cell[254878, 4859, 910, 15, 159, "Input",ExpressionUUID->"83e15e3d-d5b2-459f-aa3b-2772c53759f6"],
Cell[255791, 4876, 1655, 27, 235, "Input",ExpressionUUID->"f8c18df2-9de1-40a8-81ff-86c875f3f6e7"],
Cell[257449, 4905, 1166, 20, 159, "Input",ExpressionUUID->"15ad3620-02b4-4508-acd7-f18b544a03c4"],
Cell[258618, 4927, 395, 9, 64, "Input",ExpressionUUID->"15a656c8-63c8-4fd2-8c84-5e440dc09191"],
Cell[259016, 4938, 348, 8, 64, "Input",ExpressionUUID->"380920de-6b77-40bd-84d9-21daaba5d697"],
Cell[259367, 4948, 290, 7, 44, "Input",ExpressionUUID->"48153b41-f32b-4b8d-b62c-193cb468ee88"],
Cell[259660, 4957, 280, 7, 44, "Input",ExpressionUUID->"60ddd0cb-fdfd-4d9c-ad8a-e5f39a9c5cb4"],
Cell[259943, 4966, 289, 7, 44, "Input",ExpressionUUID->"bf2b06cf-c2e4-4c23-9c27-a5e066dad001"],
Cell[260235, 4975, 279, 6, 44, "Input",ExpressionUUID->"9d82562d-aa25-4441-aa81-7957d390b619"],
Cell[260517, 4983, 288, 7, 44, "Input",ExpressionUUID->"5f52ec6b-049a-422f-81b3-c2125507adab"],
Cell[260808, 4992, 283, 7, 44, "Input",ExpressionUUID->"572bdc7b-6a13-43a7-871d-ff9401e844e1"],
Cell[261094, 5001, 1266, 21, 103, "Input",ExpressionUUID->"ca1d75f7-c755-408e-8e35-754a349858f3"],
Cell[262363, 5024, 338, 8, 44, "Input",ExpressionUUID->"1f422741-28ac-428e-a15e-415f3ffc7d9b"],
Cell[262704, 5034, 1642, 27, 273, "Input",ExpressionUUID->"e88a41e8-2a60-44ce-9b97-219dc410a8fe"],
Cell[264349, 5063, 3313, 51, 221, "Input",ExpressionUUID->"cf01cc9d-93ba-49b7-8545-589318eac278"],
Cell[267665, 5116, 3279, 51, 254, "Input",ExpressionUUID->"9dc07174-54b5-481e-a832-6ab1e57aed88"],
Cell[270947, 5169, 1956, 31, 104, "Input",ExpressionUUID->"81124fd3-a5aa-4a72-ad70-c2e9f4d8dbb6"],
Cell[272906, 5202, 1943, 31, 140, "Input",ExpressionUUID->"d360118f-0aff-490b-af08-b0192b376d74"],
Cell[274852, 5235, 3200, 48, 388, "Input",ExpressionUUID->"35315cd5-456b-42b9-987c-9216bf565b28"],
Cell[278055, 5285, 1678, 28, 311, "Input",ExpressionUUID->"67dc34db-81c4-49a9-a26b-b4ad22783d6d"],
Cell[279736, 5315, 300, 8, 44, "Input",ExpressionUUID->"f70134eb-0b8d-4ff2-a87f-eaacc9510bbb"],
Cell[280039, 5325, 317, 8, 44, "Input",ExpressionUUID->"6f3b01cf-65fc-4583-a1ac-829f06b03644"],
Cell[280359, 5335, 1576, 25, 160, "Input",ExpressionUUID->"0fd92bf2-600a-44ee-a4cf-57090c96d9d1"],
Cell[281938, 5362, 2371, 36, 219, "Input",ExpressionUUID->"43284356-18ce-4166-9d6f-af181be923ab"],
Cell[284312, 5400, 2659, 40, 180, "Input",ExpressionUUID->"6e4f53b7-a296-4754-a03d-9e4d85acd5f5"],
Cell[286974, 5442, 3787, 57, 273, "Input",ExpressionUUID->"ff1a27aa-c4c8-45ee-b9c2-9ea8464b9fdb"],
Cell[290764, 5501, 302, 8, 44, "Input",ExpressionUUID->"7820ed23-0ac6-45b4-b17d-e447f62d6b76"],
Cell[291069, 5511, 481, 10, 64, "Input",ExpressionUUID->"ade084e0-3ce8-453a-8ca7-2d9cb09c210e"],
Cell[291553, 5523, 2376, 36, 314, "Input",ExpressionUUID->"c2063c4c-e263-47e6-9bdb-87ee1604c755"],
Cell[293932, 5561, 267, 6, 44, "Input",ExpressionUUID->"e8130049-c3e9-48b9-8c07-7f0464da0706"],
Cell[294202, 5569, 3024, 45, 482, "Input",ExpressionUUID->"a7de6914-31e4-466f-a2aa-56ae954a5d6f"],
Cell[297229, 5616, 338, 8, 44, "Input",ExpressionUUID->"2460782b-1d59-4657-b2c6-49cf3768dfe6"],
Cell[297570, 5626, 1099, 18, 121, "Input",ExpressionUUID->"4bcb7287-9815-494d-af3c-f938102f5d0d"],
Cell[298672, 5646, 385, 9, 83, "Input",ExpressionUUID->"4e79c775-44e7-4e1f-8f28-4fbeb433970e"],
Cell[299060, 5657, 281, 7, 44, "Input",ExpressionUUID->"23766607-5164-45a7-9f52-b5802a45364f"],
Cell[299344, 5666, 292, 7, 44, "Input",ExpressionUUID->"6e7801cc-4b21-49b3-a2a7-1b99a80eeeda"],
Cell[299639, 5675, 279, 7, 44, "Input",ExpressionUUID->"ce07adae-f34c-42c9-b716-b1806ca514d0"],
Cell[299921, 5684, 298, 7, 44, "Input",ExpressionUUID->"ee3828ea-7236-4ffe-8d29-6e2ee875818f"],
Cell[300222, 5693, 278, 7, 44, "Input",ExpressionUUID->"5c583fb3-0173-4942-a502-9e6f064773b2"],
Cell[300503, 5702, 274, 7, 44, "Input",ExpressionUUID->"fe27cae7-413a-4748-b435-3ee3d9dab955"],
Cell[300780, 5711, 271, 7, 44, "Input",ExpressionUUID->"13800b8c-984c-4941-a8c7-40b2f8d3d342"],
Cell[301054, 5720, 4554, 68, 376, "Input",ExpressionUUID->"bbac83f2-aa9e-451f-b1ea-5bd3ff16c623"],
Cell[305611, 5790, 1963, 32, 123, "Input",ExpressionUUID->"014365c9-565b-4d71-8edf-d6c178209cd8"],
Cell[307577, 5824, 4473, 65, 376, "Input",ExpressionUUID->"3765c25e-86ae-4c3f-a4d2-e7b66e4d9432"],
Cell[312053, 5891, 3332, 50, 224, "Input",ExpressionUUID->"aac7ea48-9420-4844-870e-1f323692b97e"],
Cell[315388, 5943, 1991, 31, 198, "Input",ExpressionUUID->"d26433ba-9618-4678-96a9-ce3ceddd45a4"],
Cell[317382, 5976, 486, 10, 64, "Input",ExpressionUUID->"e621600d-ff50-4235-bc5e-6042414b54d6"],
Cell[317871, 5988, 4229, 62, 359, "Input",ExpressionUUID->"fca4702a-2cab-4df5-a1e5-b022a689f4bb"],
Cell[322103, 6052, 288, 7, 44, "Input",ExpressionUUID->"9cf2b0e1-4e7b-4b3e-acf9-baa76f221c41"],
Cell[322394, 6061, 285, 7, 44, "Input",ExpressionUUID->"65d5c864-28d3-4e19-a99a-5770b2f3763b"],
Cell[322682, 6070, 284, 7, 44, "Input",ExpressionUUID->"d8f34db2-8d6f-4efb-8977-f3f19b30c1f8"],
Cell[322969, 6079, 274, 7, 44, "Input",ExpressionUUID->"ac2bf290-8b8a-4819-8a59-717b4086c358"],
Cell[323246, 6088, 282, 7, 44, "Input",ExpressionUUID->"565dd175-8c11-480a-8d33-4a9b1e4263df"],
Cell[323531, 6097, 280, 7, 44, "Input",ExpressionUUID->"b9d9661d-cb52-4d1e-a74f-d8cfa1deb721"],
Cell[323814, 6106, 273, 7, 44, "Input",ExpressionUUID->"5b80554b-77db-494b-96c8-57125b4f29b3"],
Cell[324090, 6115, 271, 7, 44, "Input",ExpressionUUID->"45c8ca11-6e6b-45c5-92d5-0813b5c0580e"],
Cell[324364, 6124, 277, 7, 44, "Input",ExpressionUUID->"104abb4d-9b10-47fc-82f9-cc516598b646"],
Cell[324644, 6133, 279, 7, 44, "Input",ExpressionUUID->"3c6846b1-6b8a-4dce-8389-e92f471b5d4c"],
Cell[324926, 6142, 279, 7, 44, "Input",ExpressionUUID->"1a395710-5cfd-455b-8106-e6749f2023ae"],
Cell[325208, 6151, 280, 7, 44, "Input",ExpressionUUID->"024b2b95-8480-46f6-911a-fb67505be54e"],
Cell[325491, 6160, 270, 7, 44, "Input",ExpressionUUID->"bf5d332b-a35f-459b-86ee-63231861cb84"],
Cell[325764, 6169, 275, 7, 44, "Input",ExpressionUUID->"2ed782ff-f6ba-4cab-a2e8-50e21b541012"],
Cell[326042, 6178, 279, 7, 44, "Input",ExpressionUUID->"17c43c8f-2629-4259-9d35-30650d12dd6d"],
Cell[326324, 6187, 287, 7, 44, "Input",ExpressionUUID->"b728dcc9-d209-4683-b8fd-120bc017ba74"],
Cell[326614, 6196, 296, 7, 44, "Input",ExpressionUUID->"b2ff5039-19a2-4fd4-89ed-2d83d72e14d7"],
Cell[326913, 6205, 279, 7, 44, "Input",ExpressionUUID->"5ce6d85c-3147-4191-ab8f-e2451055608d"],
Cell[327195, 6214, 271, 7, 44, "Input",ExpressionUUID->"f47f4d29-53d7-4f5f-96a2-31389352884c"],
Cell[327469, 6223, 278, 7, 44, "Input",ExpressionUUID->"55a91567-255d-4838-85aa-76a4e00ef135"],
Cell[327750, 6232, 272, 7, 44, "Input",ExpressionUUID->"14c7fecf-7fce-4815-a8a6-3f43cb123431"],
Cell[328025, 6241, 294, 7, 44, "Input",ExpressionUUID->"00daa616-9142-4c2a-8781-e03bee704ebb"],
Cell[328322, 6250, 269, 7, 44, "Input",ExpressionUUID->"65912eab-bf9c-46a4-a8aa-4b5e1137a1fd"],
Cell[328594, 6259, 279, 7, 44, "Input",ExpressionUUID->"f1ad287e-4e5d-4897-ba77-60769baae9d1"],
Cell[328876, 6268, 112, 1, 50, "Code",ExpressionUUID->"ad49df4e-514b-44a3-a3ff-c11d4c5cd007"]
}
]
*)

